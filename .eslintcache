[{"C:\\react-main\\src\\index.js":"1","C:\\react-main\\src\\component\\Loader.jsx":"2","C:\\react-main\\src\\Main.js":"3","C:\\react-main\\src\\serviceWorker.js":"4","C:\\react-main\\src\\helper\\config.js":"5","C:\\react-main\\src\\firebase.js":"6","C:\\react-main\\src\\component\\modal.jsx":"7","C:\\react-main\\src\\router\\Private.jsx":"8","C:\\react-main\\src\\router\\Public.jsx":"9","C:\\react-main\\src\\container\\Auth\\Signin.jsx":"10","C:\\react-main\\src\\container\\Auth\\Signup.jsx":"11","C:\\react-main\\src\\container\\Auth\\genAgreement.jsx":"12","C:\\react-main\\src\\container\\Auth\\SessionModal.jsx":"13","C:\\react-main\\src\\container\\Auth\\docVerify.jsx":"14","C:\\react-main\\src\\container\\team_management\\teamManagement.jsx":"15","C:\\react-main\\src\\container\\Auth\\dashboard.jsx":"16","C:\\react-main\\src\\container\\Auth\\SignupVerification.jsx":"17","C:\\react-main\\src\\container\\users_management\\userManagement.jsx":"18","C:\\react-main\\src\\container\\Tik\\AddMetadata.jsx":"19","C:\\react-main\\src\\container\\roles_management\\rolesManagement.jsx":"20","C:\\react-main\\src\\container\\Tik\\SelectTemplate.jsx":"21","C:\\react-main\\src\\container\\Tik\\CreateTik.jsx":"22","C:\\react-main\\src\\container\\Tik\\TikListing.jsx":"23","C:\\react-main\\src\\container\\Tik\\EditDraft.jsx":"24","C:\\react-main\\src\\container\\Tik\\ViewTik.jsx":"25","C:\\react-main\\src\\container\\Template\\SelectAcceptanceTemp.jsx":"26","C:\\react-main\\src\\container\\Template\\TemplateList.jsx":"27","C:\\react-main\\src\\container\\Tik\\UpdateTik.jsx":"28","C:\\react-main\\src\\container\\Tik\\ViewDraft.jsx":"29","C:\\react-main\\src\\container\\Template\\TemplateView.jsx":"30","C:\\react-main\\src\\container\\Template\\editTemplate.jsx":"31","C:\\react-main\\src\\container\\Profile\\Invoice.jsx":"32","C:\\react-main\\src\\container\\reports\\TikReport.jsx":"33","C:\\react-main\\src\\container\\Template\\AddTemplate.jsx":"34","C:\\react-main\\src\\container\\transaction_history\\transactionHistory.jsx":"35","C:\\react-main\\src\\container\\search\\Search.jsx":"36","C:\\react-main\\src\\container\\Profile\\Profile.jsx":"37","C:\\react-main\\src\\container\\Subscription\\Subscription.jsx":"38","C:\\react-main\\src\\container\\Payment\\Payments.jsx":"39","C:\\react-main\\src\\container\\reports\\TorReport.jsx":"40","C:\\react-main\\src\\container\\reports\\TeamReport.jsx":"41","C:\\react-main\\src\\container\\transaction_history\\transactionDetail.jsx":"42","C:\\react-main\\src\\container\\Analytics\\Analytics.jsx":"43","C:\\react-main\\src\\container\\Faq\\Faq.jsx":"44","C:\\react-main\\src\\container\\Help\\Help.jsx":"45","C:\\react-main\\src\\container\\Analytics\\ApiDetail.jsx":"46","C:\\react-main\\src\\container\\Notification\\Notification.jsx":"47","C:\\react-main\\src\\container\\Terms\\Terms.jsx":"48","C:\\react-main\\src\\container\\Analytics\\ApiUsage.jsx":"49","C:\\react-main\\src\\store\\index.js":"50","C:\\react-main\\src\\component\\SuccessModal.jsx":"51","C:\\react-main\\src\\helper\\utility.js":"52","C:\\react-main\\src\\component\\index.jsx":"53","C:\\react-main\\src\\constants\\Mapper.js":"54","C:\\react-main\\src\\assets\\images.js":"55","C:\\react-main\\src\\actions\\index.js":"56","C:\\react-main\\src\\reducers\\index.js":"57","C:\\react-main\\src\\container\\reports\\TorFilter.jsx":"58","C:\\react-main\\src\\container\\reports\\TikFilter.jsx":"59","C:\\react-main\\src\\constants\\Constants.js":"60","C:\\react-main\\src\\component\\ExpiryDateInput.jsx":"61","C:\\react-main\\src\\component\\HeaderWithoutSearch.jsx":"62","C:\\react-main\\src\\component\\AddTagForm.jsx":"63","C:\\react-main\\src\\component\\SearchForm.jsx":"64","C:\\react-main\\src\\component\\Search.jsx":"65","C:\\react-main\\src\\component\\TorReport.jsx":"66","C:\\react-main\\src\\container\\reports\\DateFilter.jsx":"67","C:\\react-main\\src\\sagas\\index.js":"68","C:\\react-main\\src\\helper\\rounderChart.js":"69","C:\\react-main\\src\\actions\\Notification.js":"70","C:\\react-main\\src\\actions\\Transaction.js":"71","C:\\react-main\\src\\actions\\Help.js":"72","C:\\react-main\\src\\reducers\\Notification.js":"73","C:\\react-main\\src\\reducers\\Transaction.js":"74","C:\\react-main\\src\\reducers\\Analytics.js":"75","C:\\react-main\\src\\reducers\\Help.js":"76","C:\\react-main\\src\\reducers\\Payment.js":"77","C:\\react-main\\src\\reducers\\Search.js":"78","C:\\react-main\\src\\reducers\\Subscription.js":"79","C:\\react-main\\src\\reducers\\Reports.js":"80","C:\\react-main\\src\\reducers\\Profile.js":"81","C:\\react-main\\src\\reducers\\Tik.js":"82","C:\\react-main\\src\\reducers\\Template.js":"83","C:\\react-main\\src\\reducers\\Role.js":"84","C:\\react-main\\src\\reducers\\User.js":"85","C:\\react-main\\src\\reducers\\Team.js":"86","C:\\react-main\\src\\reducers\\Auth.js":"87","C:\\react-main\\src\\sagas\\Notification.js":"88","C:\\react-main\\src\\sagas\\Transaction.js":"89","C:\\react-main\\src\\constants\\ActionTypes.js":"90","C:\\react-main\\src\\services\\index.js":"91","C:\\react-main\\src\\sagas\\Analytics.js":"92","C:\\react-main\\src\\sagas\\Help.js":"93","C:\\react-main\\src\\sagas\\Subscriptions.js":"94","C:\\react-main\\src\\sagas\\Payment.js":"95","C:\\react-main\\src\\sagas\\Search.js":"96","C:\\react-main\\src\\sagas\\Reports.js":"97","C:\\react-main\\src\\sagas\\Tik.js":"98","C:\\react-main\\src\\sagas\\Profile.js":"99","C:\\react-main\\src\\sagas\\Template.js":"100","C:\\react-main\\src\\sagas\\User.js":"101","C:\\react-main\\src\\sagas\\Auth.js":"102","C:\\react-main\\src\\sagas\\Role.js":"103","C:\\react-main\\src\\sagas\\Team.js":"104","C:\\react-main\\src\\actions\\Payment.js":"105","C:\\react-main\\src\\actions\\Analytics.js":"106","C:\\react-main\\src\\actions\\Subscriptions.js":"107","C:\\react-main\\src\\actions\\Search.js":"108","C:\\react-main\\src\\actions\\Reports.js":"109","C:\\react-main\\src\\actions\\Tik.js":"110","C:\\react-main\\src\\actions\\Profile.js":"111","C:\\react-main\\src\\actions\\User.js":"112","C:\\react-main\\src\\actions\\Template.js":"113","C:\\react-main\\src\\actions\\Role.js":"114","C:\\react-main\\src\\actions\\Team.js":"115","C:\\react-main\\src\\actions\\Auth.js":"116","C:\\react-main\\src\\component\\DocDropdown.jsx":"117","C:\\react-main\\src\\component\\Reports.jsx":"118","C:\\react-main\\src\\component\\TikHistoryTable.jsx":"119","C:\\react-main\\src\\component\\errorMessage.jsx":"120","C:\\react-main\\src\\component\\multiSelectDropDown.jsx":"121","C:\\react-main\\src\\component\\textArea.jsx":"122","C:\\react-main\\src\\component\\successPopup.jsx":"123","C:\\react-main\\src\\component\\table.jsx":"124","C:\\react-main\\src\\component\\dropDown.jsx":"125","C:\\react-main\\src\\component\\Notification.jsx":"126","C:\\react-main\\src\\component\\footer.jsx":"127","C:\\react-main\\src\\component\\loginHeader.jsx":"128","C:\\react-main\\src\\component\\withLayoutContainer.jsx":"129","C:\\react-main\\src\\component\\sideMenu.jsx":"130","C:\\react-main\\src\\component\\profileDropDown.jsx":"131","C:\\react-main\\src\\component\\docVerifyForm.jsx":"132","C:\\react-main\\src\\component\\button.jsx":"133","C:\\react-main\\src\\component\\checkbox.jsx":"134","C:\\react-main\\src\\component\\input.jsx":"135","C:\\react-main\\src\\component\\Header.jsx":"136","C:\\react-main\\src\\container\\Profile\\MobileOtpModal.jsx":"137","C:\\react-main\\src\\container\\Profile\\MobileUpdateModal.jsx":"138","C:\\react-main\\src\\container\\Template\\LivePreview.jsx":"139","C:\\react-main\\src\\container\\Template\\RecentAttribute.jsx":"140","C:\\react-main\\src\\container\\Template\\DragDrop.jsx":"141","C:\\react-main\\src\\container\\Template\\StaticTemplate.jsx":"142","C:\\react-main\\src\\container\\Tik\\DraftMobileView.jsx":"143","C:\\react-main\\src\\schema\\createTemplateSchema.js":"144","C:\\react-main\\src\\container\\Template\\DeleteTemplatePopup.jsx":"145","C:\\react-main\\src\\container\\Tik\\SharedModal.jsx":"146","C:\\react-main\\src\\container\\Tik\\SharedMeModal.jsx":"147","C:\\react-main\\src\\container\\Tik\\AddTag.jsx":"148","C:\\react-main\\src\\container\\Tik\\deleteDraftTikPopup.jsx":"149","C:\\react-main\\src\\container\\Tik\\MobileView.jsx":"150","C:\\react-main\\src\\container\\roles_management\\viewRolePopup.jsx":"151","C:\\react-main\\src\\container\\roles_management\\addRolesPopup.jsx":"152","C:\\react-main\\src\\container\\roles_management\\deleteRolesPopup.jsx":"153","C:\\react-main\\src\\container\\roles_management\\editRolesPopup.jsx":"154","C:\\react-main\\src\\container\\users_management\\editUserPopup.jsx":"155","C:\\react-main\\src\\container\\users_management\\addUserPopup.jsx":"156","C:\\react-main\\src\\container\\users_management\\viewUserPopup.jsx":"157","C:\\react-main\\src\\container\\users_management\\deleteUserPopup.jsx":"158","C:\\react-main\\src\\container\\team_management\\viewTeamPopup.jsx":"159","C:\\react-main\\src\\container\\Auth\\OnLoadModal.jsx":"160","C:\\react-main\\src\\container\\team_management\\addTeamPopup.jsx":"161","C:\\react-main\\src\\container\\team_management\\editTeamPopup.jsx":"162","C:\\react-main\\src\\container\\team_management\\deleteTeamPopup.jsx":"163","C:\\react-main\\src\\container\\Auth\\DocVerificationModal.jsx":"164","C:\\react-main\\src\\container\\Auth\\ConfirmSignupSuccess.jsx":"165","C:\\react-main\\src\\container\\Auth\\ConfirmSignup.jsx":"166","C:\\react-main\\src\\container\\Auth\\CompleteNewPassword.jsx":"167","C:\\react-main\\src\\schema\\docVerifySchema.js":"168","C:\\react-main\\src\\container\\Auth\\TwoFactorAuthentication.jsx":"169","C:\\react-main\\src\\container\\Auth\\MobileVerification.jsx":"170","C:\\react-main\\src\\container\\Auth\\ForgotPasswordVerification.jsx":"171","C:\\react-main\\src\\container\\Auth\\ForgotPassword.jsx":"172","C:\\react-main\\src\\container\\Template\\ThumbnailTemplate.jsx":"173","C:\\react-main\\src\\container\\Template\\TextTemplate.jsx":"174","C:\\react-main\\src\\container\\Template\\AttributeTemplate.jsx":"175","C:\\react-main\\src\\schema\\authenticationFormSchema.js":"176","C:\\react-main\\src\\schema\\rolesSchema.js":"177","C:\\react-main\\src\\schema\\forgotpasswordSchema.js":"178","C:\\react-main\\src\\schema\\userSchema.js":"179","C:\\react-main\\src\\schema\\userEditSchema.js":"180","C:\\react-main\\src\\schema\\signInSchema.js":"181","C:\\react-main\\src\\schema\\addTeamSchema.js":"182"},{"size":2478,"mtime":1615137965000,"results":"183","hashOfConfig":"184"},{"size":120,"mtime":1615137965000,"results":"185","hashOfConfig":"184"},{"size":17637,"mtime":1615137965000,"results":"186","hashOfConfig":"184"},{"size":5203,"mtime":1615137965000,"results":"187","hashOfConfig":"184"},{"size":265,"mtime":1615137965000,"results":"188","hashOfConfig":"184"},{"size":466,"mtime":1615137965000,"results":"189","hashOfConfig":"184"},{"size":1498,"mtime":1615137965000,"results":"190","hashOfConfig":"184"},{"size":987,"mtime":1615137965000,"results":"191","hashOfConfig":"184"},{"size":768,"mtime":1615137965000,"results":"192","hashOfConfig":"184"},{"size":16502,"mtime":1615137965000,"results":"193","hashOfConfig":"184"},{"size":22878,"mtime":1617286840428,"results":"194","hashOfConfig":"184"},{"size":6560,"mtime":1615137965000,"results":"195","hashOfConfig":"184"},{"size":1739,"mtime":1615137965000,"results":"196","hashOfConfig":"184"},{"size":906,"mtime":1615137965000,"results":"197","hashOfConfig":"184"},{"size":8014,"mtime":1615137965000,"results":"198","hashOfConfig":"184"},{"size":9528,"mtime":1615137965000,"results":"199","hashOfConfig":"184"},{"size":6129,"mtime":1615137965000,"results":"200","hashOfConfig":"184"},{"size":8387,"mtime":1615137965000,"results":"201","hashOfConfig":"184"},{"size":8794,"mtime":1615137965000,"results":"202","hashOfConfig":"184"},{"size":7945,"mtime":1615137965000,"results":"203","hashOfConfig":"184"},{"size":11015,"mtime":1615137965000,"results":"204","hashOfConfig":"184"},{"size":73358,"mtime":1615137965000,"results":"205","hashOfConfig":"184"},{"size":13205,"mtime":1615137965000,"results":"206","hashOfConfig":"184"},{"size":97205,"mtime":1615137965000,"results":"207","hashOfConfig":"184"},{"size":34094,"mtime":1615137965000,"results":"208","hashOfConfig":"184"},{"size":5879,"mtime":1615137965000,"results":"209","hashOfConfig":"184"},{"size":9387,"mtime":1615137965000,"results":"210","hashOfConfig":"184"},{"size":85869,"mtime":1615137965000,"results":"211","hashOfConfig":"184"},{"size":79229,"mtime":1615137965000,"results":"212","hashOfConfig":"184"},{"size":18843,"mtime":1615137965000,"results":"213","hashOfConfig":"184"},{"size":24150,"mtime":1615137965000,"results":"214","hashOfConfig":"184"},{"size":9593,"mtime":1615137965000,"results":"215","hashOfConfig":"184"},{"size":7941,"mtime":1615137965000,"results":"216","hashOfConfig":"184"},{"size":21949,"mtime":1615137965000,"results":"217","hashOfConfig":"184"},{"size":3825,"mtime":1615137965000,"results":"218","hashOfConfig":"184"},{"size":10590,"mtime":1615137965000,"results":"219","hashOfConfig":"184"},{"size":59441,"mtime":1615137965000,"results":"220","hashOfConfig":"184"},{"size":10697,"mtime":1615137965000,"results":"221","hashOfConfig":"184"},{"size":44500,"mtime":1615137965000,"results":"222","hashOfConfig":"184"},{"size":6949,"mtime":1615137965000,"results":"223","hashOfConfig":"184"},{"size":6934,"mtime":1615137965000,"results":"224","hashOfConfig":"184"},{"size":7310,"mtime":1615137965000,"results":"225","hashOfConfig":"184"},{"size":13288,"mtime":1615137965000,"results":"226","hashOfConfig":"184"},{"size":8214,"mtime":1615137965000,"results":"227","hashOfConfig":"184"},{"size":10517,"mtime":1615137965000,"results":"228","hashOfConfig":"184"},{"size":6615,"mtime":1615137965000,"results":"229","hashOfConfig":"184"},{"size":4510,"mtime":1615137965000,"results":"230","hashOfConfig":"184"},{"size":11168,"mtime":1615137965000,"results":"231","hashOfConfig":"184"},{"size":3165,"mtime":1615137965000,"results":"232","hashOfConfig":"184"},{"size":535,"mtime":1615137965000,"results":"233","hashOfConfig":"184"},{"size":1635,"mtime":1615137965000,"results":"234","hashOfConfig":"184"},{"size":2726,"mtime":1615137965000,"results":"235","hashOfConfig":"184"},{"size":1586,"mtime":1615137965000,"results":"236","hashOfConfig":"184"},{"size":6233,"mtime":1615137965000,"results":"237","hashOfConfig":"184"},{"size":2986,"mtime":1615137965000,"results":"238","hashOfConfig":"184"},{"size":465,"mtime":1615137965000,"results":"239","hashOfConfig":"184"},{"size":1035,"mtime":1615137965000,"results":"240","hashOfConfig":"184"},{"size":14607,"mtime":1615137965000,"results":"241","hashOfConfig":"184"},{"size":3744,"mtime":1615137965000,"results":"242","hashOfConfig":"184"},{"size":2089,"mtime":1615137965000,"results":"243","hashOfConfig":"184"},{"size":7461,"mtime":1615137965000,"results":"244","hashOfConfig":"184"},{"size":7673,"mtime":1615137965000,"results":"245","hashOfConfig":"184"},{"size":556,"mtime":1615137965000,"results":"246","hashOfConfig":"184"},{"size":14079,"mtime":1615137965000,"results":"247","hashOfConfig":"184"},{"size":6037,"mtime":1615137965000,"results":"248","hashOfConfig":"184"},{"size":3729,"mtime":1615137965000,"results":"249","hashOfConfig":"184"},{"size":2192,"mtime":1615137965000,"results":"250","hashOfConfig":"184"},{"size":887,"mtime":1615137965000,"results":"251","hashOfConfig":"184"},{"size":4848,"mtime":1615137965000,"results":"252","hashOfConfig":"184"},{"size":782,"mtime":1615137965000,"results":"253","hashOfConfig":"184"},{"size":671,"mtime":1615137965000,"results":"254","hashOfConfig":"184"},{"size":554,"mtime":1615137965000,"results":"255","hashOfConfig":"184"},{"size":1238,"mtime":1615137965000,"results":"256","hashOfConfig":"184"},{"size":1234,"mtime":1615137965000,"results":"257","hashOfConfig":"184"},{"size":1476,"mtime":1615137965000,"results":"258","hashOfConfig":"184"},{"size":1207,"mtime":1615137965000,"results":"259","hashOfConfig":"184"},{"size":1665,"mtime":1615137965000,"results":"260","hashOfConfig":"184"},{"size":2571,"mtime":1615137965000,"results":"261","hashOfConfig":"184"},{"size":2835,"mtime":1615137965000,"results":"262","hashOfConfig":"184"},{"size":2565,"mtime":1615137965000,"results":"263","hashOfConfig":"184"},{"size":4262,"mtime":1615137965000,"results":"264","hashOfConfig":"184"},{"size":7105,"mtime":1615137965000,"results":"265","hashOfConfig":"184"},{"size":4974,"mtime":1615137965000,"results":"266","hashOfConfig":"184"},{"size":3084,"mtime":1615137965000,"results":"267","hashOfConfig":"184"},{"size":2753,"mtime":1615137965000,"results":"268","hashOfConfig":"184"},{"size":2832,"mtime":1615137965000,"results":"269","hashOfConfig":"184"},{"size":2544,"mtime":1615137965000,"results":"270","hashOfConfig":"184"},{"size":3606,"mtime":1615137965000,"results":"271","hashOfConfig":"184"},{"size":3661,"mtime":1615137965000,"results":"272","hashOfConfig":"184"},{"size":18866,"mtime":1615137965000,"results":"273","hashOfConfig":"184"},{"size":2985,"mtime":1615137965000,"results":"274","hashOfConfig":"184"},{"size":5684,"mtime":1615137965000,"results":"275","hashOfConfig":"184"},{"size":3560,"mtime":1615137965000,"results":"276","hashOfConfig":"184"},{"size":10702,"mtime":1615137965000,"results":"277","hashOfConfig":"184"},{"size":6165,"mtime":1615137965000,"results":"278","hashOfConfig":"184"},{"size":6137,"mtime":1615137965000,"results":"279","hashOfConfig":"184"},{"size":7095,"mtime":1615137965000,"results":"280","hashOfConfig":"184"},{"size":26628,"mtime":1615137965000,"results":"281","hashOfConfig":"184"},{"size":7699,"mtime":1615137965000,"results":"282","hashOfConfig":"184"},{"size":14336,"mtime":1615137965000,"results":"283","hashOfConfig":"184"},{"size":9168,"mtime":1615137965000,"results":"284","hashOfConfig":"184"},{"size":8804,"mtime":1615137965000,"results":"285","hashOfConfig":"184"},{"size":6402,"mtime":1615137965000,"results":"286","hashOfConfig":"184"},{"size":7022,"mtime":1615137965000,"results":"287","hashOfConfig":"184"},{"size":1012,"mtime":1615137965000,"results":"288","hashOfConfig":"184"},{"size":945,"mtime":1615137965000,"results":"289","hashOfConfig":"184"},{"size":2032,"mtime":1615137965000,"results":"290","hashOfConfig":"184"},{"size":2103,"mtime":1615137965000,"results":"291","hashOfConfig":"184"},{"size":1570,"mtime":1615137965000,"results":"292","hashOfConfig":"184"},{"size":6839,"mtime":1615137965000,"results":"293","hashOfConfig":"184"},{"size":1244,"mtime":1615137965000,"results":"294","hashOfConfig":"184"},{"size":2610,"mtime":1615137965000,"results":"295","hashOfConfig":"184"},{"size":4948,"mtime":1615137965000,"results":"296","hashOfConfig":"184"},{"size":2586,"mtime":1615137965000,"results":"297","hashOfConfig":"184"},{"size":3509,"mtime":1615137965000,"results":"298","hashOfConfig":"184"},{"size":2150,"mtime":1615137965000,"results":"299","hashOfConfig":"184"},{"size":2227,"mtime":1615137965000,"results":"300","hashOfConfig":"184"},{"size":2098,"mtime":1615137965000,"results":"301","hashOfConfig":"184"},{"size":14183,"mtime":1615137965000,"results":"302","hashOfConfig":"184"},{"size":375,"mtime":1615137965000,"results":"303","hashOfConfig":"184"},{"size":1149,"mtime":1615137965000,"results":"304","hashOfConfig":"184"},{"size":1350,"mtime":1615137965000,"results":"305","hashOfConfig":"184"},{"size":553,"mtime":1615137965000,"results":"306","hashOfConfig":"184"},{"size":4439,"mtime":1615137965000,"results":"307","hashOfConfig":"184"},{"size":1228,"mtime":1615137965000,"results":"308","hashOfConfig":"184"},{"size":1698,"mtime":1615137965000,"results":"309","hashOfConfig":"184"},{"size":1242,"mtime":1615137965000,"results":"310","hashOfConfig":"184"},{"size":8936,"mtime":1615137965000,"results":"311","hashOfConfig":"184"},{"size":735,"mtime":1615137965000,"results":"312","hashOfConfig":"184"},{"size":19042,"mtime":1615137965000,"results":"313","hashOfConfig":"184"},{"size":2915,"mtime":1615137965000,"results":"314","hashOfConfig":"184"},{"size":3173,"mtime":1615137965000,"results":"315","hashOfConfig":"184"},{"size":631,"mtime":1615137965000,"results":"316","hashOfConfig":"184"},{"size":962,"mtime":1615137965000,"results":"317","hashOfConfig":"184"},{"size":1002,"mtime":1615137965000,"results":"318","hashOfConfig":"184"},{"size":1089,"mtime":1615137965000,"results":"319","hashOfConfig":"184"},{"size":7558,"mtime":1615137965000,"results":"320","hashOfConfig":"184"},{"size":7246,"mtime":1615137965000,"results":"321","hashOfConfig":"184"},{"size":2015,"mtime":1615137965000,"results":"322","hashOfConfig":"184"},{"size":1407,"mtime":1615137965000,"results":"323","hashOfConfig":"184"},{"size":5886,"mtime":1615137965000,"results":"324","hashOfConfig":"184"},{"size":5294,"mtime":1615137965000,"results":"325","hashOfConfig":"184"},{"size":10811,"mtime":1615137965000,"results":"326","hashOfConfig":"184"},{"size":558,"mtime":1615137965000,"results":"327","hashOfConfig":"184"},{"size":1199,"mtime":1615137965000,"results":"328","hashOfConfig":"184"},{"size":1466,"mtime":1615137965000,"results":"329","hashOfConfig":"184"},{"size":1401,"mtime":1615137965000,"results":"330","hashOfConfig":"184"},{"size":4430,"mtime":1615137965000,"results":"331","hashOfConfig":"184"},{"size":1139,"mtime":1615137965000,"results":"332","hashOfConfig":"184"},{"size":9023,"mtime":1615137965000,"results":"333","hashOfConfig":"184"},{"size":17306,"mtime":1615137965000,"results":"334","hashOfConfig":"184"},{"size":18177,"mtime":1615137965000,"results":"335","hashOfConfig":"184"},{"size":1284,"mtime":1615137965000,"results":"336","hashOfConfig":"184"},{"size":17881,"mtime":1615137965000,"results":"337","hashOfConfig":"184"},{"size":29081,"mtime":1615137965000,"results":"338","hashOfConfig":"184"},{"size":26762,"mtime":1615137965000,"results":"339","hashOfConfig":"184"},{"size":24661,"mtime":1615137965000,"results":"340","hashOfConfig":"184"},{"size":1188,"mtime":1615137965000,"results":"341","hashOfConfig":"184"},{"size":7194,"mtime":1615137965000,"results":"342","hashOfConfig":"184"},{"size":1684,"mtime":1615137965000,"results":"343","hashOfConfig":"184"},{"size":7405,"mtime":1615137965000,"results":"344","hashOfConfig":"184"},{"size":8433,"mtime":1615137965000,"results":"345","hashOfConfig":"184"},{"size":1444,"mtime":1615137965000,"results":"346","hashOfConfig":"184"},{"size":1442,"mtime":1615137965000,"results":"347","hashOfConfig":"184"},{"size":5300,"mtime":1615137965000,"results":"348","hashOfConfig":"184"},{"size":5246,"mtime":1615137965000,"results":"349","hashOfConfig":"184"},{"size":7495,"mtime":1615137965000,"results":"350","hashOfConfig":"184"},{"size":203,"mtime":1615137965000,"results":"351","hashOfConfig":"184"},{"size":6193,"mtime":1615137965000,"results":"352","hashOfConfig":"184"},{"size":5427,"mtime":1615137965000,"results":"353","hashOfConfig":"184"},{"size":9984,"mtime":1615137965000,"results":"354","hashOfConfig":"184"},{"size":5901,"mtime":1615137965000,"results":"355","hashOfConfig":"184"},{"size":2738,"mtime":1615137965000,"results":"356","hashOfConfig":"184"},{"size":2744,"mtime":1615137965000,"results":"357","hashOfConfig":"184"},{"size":8483,"mtime":1615137965000,"results":"358","hashOfConfig":"184"},{"size":251,"mtime":1615137965000,"results":"359","hashOfConfig":"184"},{"size":408,"mtime":1615137965000,"results":"360","hashOfConfig":"184"},{"size":208,"mtime":1615137965000,"results":"361","hashOfConfig":"184"},{"size":1018,"mtime":1615137965000,"results":"362","hashOfConfig":"184"},{"size":695,"mtime":1615137965000,"results":"363","hashOfConfig":"184"},{"size":257,"mtime":1615137965000,"results":"364","hashOfConfig":"184"},{"size":602,"mtime":1615137965000,"results":"365","hashOfConfig":"184"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"369"},"9ijjnx",{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"369"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"369"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"369"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"369"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"369"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"369"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"369"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"369"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"369"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"369"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"369"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"369"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"369"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":209,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"369"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"369"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"369"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"369"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"369"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"369"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"369"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"369"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"369"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"369"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"369"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"369"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"369"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"369"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"369"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"369"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"369"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"369"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"369"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"369"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"369"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"369"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"369"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"369"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"369"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"369"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"369"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"369"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"369"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"369"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"369"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"369"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"369"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"369"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"369"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"369"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"369"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"369"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"369"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"369"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"369"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"369"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"369"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"369"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"369"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"369"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"369"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"369"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"369"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"369"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"369"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"369"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"369"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"369"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"369"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"369"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"369"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"369"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"369"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"369"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"369"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"369"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"369"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"369"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"369"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"369"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"369"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"369"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"369"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"369"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"369"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"369"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"369"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"369"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"369"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"369"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"369"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"369"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"369"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"369"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"369"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"369"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"369"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"369"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"369"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"369"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"369"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"369"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"369"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"369"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"369"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react-main\\src\\index.js",["836"],"/* eslint-disable import/order */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable no-alert */\n/* eslint-disable padded-blocks */\n/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-duplicates */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-undef */\n/* eslint-disable eqeqeq */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import * as serviceWorker from \"./serviceWorker\";\nimport { Helmet } from 'react-helmet';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport { ToastContainer, Slide } from 'react-toastify';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n// import favicon from './assets/img/favicon.jpg';\nimport Main from './Main';\nimport Loader from './component/Loader.jsx';\nimport { cognito } from './helper/config';\nimport 'react-toastify/dist/ReactToastify.css';\n\nAmplify.configure({\n  Auth: {\n    userPoolId: cognito.POOL_ID,\n    region: cognito.REGION,\n    userPoolWebClientId: cognito.CLIENT_ID,\n  },\n});\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n    console.log('refresh');\n    const oldJwtToken = JSON.parse(localStorage.getItem('jwtToken'));\n  });\n\n  let loader = <Loader />;\n  if (loading == false) {\n    loader = (\n      <div>\n        <Provider store={store}>\n          <Router>\n            <ToastContainer\n              position=\"top-center\"\n              transition={Slide}\n              autoClose={5000}\n              hideProgressBar\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n              className=\"custom-toast\"\n            />\n            <Main />\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n  return loader;\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n",["837","838"],"C:\\react-main\\src\\component\\Loader.jsx",[],"C:\\react-main\\src\\Main.js",[],"C:\\react-main\\src\\serviceWorker.js",[],"C:\\react-main\\src\\helper\\config.js",[],"C:\\react-main\\src\\firebase.js",[],"C:\\react-main\\src\\component\\modal.jsx",["839","840"],"import React, { Component } from \"react\";\nimport close from \"../assets/img/close.png\";\n\nclass Modal extends Component {\n    render() {\n        const { closePopup } = this.props;\n        return (\n            <>\n                <div>\n                    <div className=\"modal fade show\" id=\"twoFactor\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"twoFactorTitle\" aria-hidden=\"true\" style={{ zIndex: 1 }}>\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header \">\n                                    {this.props.Subscription || this.props.freeTrial || this.props.verify ?  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={closePopup}>\n                                        <img src='' />\n                                    </button> : <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={closePopup}>\n                                        <img src={close} />\n                                    </button>}\n                                </div>\n                                {this.props.children}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n            </>\n        );\n    }\n}\n\nexport default Modal;\n","C:\\react-main\\src\\router\\Private.jsx",["841"],"/* eslint-disable import/no-unresolved */\n/* eslint-disable no-undef */\n/* eslint-disable react/jsx-curly-newline */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable quotes */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport '../assets/css/structure.css';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const userData = JSON.parse(localStorage.getItem('jwtToken'));\n  let token;\n  if (userData == null || userData == '') {\n    token = null;\n  } else {\n    token = userData.accessToken.jwtToken;\n  }\n\n  const isLogin = () => {\n    if (token != null) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","C:\\react-main\\src\\router\\Public.jsx",["842"],"/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  const userData = JSON.parse(localStorage.getItem('jwtToken'));\n  let token;\n  if (userData == null || userData == '') {\n    token = null;\n  } else {\n    token = userData.accessToken.jwtToken;\n  }\n\n  const isLogin = () => {\n    if (token != null) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        isLogin() && restricted\n          ? <Redirect to=\"/dashboard\" />\n          : <Component {...props} />\n      )}\n    />\n  );\n};\n\nexport default PublicRoute;\n","C:\\react-main\\src\\container\\Auth\\Signin.jsx",[],"C:\\react-main\\src\\container\\Auth\\Signup.jsx",["843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863"],"import React, { Component } from \"react\";\nimport Header from \"../../component/Header.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Auth } from \"aws-amplify\";\nimport SignupVerification from \"./SignupVerification.jsx\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport ConfirmSignup from \"./ConfirmSignup.jsx\";\nimport confirmSignupSuccess from \"./ConfirmSignupSuccess.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport { toast } from \"react-toastify\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport ConfirmSignupSuccess from \"./ConfirmSignupSuccess.jsx\";\n// import 'react-phone-number-input/style.css';\n// import PhoneInput from 'react-phone-number-input';\nimport logo from '../../assets/img/v-logo.png'\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\nconst validationSchema = yup.object().shape({\n  password: yup\n    .string()\n    .required(\"Please Enter your password\")\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n    ),\n});\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      popupFlag: false,\n      popupSuccessFlag: false,\n      userName: \"\",\n      isChecked: false,\n      user: \"\",\n      password: \"\",\n      message: \"\",\n      submit: false,\n      mobile: \"\",\n      confirmSignupPopup: false,\n      confirmCodePopup: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      code: \"\",\n    };\n  }\n\n  componentDidMount() {\n    document.body.classList.remove(\"modal-open\");\n  }\n\n  signupSubmit = async (data) => {\n    this.setState({\n      userName: data.email,\n      password: data.password,\n      submit: true,\n      errormessage: \"\",\n      error: false,\n      firstName: data.firstname,\n      lastName: data.lastname,\n      email: data.email,\n      code: data.code,\n    });\n    localStorage.setItem(\"userName\", JSON.stringify(data.email));\n    const { mobile, submit } = this.state;\n    console.log(mobile, submit);\n    if (this.state.mobile == \"\") {\n      this.setState({ errormessage: \"fields required\", error: true });\n    } else if (!this.state.mobileLength) {\n      this.setState({ errormessage: \"number should be 10 digit\", error: true });\n    } else {\n      this.setState({ errormessage: \"\", error: false });\n      this.props.checkUser({ field: \"mobileNumber\", value: mobile });\n      // try {\n      //    await Auth.signUp({\n      //     username: email,\n      //     password,\n      //     attributes: {\n      //       // 'custom:firstName': firstname,\n      //       // 'custom:lastName': lastname,\n      //       // 'custom:mobileNumber': `+91${mobile}`,\n      //       // 'custom:referralCode': code,\n      //       email: email,\n      //       phone_number: `+${mobile}`,\n      //       name: `${firstname}${lastname}`,\n      //     },\n      //   }).then(data => {\n      //     this.setState({\n      //       popupFlag: true,\n      //       message:\n      //         \"Verification code has been sent on your registered Email Address\",\n      //     });\n      //     this.props.signup({\n      //       firstname: firstname,\n      //       lastName: lastname,\n      //       email,\n      //       mobile,\n      //       referralCode:code,\n      //       cognitoId: data.userSub,\n      //     });\n      //   this.setState({ user: data.user });\n      //   })\n      //   // .then((data) =>\n      //   // this.setState({\n      //   //   popupFlag: true,\n      //   // }),\n      //   // )\n\n      // } catch (error) {\n      //   console.log(\"error signing up:\", error);\n      //   toast.error(error.message, options);\n      // }\n    }\n  };\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps, prevState);\n    if (\n      this.props.checkUserResponse == \"\" &&\n      this.props.error == \"error\" &&\n      this.state.mobileLength &&\n      prevState.mobile == this.state.mobile &&\n      this.state.submit\n    ) {\n      this.callSignup();\n      this.setState({ submit: false})\n    }\n    if (\n      this.props.checkUserResponse != \"\" &&\n      this.props.error == \"\" &&\n      this.props.checkUserResponse != prevProps.checkUserResponse &&\n      this.state.submit\n    ) {\n      toast.error(\"phone number already exist\", options);\n      this.setState({ submit: false})\n    }\n    if(this.props.signupSuccess != prevProps.signupSuccess){\n      this.props.blockchainRegister({orgName:'providerOrg', username: this.state.email, passcode: this.state.password})\n    } \n  }\n  callSignup = async () => {\n    const { firstName, lastName, email, mobile, code, password } = this.state;\n    try {\n      await Auth.signUp({\n        username: email,\n        password,\n        attributes: {\n          // 'custom:firstName': firstname,\n          // 'custom:lastName': lastname,\n          // 'custom:mobileNumber': `+91${mobile}`,\n          // 'custom:referralCode': code,\n          email: email,\n          phone_number: `+${mobile}`,\n          name: `${firstName}${lastName}`,\n        },\n      }).then((data) => {\n        this.props.signup({\n          firstName: firstName,\n          lastName: lastName,\n          email,\n          mobile: `+${mobile}`,\n          referralCode: code,\n          cognitoId: data.userSub,\n        });\n        this.setState({ user: data.user });\n        this.setState({\n          popupFlag: true,\n          message:\n            \"Verification code has been sent on your registered Email Address\",\n        });\n      });\n      // .then((data) =>\n      // this.setState({\n      //   popupFlag: true,\n      // }),\n      // )\n    } catch (error) {\n      console.log(\"error signing up:\", error);\n      toast.error(error.message, options);\n    }\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      popupFlag: false,\n      confirmSignupPopup: false,\n      confirmCodePopup: false,\n    });\n  };\n  closeSuccessPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      popupSuccessFlag: false,\n    });\n  };\n  showSuccessPopup = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      popupSuccessFlag: true,\n      message: \"You signed up successfully\",\n    });\n  };\n  onChangeCheckbox = (event) => {\n    this.setState({\n      isChecked: event.target.checked,\n    });\n  };\n  confirmSignupSuccess = (e) => {\n    this.setState({ userName: e, confirmCodePopup: true });\n  };\n  AccountSuccess = () => {\n    this.setState({\n      popupSuccessFlag: true,\n      confirmCodePopup: false,\n      message: \"Account activate successfully\",\n    });\n  };\n  mobileHandler = (e, data) => {\n    console.log(data);\n    const dialCode = data.dialCode;\n    console.log(e.length, dialCode.length);\n    const mobileLength = e.length - dialCode.length == 10;\n    this.setState({ mobileLength: mobileLength, mobile: e });\n    if (this.state.submit) {\n      if (this.state.mobile == \"\") {\n        this.setState({ errormessage: \"fields required\", error: true });\n      } else if (mobileLength == false) {\n        this.setState({\n          errormessage: \"number should be 10 digits\",\n          error: true,\n        });\n      } else {\n        this.setState({ errormessage: \"\", error: false });\n      }\n    }\n  };\n  confirmSignup = () => {\n    this.setState({ confirmSignupPopup: true });\n  };\n  render() {\n    const {\n      popupFlag,\n      isChecked,\n      popupSuccessFlag,\n      message,\n      mobileLength,\n      errormessage,\n      error,\n      confirmCodePopup,\n      confirmSignupPopup,\n      userName,\n    } = this.state;\n    console.log(this.props.signupSuccess);\n    return (\n      <>\n        <Header isSingUpPage={true} />\n        <div id=\"content\" className=\"container my-5\">\n          <div className=\"row\">\n            <div className=\"offset-lg-1 col-lg-5 col-md-6 bg-brw side-img d-flex align-items-center justify-content-center flex-column\">\n              <h3 className=\"text-center text-white m-0\">\n                Welcome to DocTrace\n              </h3>\n              <img className=\"img-fluid mx-auto d-block\" src={logo} />\n            </div>\n            <div className=\"col-lg-5 col-md-6 log-container p-5 box-shd\">\n              <h1 className=\"f-b\">Sign Up</h1>\n              <h5 className=\"f-20 f-b\">For providing record</h5>\n              <div className=\"tab-content\">\n                <div className=\"tab-pane active\" id=\"\">\n                  <Formik\n                    initialValues={{\n                      firstname: \"\",\n                      lastname: \"\",\n                      email: \"\",\n                      // mobile: \"\",\n                      code: \"\",\n                      password: \"\",\n                    }}\n                    onSubmit={this.signupSubmit}\n                    // validationSchema={validationSchema}\n                    validate={(values) => {\n                      console.log(values);\n                      const errors = {};\n                      if (!values.firstname) {\n                        errors.firstname = \"Required\";\n                      } else if (!/^[a-zA-Z]+(?:-[a-zA-Z]+)*$/i.test(values.firstname)) {\n                        errors.firstname = \"Only characters is allowed\"\n                      } else if (!values.lastname) {\n                        errors.lastname = \"Required\";\n                      } else if (!/^[a-zA-Z]+(?:-[a-zA-Z]+)*$/i.test(values.lastname)) {\n                        errors.lastname = \"Only characters is allowed\"\n                      } else if (!values.email) {\n                        errors.email = \"Required\";\n                      } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                          values.email\n                        )\n                      ) {\n                        errors.email = \"Invalid email address\";\n                      }\n                      //  else if (!values.mobile) {\n                      //   errors.mobile = \"Required\";\n                      // }\n                      //  else if (\n                      //   values.mobile.toString().length < 12 ||\n                      //   values.mobile.toString().length > 12\n                      // ) {\n                      //   errors.mobile = \"number should be 10 digit\";\n                      // }\n                      else if (!values.password) {\n                        errors.password = \"Required\";\n                      } else if (values.password.length < 8) {\n                        errors.password =\n                          \"Password has to be longer than 8 characters!\";\n                      } else if (!/^(?=.*[A-Z]).*$/.test(values.password)) {\n                        errors.password = \"Password should contain uppercase\";\n                      } else if (!/^(?=.*[a-z]).*$/.test(values.password)) {\n                        errors.password = \"Password should contain lowercase\";\n                      } else if (!/^(?=.*\\d).*$/.test(values.password)) {\n                        errors.password = \"Password should contain numeric\";\n                      } else if (\n                        !/^(?=.*[@$!%*#?&]).*$/.test(values.password)\n                      ) {\n                        errors.password =\n                          \"Password should contain special character\";\n                      } else if (values.conpassword !== values.password) {\n                        errors.conpassword = \"Confirm password does not match password\";\n                      }\n                      return errors;\n                    }}\n                  >\n                    {(props) => {\n                      const {\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        touched,\n                        errors,\n                        setFieldValue,\n                      } = props;\n                      return (\n                        <form>\n                          <div className=\"col p-0 mt-5\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"firstname\"\n                              placeholder=\"First Name\"\n                              name=\"firstname\"\n                              value={values.firstname}\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {errors.firstname && touched.firstname && (\n                            <div className=\"input-feedback\">\n                              {errors.firstname}\n                            </div>\n                          )}\n                          <div className=\"col p-0 mt-4\">\n                            <input\n                              type=\"text \"\n                              className=\"form-control\"\n                              id=\"lastname\"\n                              placeholder=\"Last Name\"\n                              name=\"lastname\"\n                              value={values.lastname}\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {errors.lastname && touched.lastname && (\n                            <div className=\"input-feedback\">\n                              {errors.lastname}\n                            </div>\n                          )}\n                          <div className=\"col p-0 mt-4\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"email\"\n                              placeholder=\"Email Addresss\"\n                              name=\"email\"\n                              value={values.email}\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {errors.email && touched.email && (\n                            <div className=\"input-feedback\">{errors.email}</div>\n                          )}\n                          <div className=\"col p-0 mt-4\">\n                            <PhoneInput\n                            enableLongNumbers={true}\n                              placeholder=\"Enter phone number\"\n                              value={values.mobile}\n                              countryCodeEditable={false}\n                              // onChange={(e) => setFieldValue('mobile', e)}\n                              onChange={(e, data) =>\n                                this.mobileHandler(e, data)\n                              }\n                              country={\"us\"}\n                              autoFormat={false}\n                              enableAreaCodes={false}\n                              // onlyCountries={[\"us\"]}\n                              containerStyle={{\n                                marginBottom: \"15px\",\n                                marginTop: \"-7px\",\n                              }}\n                              inputStyle={{\n                                border: \"none\",\n                                // borderBottom: \"0.5px solid rgba(0, 0, 0, 0.4)\",\n                                borderRadius: 5,\n                                marginLeft: \"10px\",\n                                width: \"97.5%\",\n                                height: \"50px\",\n                              }}\n                            />\n                          </div>\n                          {error && (\n                            <div className=\"input-feedback\">{errormessage}</div>\n                          )}\n                          <div className=\"col p-0 mt-4\">\n                            <input\n                              type=\"password\"\n                              className=\"form-control\"\n                              id=\"password\"\n                              placeholder=\"Password\"\n                              name=\"password\"\n                              value={values.password}\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {errors.password && touched.password && (\n                            <div className=\"input-feedback\">\n                              {errors.password}\n                            </div>\n                          )}\n                            <div className=\"col p-0 mt-4\">\n                            <input\n                              type=\"password\"\n                              className=\"form-control\"\n                              id=\"conpassword\"\n                              placeholder=\"Confirm Password\"\n                              name=\"conpassword\"\n                              value={values.conpassword}\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {errors.conpassword && touched.conpassword && (\n                            <div className=\"input-feedback\">\n                              {errors.conpassword}\n                            </div>\n                          )}\n                          <div className=\"col p-0 mt-4\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"code\"\n                              placeholder=\"Referral Code\"\n                              name=\"code\"\n                              value={values.code}\n                              n\n                              onChange={handleChange}\n                            />\n                          </div>\n\n                          <div className=\"login-link\">\n                            <div className=\"col p-0 mt-5 d-flex justify-content-between\">\n                              <div className=\"custom-control custom-checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"customCheck\"\n                                  name=\"example1\"\n                                  onChange={this.onChangeCheckbox}\n                                  checked={isChecked}\n                                />\n                                <label\n                                  className=\"custom-control-label f-m\"\n                                  htmlFor=\"customCheck\"\n                                >\n                                  I hereby agree to the{\" \"}\n                                  <Link to=\"/signup\">\n                                    <u>Terms</u>\n                                  </Link>{\" \"}\n                                  &{\" \"}\n                                  <Link to=\"/signup\">\n                                    <u>Privacy Policy</u>\n                                  </Link>{\" \"}\n                                  of DocTrace\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"mt-5\">\n                            <button\n                             onClick={handleSubmit}\n                              type=\"submit\"\n                              className={\n                                isChecked\n                                  ? \"btn box-shd-hover-org btn-primary w-100 login-btn f-b\"\n                                  : \"disabled btn  btn-primary w-100 login-btn f-b\"\n                              }\n                              data-toggle=\"modal\"\n                              data-target=\"#mobileVerification\"\n                              disabled={!isChecked}\n                            >\n                              Sign Up\n                            </button>\n                          </div>\n                          <div className=\"text-center d-block mt-5 txt-blk f-20 f-m\">\n                            Already have an Account?\n                            <Link to=\"/signin\" className=\" acc-link\">\n                              {\" \"}\n                              <u>Login Now</u>\n                            </Link>\n                          </div>\n                          <div className=\"text-center d-block mt-2 txt-blk f-20 f-m\">\n                            Already Signup?\n                            <span\n                              className=\" acc-link\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={this.confirmSignup}\n                            >\n                              {\" \"}\n                              <u>verify email</u>\n                            </span>\n                          </div>\n                        </form>\n                      );\n                    }}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {popupFlag == true ? (\n          <SignupVerification\n            userName={userName}\n            closePopup={this.closePopup}\n            history={this.props.history}\n            showSuccessPopup={this.showSuccessPopup}\n            user={this.state.user}\n            password={this.state.password}\n          />\n        ) : null}\n        {popupSuccessFlag == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n        {confirmSignupPopup == true ? (\n          <ConfirmSignup\n            closePopup={this.closePopup}\n            history={this.props.history}\n            confirmSignupSuccess={this.confirmSignupSuccess}\n          />\n        ) : null}\n        {confirmCodePopup == true ? (\n          <ConfirmSignupSuccess\n            closePopup={this.closePopup}\n            history={this.props.history}\n            AccountSuccess={this.AccountSuccess}\n            userName={userName}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.Auth.error,\n  checkUserResponse: state.Auth.checkUser,\n  signupSuccess: state.Auth.signupSuccess,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signup: (payload) => dispatch(actions.providerSignup(payload)),\n  checkUser: (payload) => dispatch(actions.checkUser(payload)),\n  blockchainRegister: (payload) => dispatch(actions.blockchainRegister(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","C:\\react-main\\src\\container\\Auth\\genAgreement.jsx",["864","865"],"import React, { Component } from \"react\";\nimport { Header } from \"../../component/index.jsx\";\nimport DocModal from \"../../container/Auth/DocVerificationModal.jsx\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass GenAgreement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popupFlag: false,\n      isChecked: false\n    };\n  }\n  handleSubmit = () => {\n    this.setState({ popupFlag: true });\n  };\n  onChangeCheckbox = (event) => {\n    this.setState({\n      isChecked: event.target.checked,\n    });\n  };\n  render() {\n    const { isChecked, popupFlag } = this.state\n    return (\n      <>\n        <Header />\n        <div id=\"content\" className=\"container my-5\">\n          <div className=\"row\">\n            <div className=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n              <h1 className=\"text-center txt-blk mb-5 f-b\">\n                Welcome to DocTrace\n              </h1>\n            </div>\n            <div className=\"offset-lg-2 col-lg-8 box-shd br-20\">\n              <h4 className=\"f-24 text-center mt-5 mb-4 f-b\">\n                General Agreement\n              </h4>\n              <div className=\"px-4 l-32 mb-5 f-m fixHeight\">\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\n                  eget ornare lacus. Donec commodo justo ipsum, non gravida\n                  tellus vestibulum vestibulum. Proin diam ex, placerat eget\n                  convallis a, commodo euismod nibh. Pellentesque ullamcorper\n                  porttitor varius. Ut at nisi imperdiet, euismod sem sit amet\n                  fermentum est.\n                  <br /> Donec interdum, enim eget elementum rhoncus, tortor\n                  ligula ultricies erat, eu scelerisque odio leo eu sem. Nunc\n                  eget justo tincidunt, tristique nisl at, malesuada eros.\n                  Curabitur sodales luctus dui, vestibulum elementum metus\n                  scelerisque sed. Nam lacinia tempor ante vel viverra.\n                  Suspendisse tempus nisi quis augue pretium pharetra. Nulla\n                  imperdiet posuere cursus. Proin quis scelerisque est. Proin\n                  dapibus turpis ac ligula semper lobortis.\n                </p>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\n                  eget ornare lacus. Donec commodo justo ipsum, non gravida\n                  tellus vestibulum vestibulum. Proin diam ex, placerat eget\n                  convallis a, commodo euismod nibh. Pellentesque ullamcorper\n                  porttitor varius. Ut at nisi imperdiet, euismod sem sit amet\n                  fermentum est.\n                  <br /> Donec interdum, enim eget elementum rhoncus, tortor\n                  ligula ultricies erat, eu scelerisque odio leo eu sem. Nunc\n                  eget justo tincidunt, tristique nisl at, malesuada eros.\n                  Curabitur sodales luctus dui, vestibulum elementum metus\n                  scelerisque sed. Nam lacinia tempor ante vel viverra.\n                  Suspendisse tempus nisi quis augue pretium pharetra. Nulla\n                  imperdiet posuere cursus. Proin quis scelerisque est. Proin\n                  dapibus turpis ac ligula semper lobortis.\n                </p>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\n                  eget ornare lacus. Donec commodo justo ipsum, non gravida\n                  tellus vestibulum vestibulum. Proin diam ex, placerat eget\n                  convallis a, commodo euismod nibh. Pellentesque ullamcorper\n                  porttitor varius. Ut at nisi imperdiet, euismod sem sit amet\n                  fermentum est.\n                  <br /> Donec interdum, enim eget elementum rhoncus, tortor\n                  ligula ultricies erat, eu scelerisque odio leo eu sem. Nunc\n                  eget justo tincidunt, tristique nisl at, malesuada eros.\n                  Curabitur sodales luctus dui, vestibulum elementum metus\n                  scelerisque sed. Nam lacinia tempor ante vel viverra.\n                  Suspendisse tempus nisi quis augue pretium pharetra. Nulla\n                  imperdiet posuere cursus. Proin quis scelerisque est. Proin\n                  dapibus turpis ac ligula semper lobortis.\n                </p>\n              </div>\n            </div>\n            <div className=\"offset-lg-2 col-lg-8 col-md-12 my-5\">\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  onChange={this.onChangeCheckbox}\n                  checked={isChecked}\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"customCheck\"\n                  name=\"example1\"\n                />\n                <label\n                  className=\"custom-control-label f-m f-14\"\n                  htmlFor=\"customCheck\"\n                >\n                  I have read through General Agreement and I comply with all\n                  the{\" \"}\n                  <a href=\"#!\" className=\"txt-blk\">\n                    <u>Terms</u>\n                  </a>{\" \"}\n                  &{\" \"}\n                  <a href=\"#!\" className=\"txt-blk\">\n                    <u>Conditions</u>\n                  </a>{\" \"}\n                  mentioned{\" \"}\n                </label>\n              </div>\n            </div>\n            <div className=\"offset-lg-4 col-lg-4\">\n              <a\n                onClick={this.handleSubmit}\n                type=\"button\"\n                className={ isChecked ? \"btn box-shd-hover-org btn-primary my-5 w-100 f-18 f-b\" : \" disabled btn box-shd-hover-org btn-primary my-5 w-100 f-18 f-b\"}\n                data-toggle=\"modal\"\n                data-target=\"#success\"\n                disabled={!isChecked}\n              >\n                Login\n              </a>\n            </div>\n          </div>\n        </div>\n        {popupFlag == true ? (\n          <DocModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isSuperProvider: state.Auth.isSuperProvider,\n  document: state.Auth.document,\n  isVarified: state.Auth.isSuperProvider,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(actions.login(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenAgreement);\n","C:\\react-main\\src\\container\\Auth\\SessionModal.jsx",["866","867"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nclass SessionModal extends Component {\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem('jwtToken');\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push('/signin');\n  }\n  refreshSession = () => {\n    this.props.tokenError({ error: '' })\n    window.location.reload()\n  }\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <>\n        <div>\n          <div\n            className=\"modal fade show\"\n            id=\"twoFactor\"\n            tabIndex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"twoFactorTitle\"\n            aria-hidden=\"true\"\n            style={{ zIndex: 1 }}\n          >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div class=\"modal-body plr-100 py-5\">\n                  <h4 class=\"modal-title text-center f-20 mb-4 f-m \" id=\"successTitle\">Session is expired <br /> please click retry</h4>\n                  <span onClick={this.refreshSession} class=\"btn btn-primary w-100 f-18 f-b\">Retry</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  tokenError: (payload) => dispatch(actions.tokenError(payload)),\n});\nexport default withRouter(connect(null, mapDispatchToProps)(SessionModal));\n","C:\\react-main\\src\\container\\Auth\\docVerify.jsx",[],"C:\\react-main\\src\\container\\team_management\\teamManagement.jsx",["868","869","870","871","872","873","874","875","876","877","878","879","880"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { WithLayoutContainer, Table, SuccessPopup } from '../../component/index.jsx';\nimport * as actions from '../../actions';\nimport DeleteTeamPopup from './deleteTeamPopup.jsx';\nimport EditTeamPopup from './editTeamPopup.jsx';\nimport AddTeamPopup from './addTeamPopup.jsx';\nimport ViewTeamPopup from './viewTeamPopup.jsx';\nimport { formatTime, formatDate } from '../../helper/utility';\nimport { teamListingTitle } from '../../constants/Mapper';\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\n\nclass TeamManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      editData: {},\n      deleteData: {},\n      viewFlag: false,\n      viewData: {},\n      SuccessPopupFlag: false,\n    };\n  }\n\n\n  componentWillReceiveProps(nextProps) {\n    const { team } = this.props;\n    const { successPopup, successLoader } = team;\n\n    if (this.props !== nextProps) {\n      if (successPopup !== '' && successLoader === false) {\n        this.successPopup();\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { getTeamListInfo, getUserListing } = this.props;\n    getTeamListInfo();\n    getUserListing();\n  }\n\n  editButtonOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      editFlag: true,\n      editData: data,\n    });\n  }\n\n  editClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      editFlag: false,\n    });\n  }\n\n  deleteClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      deleteFlag: false,\n    });\n  }\n\n  deleteButtonOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      deleteFlag: true,\n      deleteData: data,\n    });\n  }\n\n  addNewTeam = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      addFlag: true,\n    });\n  }\n\n  addClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      addFlag: false,\n    });\n  }\n\n  viewPopup = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      viewFlag: true,\n      viewData: data,\n    });\n  }\n\n  closeViewPopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      viewFlag: false,\n      viewData: {},\n    });\n  }\n\n  handleSubmit = (data) => {\n    this.props.addTeamListInfo(data);\n  }\n\n  submitEditData = (data) => {\n    this.props.editTeamListInfo(data);\n  }\n\n\n  confirmDelete = () => {\n    const { deleteData } = this.state;\n    const body = {\n      teamId: deleteData._id,\n    };\n    this.props.deleteTeam(body);\n  }\n\n  successPopup = () => {\n    this.setState({\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n\n\n      editData: {},\n      deleteData: {},\n\n      viewFlag: false,\n      successFlag: true,\n      SuccessPopupFlag: true,\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.teamInitialization();\n    this.setState({\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n\n\n      editData: {},\n\n\n      viewFlag: false,\n      viewData: {},\n      SuccessPopupFlag: false,\n    });\n  }\n\n\n\n  render() {\n    const {\n      deleteFlag, editFlag, addFlag, editData, viewFlag, SuccessPopupFlag, viewData, deleteData,\n    } = this.state;\n    const { teamList, userList, team, subUserAccess, otherResponsibilities } = this.props;\n    const { successPopup } = team;\n\n\n    const dataTable = {\n      titles: teamListingTitle,\n      data: [],\n    };\n    if (teamList.length > 0) {\n      dataTable.data = teamList.map((team, key) => {\n        const { createdAt, members, teamManager } = team;\n        return {\n          ...team,\n          ...{\n            sr_no: key + 1,\n            totalUser: members ? members.length : 0,\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n            teamManager: teamManager && teamManager.firstName ? (teamManager.firstName) : '-',\n\n          },\n        };\n      });\n    }\n    return (\n      <>\n        <WithLayoutContainer subUserAccess={subUserAccess} otherResponsibilities={otherResponsibilities}>\n          <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n            <div className=\"row\">\n              <div className=\"col-xl-12\">\n                <div className=\"containerBox\">\n                  <div className=\" \">\n                    <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                      <h2 className=\"f-b m-0\">Team Management</h2>\n                      {(subUserAccess === null || otherResponsibilities === null || subUserAccess.create || otherResponsibilities && otherResponsibilities.create) &&\n                        <a onClick={() => this.addNewTeam()} className=\"btn btn-primary py-1\">Create New Team</a>}\n                    </div>\n                    <div className=\"table-responsive fixHeight\">\n                      <Table\n                        dataTable={dataTable}\n                        actions={actionsData}\n                        defaultSort=\"sr_no\"\n                        editButtonOnClick={this.editButtonOnClick}\n                        deleteButtonOnClick={this.deleteButtonOnClick}\n                        viewPopup={this.viewPopup}\n                        loader={this.props.loader}\n                        updatePermission={subUserAccess === null || otherResponsibilities === null || subUserAccess.update || otherResponsibilities && otherResponsibilities.update}\n                        deletePermission={subUserAccess === null || otherResponsibilities === null || subUserAccess.delete || otherResponsibilities && otherResponsibilities.delete}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.delete || otherResponsibilities && otherResponsibilities.delete) && deleteFlag &&\n                  <DeleteTeamPopup closePopup={this.deleteClosePopup} team={team} confirmDelete={this.confirmDelete} deleteData={deleteData} />}\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.update || otherResponsibilities && otherResponsibilities.update) && editFlag &&\n                  <EditTeamPopup closePopup={this.editClosePopup} editData={editData} userList={userList} submitEditData={this.submitEditData} team={team} />}\n                {addFlag === true ? <AddTeamPopup closePopup={this.addClosePopup} userList={userList} submitData={this.handleSubmit} team={team} /> : null}\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.view || otherResponsibilities && otherResponsibilities.view) && viewFlag && <ViewTeamPopup closePopup={this.closeViewPopup} viewData={viewData} userList={userList} submitEditData={this.submitEditData} team={team} />}\n              </div>\n            </div>\n          </div>\n          {SuccessPopupFlag === true && successPopup\n            ? <SuccessPopup msg={successPopup.msg} closePopup={this.successPopupClosePopup} />\n            : null}\n        </WithLayoutContainer>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  teamList: state.Team.teamList,\n  userList: state.Team.userList,\n  team: state.Team,\n  subUserAccess: state.Profile.role,\n  otherResponsibilities: state.Profile.Rolerole\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTeamListInfo: () => dispatch(actions.getTeamListInfo()),\n  getUserListing: () => dispatch(actions.getUserListing()),\n  teamInitialization: () => dispatch(actions.teamInitialization()),\n  deleteTeam: (data) => dispatch(actions.deleteTeam(data)),\n  editTeamListInfo: (data) => dispatch(actions.editTeamListInfo(data)),\n  addTeamListInfo: (data) => dispatch(actions.addTeamListInfo(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamManagement, '');\n","C:\\react-main\\src\\container\\Auth\\dashboard.jsx",["881","882"],"/* eslint-disable react/style-prop-object */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable eqeqeq */\nimport React, { Component } from \"react\";\nimport { WithLayoutContainer } from \"../../component/index.jsx\";\nimport OnloadModal from \"./OnLoadModal.jsx\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../component/modal.jsx\";\nimport acceptedDoc from \"../../assets/img/acceptedDoc.png\";\nimport update from \"../../assets/img/update.png\";\nimport rejectDoc from \"../../assets/img/rejectDoc.png\";\nimport pendingDoc from \"../../assets/img/pendingDoc.png\";\nimport share from \"../../assets/img/share.png\";\nimport drafts from \"../../assets/img/drafts.png\";\nimport signup from \"../../assets/img/signup.png\";\nimport moment from 'moment';\nimport { formateDateMonth } from \"../../helper/utility.js\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFreeTrial: false,\n    };\n  }\n  componentDidMount() {\n    this.props.createTikEdit({ metaData: [] });\n    this.props.dashboard();\n    this.props.errorClear();\n    this.props.paymentUser();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.myPlan != prevProps.myPlan) {\n      const isFree = JSON.parse(localStorage.getItem(\"isFree\"));\n      if (isFree == null) {\n        console.log(isFree);\n        this.setState({\n          isFreeTrial:\n            this.props.myPlan &&\n            this.props.myPlan.subscriptionPlanDetails.isFreeTirePlan,\n        });\n      }\n      if (isFree == false) {\n        this.setState({\n          isFreeTrial: false,\n        });\n      }\n    }\n  }\n  closeLogoutPopup = () => {\n    this.setState({\n      isFreeTrial: false,\n    });\n    localStorage.setItem(\"isFree\", JSON.stringify(false));\n    localStorage.removeItem(\"trialPop\");\n  };\n\n  render() {\n    const { dashboardData, isActive, myPlan } = this.props;\n    const { isFreeTrial } = this.state;\n    const isFirstTimeLogin = JSON.parse(\n      localStorage.getItem(\"isFirstTimeLogin\")\n    );\n  \n    const date3 = moment(myPlan && new Date(myPlan.startOfSubscription), \"DD.MM.YYYY\");\n    const date4 = moment(myPlan && new Date(), \"DD.MM.YYYY\");\n    const monthPeriod = date4.diff(date3, \"days\")\n    console.log(monthPeriod)\n    return (\n      <>\n        {/* <>\n        <Helmet>\n         <script id=\"ze-snippet\" src=\"https://static.zdassets.com/ekr/snippet.js?key=65b14d0c-22c8-4442-91db-9ce4323055aa\"> </script>\n        </Helmet>\n      </> */}\n        <WithLayoutContainer style={\"auto\"}>\n          <div id=\"dashboard\" className=\"wrapper wrapper-content\">\n            <div className=\"row\">\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-green\">\n                    <img src={acceptedDoc} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.acceptedCount}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Accepted Tiks</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-mgnt\">\n                    <img src={update} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.updateRequiredCount}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Update Required</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-red\">\n                    <img src={rejectDoc} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.rejectedCount}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Rejected Tiks</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-org\">\n                    <img src={pendingDoc} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.pendingCount}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Pending Tiks</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-lbrw\">\n                    <img src={share} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.sharedWithMe}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Shared with me</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-xl-4 col-lg-6\">\n                <div className=\"ibox d-flex align-items-center py-4 pl-4 pr-2\">\n                  <div className=\"ibox-title bg-lblu\">\n                    <img src={drafts} />\n                  </div>\n                  <div className=\"ibox-content\">\n                    <h1 className=\"no-margins f-40 f-b\">\n                      {dashboardData.draftCount}\n                    </h1>\n                    <div className=\"stat-percent f-m f-24\">Saved as drafts</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.props.isActive === false && this.props.isVerified === false ? (\n            <OnloadModal verify history={this.props.history} />\n          ) : null}\n             {this.props.isActive === false && this.props.isVerified === true ?(\n            <Modal closePopup={this.closeLogoutPopup} verify>\n              <div class=\"modal-body pt-0 plr-100 pb-5 text-center\">\n                <img src={signup} />\n                <br />\n                <br />\n                <h4\n                  class=\"modal-title text-center f-20 mb-4 f-m\"\n                  id=\"onloadTitle\"\n                >\n                  Your account is not active\n                  <br />\n                </h4>\n              </div>\n            </Modal>\n          ) : null}\n          {isFreeTrial && isFirstTimeLogin ? (\n            <Modal closePopup={this.closeLogoutPopup}>\n              <div class=\"modal-body pt-0 plr-100 pb-5 text-center\">\n                <img src={signup} />\n                <br />\n                <br />\n                <h4\n                  class=\"modal-title text-center f-20 mb-4 f-m\"\n                  id=\"onloadTitle\"\n                >\n                  Thank you for signing up on DocTrace.\n                  <br />\n                  <br />\n                  Congratulations. You have subscribed to our Free Trial\n                </h4>\n              </div>\n            </Modal>\n          ) : null}\n          {this.props.myPlan && this.props.myPlan.subscriptionPlanDetails.type == \"pay_per_use\"  && monthPeriod >= 30? (\n            <Modal closePopup={this.closeLogoutPopup}>\n              <div class=\"modal-body pt-0 plr-100 pb-5 text-center\">\n                <img src={signup} />\n                <br />\n                <br />\n                <h4\n                  class=\"modal-title text-center f-20 mb-4 f-m\"\n                  id=\"onloadTitle\"\n                >\n                  Thank you for signing up on DocTrace.\n                  <br />\n                  <br />\n                  Congratulations. You have subscribed to our Free Trial\n                </h4>\n                <div className=\"text-center w-100 mb-2 mt-4\">\n                  <span\n                    onClick={() => {\n                      this.props.history.push(\"/invoice\");\n                      // this.setState({ freeTrialPopup: false });\n                      // localStorage.setItem(\"trialPop\", JSON.stringify(false));\n                    }}\n                    className=\"btn btn-primary w-50 f-18 f-b\"\n                  >\n                    Invoice\n                  </span>\n                </div>\n              </div>\n            </Modal>\n          ) : null}\n        </WithLayoutContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isSuperProvider: state.Auth.isSuperProvider,\n  isVerified: state.Auth.isVerified,\n  dashboardData: state.Profile.dashboard,\n  myPlan: state.Subscription.myPlan,\n  isActive: state.User.isActive,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(actions.login(payload)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  dashboard: () => dispatch(actions.getDashboardCount()),\n  errorClear: () => dispatch(actions.errorClear()),\n  paymentUser: () => dispatch(actions.paymentUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","C:\\react-main\\src\\container\\Auth\\SignupVerification.jsx",[],"C:\\react-main\\src\\container\\users_management\\userManagement.jsx",["883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { WithLayoutContainer, Table } from '../../component/index.jsx';\nimport DeleteUserPopup from './deleteUserPopup.jsx';\nimport EditUserPopup from './editUserPopup.jsx';\nimport AddUsersPopup from './addUserPopup.jsx';\nimport ViewUserPopup from './viewUserPopup.jsx';\nimport * as actions from '../../actions';\nimport { userListingTitle } from '../../constants/Mapper.js';\nimport { formatTime, formatDate } from '../../helper/utility.js';\nimport SuccessModal from '../../component/SuccessModal.jsx';\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\n\nclass UserManagement extends Component {\n  state = {\n    editFlag: false,\n    viewFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    showSuccess: false,\n    message: '',\n    deleteData: {},\n    addPopupSuccess: false,\n  }\n\n  handleSubmit = async (data) => {\n    this.props.addUserInList(data);\n  }\n\n  handleSubmitEdit = (data) => {\n    this.props.editUserInList(data);\n  }\n\n  editButtonOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      editFlag: true,\n      editData: data,\n    });\n  }\n\n  viewButtonOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    const res = this.props.userList.filter((e) => data._id == e._id);\n    this.setState({\n      viewFlag: true,\n      viewData: res[0],\n    });\n  }\n\n  editClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      editFlag: false,\n    });\n  }\n\n  viewClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      viewFlag: false,\n    });\n  }\n\n  deleteClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      deleteFlag: false,\n      deleteData: {},\n    });\n  }\n\n  deleteButtonOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      deleteFlag: true,\n      deleteData: data,\n    });\n  }\n\n  confirmDelete = () => {\n    const { deleteData } = this.state;\n    const userId = deleteData._id;\n    this.props.deleteUser({ userId });\n  }\n\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n  }\n\n  addUser = () => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      addFlag: true,\n    });\n  }\n\n  addClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      addFlag: false,\n    });\n  }\n\n  componentDidMount() {\n    this.props.getUserListInfo();\n    this.props.getRoleListInfo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userSuccess != this.props.userSuccess) {\n      this.addClosePopup();\n      this.setState({ showSuccess: true, message: this.props.userSuccess.msg });\n      this.props.getUserListInfo();\n    }\n    if (prevProps.deleteSuccess != this.props.deleteSuccess) {\n      this.deleteClosePopup();\n      this.setState({ showSuccess: true, message: this.props.deleteSuccess.msg });\n      this.props.getUserListInfo();\n    }\n    if (prevProps.EditSuccess != this.props.EditSuccess) {\n      this.editClosePopup();\n      this.setState({ showSuccess: true, message: this.props.EditSuccess.msg });\n      this.props.getUserListInfo();\n    }\n  }\n\n  render() {\n    const {\n      deleteFlag, editFlag, addFlag, editData, showSuccess, message, deleteData, viewFlag, viewData,\n    } = this.state;\n    const {\n      userList, EditSuccess, subUserAccess, otherResponsibilities,\n    } = this.props;\n\n    const dataTable = {\n      titles: userListingTitle,\n      data: [],\n    };\n    if (userList.length > 0) {\n      dataTable.data = userList.map((user, key) => {\n        const { createdAt, createdProvider, userRole } = user;\n        const { firstName, lastName } = createdProvider || {};\n        return {\n          ...user,\n          ...{\n            sr_no: key + 1,\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n            role: userRole.roleName,\n            createdBY: `${firstName} ${lastName}`,\n          },\n        };\n      });\n    }\n    return (\n      <>\n        <WithLayoutContainer subUserAccess={subUserAccess} otherResponsibilities={otherResponsibilities}>\n          <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n            <div className=\"row\">\n              <div className=\"col-xl-12\">\n                <div className=\"containerBox\">\n                  <div className=\" \">\n                    <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                      <h2 className=\"f-b m-0\">Associated Users</h2>\n                      {(subUserAccess === null || otherResponsibilities === null || subUserAccess.create || otherResponsibilities && otherResponsibilities.create)\n                        && <a onClick={() => this.addUser()} className=\"btn btn-primary py-1\">Create New User</a>}\n                    </div>\n                    <div className=\"table-responsive fixHeight\">\n                      <Table\n                        dataTable={dataTable}\n                        actions={actionsData}\n                        defaultSort=\"sr_no\"\n                        editButtonOnClick={this.editButtonOnClick}\n                        deleteButtonOnClick={this.deleteButtonOnClick}\n                        loader={this.props.loader}\n                        viewPopup={this.viewButtonOnClick}\n                        // updatePermission={true}\n                        // deletePermission={true}\n                        updatePermission={subUserAccess === null || subUserAccess.update || otherResponsibilities === null || otherResponsibilities && otherResponsibilities.update}\n                        deletePermission={subUserAccess === null || subUserAccess.delete || otherResponsibilities === null || otherResponsibilities && otherResponsibilities.delete}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.delete || otherResponsibilities && otherResponsibilities.delete) && deleteFlag\n                  && <DeleteUserPopup closePopup={this.deleteClosePopup} confirmDelete={this.confirmDelete} deleteData={deleteData} />}\n\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.update || otherResponsibilities && otherResponsibilities.update) && editFlag\n                  && <EditUserPopup closePopup={this.editClosePopup} editData={editData} roleList={this.props.roleList} editData={editData} submitUserEditData={this.handleSubmitEdit} />}\n\n                {(subUserAccess === null || otherResponsibilities === null || subUserAccess.view || otherResponsibilities && otherResponsibilities.view) && viewFlag\n                  && <ViewUserPopup closePopup={this.viewClosePopup} viewData={viewData} roleList={this.props.roleList} editData={editData} submitUserEditData={this.handleSubmitEdit} />}\n\n                {addFlag === true ? <AddUsersPopup roleList={this.props.roleList} closePopup={this.addClosePopup} submitUserData={this.handleSubmit} addPopup={this.props.addPopup} addPopupLoader={this.props.addPopupLoader} /> : null}\n              </div>\n            </div>\n          </div>\n          {showSuccess == true ? (\n            <SuccessModal\n              closePopup={this.closeSuccessPopup}\n              history={this.props.history}\n              message={message}\n            />\n          ) : null}\n        </WithLayoutContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  addPopupLoader: state.User.addPopupLoader,\n  userList: state.User.userList,\n  loader: state.User.loader,\n  roleList: state.Role.roleList,\n  userSuccess: state.User.userSuccess,\n  deleteSuccess: state.User.deleteSuccess,\n  EditSuccess: state.User.EditSuccess,\n  subUserAccess: state.Profile.role,\n  otherResponsibilities: state.Profile.Rolerole,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserListInfo: () => dispatch(actions.getUserListInfo()),\n  getRoleListInfo: () => dispatch(actions.getRoleListInfo()),\n  deleteUser: (data) => dispatch(actions.deleteUser(data)),\n  addUserInList: (data) => dispatch(actions.addUserInList(data)),\n  editUserInList: (data) => dispatch(actions.editUserInList(data)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagement);\n","C:\\react-main\\src\\container\\Tik\\AddMetadata.jsx",["903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"import React, { Component } from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { toast } from \"react-toastify\";\nimport { withLastLocation } from \"react-router-last-location\";\nimport { withRouter } from \"react-router\";\nimport {\n  HeaderWithoutSearch\n} from \"../../component/index.jsx\";\nclass AddMetadata extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addMeta: [],\n      submit: false,\n      screenwidth: 1440,\n      data: \"\",\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    let prevRoute = JSON.parse(localStorage.getItem(\"prevroute\"));\n    this.props.getMetaData();\n    window.addEventListener(\"resize\", this.updateWidth);\n    this.props.profile();\n\n    // localStorage.removeItem('selectId');\n    // localStorage.removeItem('templateId');\n    if (prevRoute == \"create-tik\") {\n      // localStorage.removeItem('addMetaData');\n      // this.props.createTikEdit({ metaData: [] })\n      // this.setState({data: ''})\n    }\n    console.log(this.props.lastLocation);\n  }\n  componentDidUpdate(prevprops) {\n    let prevRoute = JSON.parse(localStorage.getItem(\"prevroute\"));\n\n    if (prevprops.metaData != this.props.metaData) {\n      localStorage.removeItem(\"addMetaData\");\n    }\n    if (prevprops.metaDataList != this.props.metaDataList) {\n      if (prevRoute == \"create-tik\") {\n        // localStorage.removeItem('addMetaData');\n        // this.props.createTikEdit({ metaData: [] })\n      }\n      this.setState({ data: \"\" });\n    }\n  }\n  updateWidth = () => {\n    this.setState({\n      screenwidth: window.innerWidth,\n    });\n  };\n  renderTooltip = (props, des) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      {des}\n    </Tooltip>\n  );\n  handleChange = (e, value, index) => {\n    console.log(this.state.addMeta.length);\n    // if (this.state.addMeta.length == 1) {\n    //   this.setState(\n    //     {\n    //       addMeta: [\n    //         {\n    //           ...this.state.addMeta[0],\n    //           name: value,\n    //           value: e.target.value,\n    //         },\n    //       ],\n    //     },\n    //     () => {\n    //       console.log(\"if data added\", this.state.addMeta);\n    //     }\n    //   );\n    // } else {\n    let previousdata = this.props.metaData;\n    let data = previousdata[index];\n    const object = {\n      ...data,\n      name: value,\n      value:\n        e.target != undefined\n          ? e.target.value\n          : (\"0\" + new Date(e).getDate()).slice(-2) +\n            \"-\" +\n            (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n            \"-\" +\n            e.getFullYear(),\n    };\n    previousdata[index] = object;\n    this.setState(\n      {\n        addMeta: previousdata,\n      },\n      () => console.log(\"again added\", this.state.metaData)\n    );\n    this.props.createTikEdit({ metaData: previousdata });\n\n    // }\n  };\n  nextToSelect = () => {\n    this.setState({ submit: true });\n    let metaCheck = [];\n    const metaDataCheck = this.props.metaData.filter((e) => Object.keys(e).length !== 0);\n    metaCheck.push(metaDataCheck);\n    if (\n      metaCheck[0].length === this.props.metaDataList.length &&\n      !metaCheck.includes(\"\")\n    ) {\n      this.props.history.push(\"/select-template\");\n      console.log(\"next\");\n      // this.props.createTikEdit({ metaData: this.state.addMeta });\n      localStorage.setItem(\"addMetaData\", JSON.stringify(this.props.metaData));\n    }\n  };\n  render() {\n    const { metaDataList, roledocument, document, tikLimit } = this.props;\n    if (document && roledocument) {\n      if (document.create == false && roledocument.create == false) {\n        this.props.history.push(\"/docHistory\");\n        toast.error(\"you are not authorized\");\n      }\n    }\n    if (tikLimit) {\n      this.props.history.push(\"/docHistory\");\n    }\n    return (\n      <>\n      <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container my-5\">\n          <div class=\"row\">\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n              <h1 class=\"text-center txt-blk mb-5 f-b\">Add Metadata</h1>\n            </div>\n            <div class=\"offset-lg-2 col-lg-8 box-shd br-20\">\n              <form class=\"p-5 metadata\">\n                {metaDataList &&\n                  metaDataList.map((e, index) => {\n                    // if (e.datatype == \"String\") {\n                    return (\n                      <>\n                        <div class=\"form-group row align-items-center\">\n                          <label\n                            for=\"meta1\"\n                            class=\"col-sm-3 col-form-label f-18 f-m\"\n                          >\n                            {e.name}\n                          </label>\n                          <div class=\"col-sm-8\">\n                            <input\n                              value={\n                                this.props.metaData[index] != undefined\n                                  ? this.props.metaData[index].value\n                                  : null\n                              }\n                              type=\"text\"\n                              class=\"form-control f-16\"\n                              id=\"meta1\"\n                              placeholder={`Enter ${e.name}`}\n                              onChange={(event) =>\n                                this.handleChange(event, e.name, index)\n                              }\n                            />\n                          </div>\n                          <div class=\"col-sm-1\">\n                            {\n                              <OverlayTrigger\n                                placement={\n                                  this.state.screenwidth > 570\n                                    ? \"left\"\n                                    : \"right\"\n                                }\n                                delay={{ show: 250, hide: 400 }}\n                                overlay={(event) =>\n                                  this.renderTooltip(event, e.description)\n                                }\n                              >\n                                <a class=\"f-28 txt-blk\">\n                                  <i class=\"fa fa-question-circle\"></i>\n                                </a>\n                              </OverlayTrigger>\n                            }\n                          </div>\n                        </div>\n                        {this.props.metaData[index] != undefined ? (\n                          this.props.metaData[index].value == \"\" ? (\n                            <div\n                              className=\"input-feedback-meta\"\n                              style={{\n                                marginTop: \"-11px\",\n                                marginBottom: \"16px\",\n                              }}\n                            >\n                              Please enter the {e.name}\n                            </div>\n                          ) : null\n                        ) : this.state.submit ? (\n                          <div\n                            className=\"input-feedback-meta\"\n                            style={{ marginTop: \"-11px\", marginBottom: \"16px\" }}\n                          >\n                            Please enter the {e.name}\n                          </div>\n                        ) : null}\n                      </>\n                    );\n                  })}\n                <div class=\"col-lg-12 d-flex mt-5\">\n                  <a\n                    onClick={() => this.props.history.push(\"/docHistory\")}\n                    class=\"btn btn-default m-1 w-100 f-b\"\n                  >\n                    Cancel\n                  </a>\n                  <a\n                    onClick={this.nextToSelect}\n                    class=\"btn btn-org m-1 w-100 f-b text-light\"\n                  >\n                    Next\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  metaData: state.Tik.metaData,\n  metaDataList: state.Tik.metaDataList,\n  document: state.Profile.document,\n  roledocument: state.Profile.Roledocument,\n  tikLimit: state.Tik.tikLimit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  getMetaData: () => dispatch(actions.getMetaData()),\n});\n\nexport default withRouter(\n  withLastLocation(connect(mapStateToProps, mapDispatchToProps)(AddMetadata))\n);\n","C:\\react-main\\src\\container\\roles_management\\rolesManagement.jsx",["917","918","919","920","921","922","923","924","925","926","927","928","929","930","931"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Table, SuccessPopup } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport DeleteRolesPopup from './deleteRolesPopup.jsx';\nimport EditRolesPopup from './editRolesPopup.jsx';\nimport AddRolesPopup from './addRolesPopup.jsx';\nimport { roleListingTitle } from '../../constants/Mapper.js';\nimport { formatTime, formatDate, } from \"../../helper/utility.js\"\nimport ViewRolePopup from './viewRolePopup.jsx';\n\nconst actionsData = {\n  \"edit\": true,\n  \"delete\": true\n}\n\n\nclass RolesManagement extends Component {\n  state = {\n    editFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    deleteData: {},\n    addPopupSuccess: false,\n    viewFlag: false,\n    viewData: {}\n    // addPopupLoader: false\n  }\n  editButtonOnClick = (data) => {\n    // this.props.roleInitialization();\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      editFlag: true,\n      editData: data\n    })\n  }\n\n  editClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      editFlag: false\n    })\n  }\n  deleteClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      deleteFlag: false,\n      deleteData: {}\n    })\n  }\n\n  deleteButtonOnClick = (data) => {\n    // this.props.roleInitialization();\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      deleteFlag: true,\n      deleteData: data\n    })\n  }\n\n  confirmDelete = () => {\n    const { deleteData } = this.state\n    let body = {\n      roleId: deleteData._id\n    }\n    this.props.deleteRole(body)\n  }\n\n  addRoles = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      addFlag: true\n    })\n  }\n  addClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      addFlag: false\n    })\n  }\n\n  handleSubmit = (data) => {\n    this.props.addRoleInList(data);\n  }\n\n  submitEditData = (data) => {\n    this.props.editRoleInList(data);\n  }\n\n  successPopup = () => {\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      editData: {},\n      deleteData: {},\n      viewFlag: false,\n      SuccessPopupFlag: true\n    })\n  }\n\n  successPopupClosePopup = () => {\n    this.props.roleInitialization();\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      viewFlag: false,\n      editData: {},\n      deleteData: {},\n      SuccessPopupFlag: false\n    })\n  }\n\n  componentDidMount() {\n    this.props.getRoleListInfo();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { role } = this.props;\n    const { successPopup, successLoader } = role;\n\n    if (this.props !== nextProps) {\n      if (successPopup !== \"\" && successLoader === false) {\n        this.successPopup()\n      }\n    }\n  }\n\n  closeViewPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      viewFlag: false,\n      viewData: {}\n    })\n  }\n\n  viewPopup = (data) => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      viewFlag: true,\n      viewData: data\n    })\n    // this.props.viewTeamDetailsInfo();\n  }\n\n  render() {\n    const { deleteFlag, editFlag, addFlag, viewFlag, viewData, editData, SuccessPopupFlag, deleteData } = this.state;\n    const { roleList, role, subUserAccess, otherResponsibilities } = this.props;\n\n\n    const { successPopup } = role;\n    let dataTable = {\n      titles: roleListingTitle,\n      data: []\n    };\n\n    if (roleList.length > 0) {\n      dataTable.data = roleList.map((role, key) => {\n        const { createdAt, createdBy: { firstName, lastName } } = role;\n        return {\n          ...role,\n          ...{\n            sr_no: key + 1,\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n            createdBY: `${firstName} ${lastName}`\n          }\n        };\n      })\n    }\n    return (\n      <WithLayoutContainer subUserAccess={subUserAccess} otherResponsibilities={otherResponsibilities}>\n        <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox\">\n                <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                  <h2 className=\"f-b m-0\">Roles Management</h2>\n                  {(subUserAccess === null || otherResponsibilities === null || subUserAccess.create || otherResponsibilities && otherResponsibilities.create) &&\n                    <a onClick={() => this.addRoles()}\n                      className=\"btn btn-primary py-1\">\n                      Create New Role\n                      </a>}\n                </div>\n                <div className=\"table-responsive fixHeight\">\n                  <Table\n                    dataTable={dataTable}\n                    actions={actionsData}\n                    defaultSort={'sr_no'}\n                    editButtonOnClick={this.editButtonOnClick}\n                    deleteButtonOnClick={this.deleteButtonOnClick}\n                    loader={this.props.loader}\n                    viewPopup={this.viewPopup}\n                    updatePermission={subUserAccess === null || subUserAccess.update || otherResponsibilities === null || otherResponsibilities && otherResponsibilities.update}\n                    deletePermission={subUserAccess === null || subUserAccess.delete || otherResponsibilities === null || otherResponsibilities && otherResponsibilities.delete}\n                  />\n                </div>\n              </div>\n            </div>\n            {(subUserAccess === null || otherResponsibilities === null || subUserAccess.delete || otherResponsibilities && otherResponsibilities.delete) && deleteFlag &&\n              <DeleteRolesPopup\n                closePopup={this.deleteClosePopup}\n                confirmDelete={this.confirmDelete}\n                role={role}\n                deleteData={deleteData} />}\n            {(subUserAccess === null || otherResponsibilities === null || subUserAccess.update || otherResponsibilities && otherResponsibilities.delete) && editFlag &&\n              <EditRolesPopup\n                closePopup={this.editClosePopup}\n                roleObj={role}\n                editData={editData}\n                submitEditData={this.submitEditData} />}\n            {addFlag &&\n              <AddRolesPopup\n                closePopup={this.addClosePopup}\n                submitData={this.handleSubmit}\n                role={role} />}\n            {(subUserAccess === null || otherResponsibilities === null || subUserAccess.view || otherResponsibilities && otherResponsibilities.delete) && viewFlag &&\n              <ViewRolePopup\n                closePopup={this.closeViewPopup}\n                viewData={viewData} />}\n          </div>\n        </div>\n        {(SuccessPopupFlag && successPopup) &&\n          <SuccessPopup\n            msg={successPopup.msg}\n            closePopup={this.successPopupClosePopup} />\n        }\n      </WithLayoutContainer>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  console.log(state, \"state__1111\")\n  return {\n    addPopupLoader: state.Role.addPopupLoader,\n    roleList: state.Role.roleList,\n    loader: state.Role.loader,\n    role: state.Role,\n    subUserAccess: state.Profile.role,\n    otherResponsibilities: state.Profile.Rolerole\n  };\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  getRoleListInfo: () => dispatch(actions.getRoleListInfo()),\n  deleteRole: (data) => dispatch(actions.deleteRole(data)),\n  addRoleInList: (data) => dispatch(actions.addRoleInList(data)),\n  roleInitialization: () => dispatch(actions.roleInitialization()),\n  editRoleInList: (data) => dispatch(actions.editRoleInList(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesManagement);\n","C:\\react-main\\src\\container\\Tik\\SelectTemplate.jsx",["932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960"],"import React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport { TimePicker } from \"react-pickers-bs4\";\nimport { toast } from \"react-toastify\";\nimport { withLastLocation } from \"react-router-last-location\";\nimport { withRouter } from \"react-router\";\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\nimport search from \"../../assets/img/search.png\";\nimport {\n  HeaderWithoutSearch\n} from \"../../component/index.jsx\";\nclass SelectTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      tabActive: \"Personal\",\n      updateBtn: false,\n      firstName: \"\",\n      lastName: \"\",\n      designation: \"\",\n      companyName: \"\",\n      address: \"\",\n      showSuccess: false,\n      message: \"\",\n      coverImage: \"\",\n      imageURL: \"\",\n      mobileNumberUpdate: false,\n      MobileOtpPopup: false,\n      activeCardindex: null,\n      templateId: \"\",\n      searchKey: \"\",\n    };\n  }\n  componentDidMount() {\n    this.props.selectTemplate({ search: \"\" });\n    localStorage.removeItem(\"draftId\");\n    this.props.clearDraft();\n    localStorage.setItem(\"isEditDraft\", JSON.stringify(true));\n    console.log(this.props)\n  }\n\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.profileUpdateSuccess != this.props.profileUpdateSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: this.props.profileUpdateSuccess.msg,\n        updateBtn: false,\n      });\n      this.props.profile();\n    }\n    if (prevProps.templateDetail != this.props.templateDetail) {\n      let prevRoute = JSON.parse(localStorage.getItem(\"prevroute\"));\n      if (prevRoute == \"editDraft\") {\n        this.props.history.push(\"/edit-draft\");\n      } else if (prevRoute == \"create-tik\") {\n        this.props.history.push(\"/create-tik\");\n      } else {\n        localStorage.setItem(\"isEditTik\", JSON.stringify(true));\n        this.props.history.push(\"/edit-tik\");\n      }\n    }\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n  };\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  activeTab = (activeName) => {\n    this.setState({\n      tabActive: activeName,\n    });\n  };\n  updateToggle = () => {\n    this.setState({\n      updateBtn: true,\n    });\n  };\n  handleChange = (e, key) => {\n    this.props.profileEdit({ e, key });\n  };\n\n  handleSubmit = () => {\n    const { firstName, lastName, designation, address } = this.props;\n    this.props.profileUpdate({\n      firstName,\n      lastName,\n      designation,\n      address,\n      photoData: this.state.coverImage ? this.state.coverImage : null,\n    });\n    // this.props.profilePic({photoData: this.state.coverImage ? this.state.coverImage : null})\n  };\n  imageChangeHandler = (e) => {\n    this.setState({\n      imageURL: URL.createObjectURL(e.target.files[0]),\n      coverImage: e.target.files[0],\n    });\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      mobileNumberUpdate: false,\n    });\n  };\n  mobileUpdateHandler = () => {\n    this.setState({\n      mobileNumberUpdate: true,\n    });\n  };\n  mobileOtpModalClose = () => {\n    this.setState({\n      MobileOtpPopup: false,\n    });\n  };\n  activeCard = (index, id) => {\n    this.setState({\n      activeCardindex: index,\n      templateId: id,\n    });\n    localStorage.setItem(\"selectId\", JSON.stringify(id));\n  };\n  getTemplateDetail = () => {\n    const { templateId } = this.state;\n\n    let local_template_id = JSON.parse(localStorage.getItem(\"templateId\"));\n    if (templateId != \"\" || local_template_id != null) {\n      if (templateId == \"\") {\n        localStorage.setItem(\"templateId\", JSON.stringify(local_template_id));\n        this.props.getTemplateDetail({\n          templateId: local_template_id,\n          whiteList: true,\n        });\n      } else {\n        localStorage.setItem(\"templateId\", JSON.stringify(templateId));\n        this.props.getTemplateDetail({ templateId, whiteList: true });\n      }\n    }\n  };\n  searchHandler = (e) => {\n    this.props.selectTemplate({ search: e.target.value });\n    this.setState({ searchKey: e.target.value });\n    this.setState({\n      activeCardindex: null,\n      templateId: \"\",\n    });\n    localStorage.removeItem(\"selectId\");\n    localStorage.removeItem(\"templateId\");\n  };\n  searchSubmit = () => {\n    this.props.selectTemplate({ search: this.state.searchKey });\n    localStorage.removeItem(\"selectId\");\n    localStorage.removeItem(\"templateId\");\n  };\n  render() {\n    const {\n      showNotification,\n      logout,\n      showSuccess,\n      message,\n      activeCardindex,\n    } = this.state;\n    const { roledocument, document, tikLimit } = this.props;\n    if(tikLimit){\n      this.props.history.push(\"/docHistory\");\n    }\n    if (document && roledocument) {\n      if (document.create == false && roledocument.create == false) {\n        this.props.history.push(\"/docHistory\");\n        toast.error(\"you are not authorized\");\n      }\n    }\n    this.props.templateList.map((e) => {\n      console.log(e.thumbnail);\n    });\n    console.log(this.props.document);\n    const selectId = JSON.parse(localStorage.getItem(\"selectId\"));\n    \n    return (\n      <>\n        <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container my-5 selectTemp\">\n          <div class=\"row\">\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n              <h1 class=\"text-center txt-blk mb-4 f-b\">Select Template</h1>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n                role=\"search\"\n                class=\"search navbar-form-custom form-inline\"\n                action=\"#\"\n              >\n                <div class=\"form-group dropdown\">\n                  <img\n                    className=\"searchImg\"\n                    src={search}\n                    style={{ zIndex: \"9999\" }}\n                  />\n                  {/* <!-- <a href=\"#!\" class=\"filter dropdown-toggle\" role=\"button\" id=\"searchDrop\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\"><i class=\"fas fa-chevron-down\"></i></a> --> */}\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search Template...\"\n                    class=\"form-control pl-5\"\n                    name=\"top-search\"\n                    id=\"top-search\"\n                    onChange={this.searchHandler}\n                  />\n                </div>\n                <a\n                  onclick={this.searchSubmit}\n                  type=\"submit\"\n                  class=\"btn btn-primary f-18 ml-2 f-m px-4\"\n                >\n                  Search\n                </a>\n              </form>\n            </div>\n            <div class=\"col-lg-12 box-shd br-20 mt-5 \">\n              <div\n                class=\"col my-5 selectTemplate fixHeight\"\n                style={{ minHeight: \"415px\" }}\n              >\n                {this.props.templateList.length != 0 ? (\n                  <div class=\"template-deck\">\n                    {this.props.templateList.map((e, i) => {\n                      return (\n                        <div\n                          onClick={() => this.activeCard(i, e._id)}\n                          onDoubleClick={() => this.getTemplateDetail()}\n                          class={\n                            activeCardindex == i || e._id == selectId\n                              ? \"card border-0 template-card selected text-center\"\n                              : \"card border-0 template-card text-center\"\n                          }\n                        >\n                          <img\n                            class=\"card-img-top\"\n                            src={e.thumbnail}\n                            alt=\"Card image cap\"\n                          />\n                          <div\n                            class=\"card-footer border-0 pl-0 pr-0\"\n                            style={{ width: \"120px\" }}\n                          >\n                            <strong class=\"txt-blk f-18 \">\n                              {e.template_name}\n                            </strong>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                ) : (\n                  <div className=\"text-center d-flex justify-content-center\">\n                    No Data Found\n                  </div>\n                )}\n              </div>\n            </div>\n            <div class=\"offset-lg-1 col-lg-10 mt-5\">\n              <div class=\"offset-lg-2 col-lg-8 d-flex\">\n                <a\n                  onClick={() => this.props.history.push(\"/add-metadata\")}\n                  class=\"btn btn-default m-1 w-100 f-b\"\n                >\n                  Previous\n                </a>\n                <a\n                  onClick={this.getTemplateDetail}\n                  class=\"btn btn-org m-1 w-100 f-b text-light\"\n                >\n                  Next\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    templateList: state.Template.templateList,\n    loader: state.Role.loader,\n    deleteSuccess: state.Template.deleteSuccess,\n    templateDetail: state.Template.templateDetail,\n    templateObj: state.Template,\n    document: state.Profile.document,\n    roledocument: state.Profile.Roledocument,\n    tikLimit: state.Tik.tikLimit,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectTemplate: (payload) => dispatch(actions.selectTemplate(payload)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  clearDraft: () => dispatch(actions.clearDraft()),\n});\n\nexport default withRouter(\n  withLastLocation(connect(mapStateToProps, mapDispatchToProps)(SelectTemplate))\n);\n","C:\\react-main\\src\\container\\Tik\\CreateTik.jsx",[],"C:\\react-main\\src\\container\\Tik\\TikListing.jsx",["961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  WithLayoutContainer,\n  TikHistoryTable,\n  SuccessPopup,\n} from '../../component/index.jsx';\nimport * as actions from '../../actions';\nimport { formatTime, formatDate } from '../../helper/utility.js';\nimport { documentMapper, documentFilter } from '../../constants/Mapper.js';\nimport DeleteDraftTIikPopup from './deleteDraftTikPopup.jsx';\nimport AddTag from './AddTag.jsx';\nimport { Helmet } from 'react-helmet';\n\nlet dataTable = {\n  titles: documentMapper,\n  data: [],\n};\nclass TikListing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: ['all', 'Accepted', 'Update_Required', 'Rejected', 'Pending', 'Shared with me', 'Drafts', 'archive-list'],\n      selectedFilter: 'all',\n      metaFlag: false,\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      getFinalMetaValue: [],\n      deleteSuccessFlag: false,\n      addFlag: false,\n      viewDraft: false,\n      addTag: false,\n    };\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.history.replace();\n    const { selectedFilter } = this.state;\n    this.props.getDocumentListInfo(selectedFilter);\n    this.props.getMetaListInfo();\n    localStorage.removeItem('addMetaData');\n    localStorage.removeItem('isEditTik');\n    localStorage.removeItem('prevroute');\n    localStorage.removeItem('selectId');\n    this.props.createTikEdit({ metaData: [] });\n    this.props.clearDraft();\n    const filterTag = this.props.location.state != undefined ? this.props.location.state.detail : 'all';\n    this.handleFilter(filterTag);\n  }\n\n  handleFilter = (filter) => {\n    this.setState({\n      selectedFilter: filter,\n    });\n      this.props.getDocumentListInfo(filter);\n  }\n\n  getIndexofMetaFiled = () => {\n    const { metaList } = this.props;\n    const finalMetaList = [];\n    dataTable.titles.map((data) => {\n      metaList.filter((item) => {\n        if (data.id == item.name && data.isDropdownShow) {\n          finalMetaList.push(data);\n        }\n      });\n    });\n    return finalMetaList;\n  }\n\n  getIndexofMetaFiledAdd = () => {\n    const finalMetaList = [];\n    dataTable.titles.map((data) => {\n      if (!data.isDropdownShow) {\n        finalMetaList.push(data);\n      }\n    });\n    return finalMetaList;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tik } = this.props;\n    const { successPopup, successLoader, deleteFlag } = tik;\n    const { selectedFilter, deleteSuccessFlag, viewDraft } = this.state;\n\n    if (this.props !== prevProps) {\n      if (successPopup !== '' && successLoader === false) {\n        this.successPopup();\n        if (deleteFlag === true && deleteSuccessFlag === true) {\n          this.props.getDocumentListInfo(selectedFilter);\n        }\n      }\n    }\n    if (prevProps.draftDetailData != this.props.draftDetailData) {\n      if (viewDraft) {\n        this.props.history.push('/view-draft');\n      } else {\n        this.props.history.push('/edit-draft');\n      }\n    }\n    if (prevProps.tikDetailSuccess != this.props.tikDetailSuccess) {\n      this.props.history.push('/edit-tik');\n    }\n    if (prevProps.viewTikData != this.props.viewTikData) {\n      this.props.history.push(\"/view-tik\")\n    }\n    if(this.props.archiveSuccess != prevProps.archiveSuccess){\n      this.successPopup();\n      this.props.getDocumentListInfo(selectedFilter);\n    }\n\n    if (prevProps.specialFeatures != this.props.specialFeatures) {\n      this.props.specialFeatures &&\n        this.props.specialFeatures.map((e) => {\n          if (e.featureName == \"add_tags\") {\n            this.setState({ addTag: true });\n          }\n        });\n    }\n  }\n\n  successPopup = () => {\n    this.setState({\n      deleteSuccessFlag: false,\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: true,\n      addFlag: false,\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.tikInitialization();\n    this.setState({\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: false,\n      deleteSuccessFlag: false,\n\n    });\n  }\n\n  deleteClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n    });\n  }\n\n  deleteDraftOnClick = (data) => {\n    document.body.classList.add('modal-open');\n    this.setState({\n      deleteDraftFlag: true,\n      deleteDraftData: data,\n      deleteSuccessFlag: true,\n    });\n  }\n\n  confirmDelete = () => {\n    const { deleteDraftData } = this.state;\n\n    const body = {\n      draftId: deleteDraftData._id,\n    };\n    this.props.deleteDraftTikListing(body);\n  }\n\n  editDraft = (e) => {\n    this.props.draftDtail({ Id: e._id });\n    localStorage.setItem('draftId', JSON.stringify(e._id));\n  }\n\n  editTik = (e) => {\n    this.props.tikDetail({ Id: e._id });\n    localStorage.setItem('docId', JSON.stringify(e._id));\n  }\n\n  viewDraft = (e, filter) => {\n    console.log(e,filter)\n    if (filter == 'Drafts') {\n      this.setState({ viewDraft: true });\n      this.props.draftDtail({ Id: e._id });\n      localStorage.setItem('draftId', JSON.stringify(e._id));\n    }\n    if (filter == 'all' || filter == 'Rejected' || filter == 'Update_Required' || filter == 'Pending' || filter == 'archive-list' || filter == 'Accepted' || filter == 'Shared with me') {\n      this.props.viewTik({ Id: e._id })\n      localStorage.setItem('docId', JSON.stringify(e._id));\n    }\n  }\n\n  addMetaFiled = (titleObject, value) => {\n    if (value === 'plus') {\n      let valueArray = [];\n      valueArray = this.getIndexofMetaFiledAdd();\n\n      const index = dataTable.titles.findIndex((x) => x.id === valueArray[0].id);\n      if (dataTable.titles[index]) {\n        dataTable.titles[index].isDropdownShow = !dataTable.titles[index].isDropdownShow;\n      }\n    } else {\n      const index = dataTable.titles.findIndex((x) => x.id === titleObject.id);\n      if (dataTable.titles[index]) {\n        dataTable.titles[index].isDropdownShow = !dataTable.titles[index].isDropdownShow;\n      }\n    }\n    this.setState({\n      flag: true,\n    });\n  }\n\n  addButtonOnClick = (data) => {\n    this.setState({\n      addFlag: true,\n      addTagData: data,\n    });\n  }\n\n  addTagClosePopup = () => {\n    this.setState({\n      addFlag: false,\n    });\n  }\n  archiveDocument = (e) => {\n    this.props.archive({ Id:e._id,isArchive:true});\n  }\n  unarchiveDocument = (e) => {\n    this.props.archive({ Id:e._id,isArchive:false});\n  }\n  render() {\n    const {\n      filter, selectedFilter, metaFlag, deleteDraftData, deleteDraftFlag, SuccessPopupFlag, getFinalMetaValue, addFlag, addTagData, archiveSuccess, addTag\n    } = this.state;\n    const {\n      documentList, metaList, loader, tik, document, roledocument\n    } = this.props;\n    const { successPopup } = tik;\n    console.log(roledocument)\n    dataTable = {\n      titles: documentMapper,\n      data: [],\n    };\n\n    if (documentList && documentList.length > 0) {\n      dataTable.data = documentList.map((doc, key) => {\n        const { createdAt } = doc;\n        return {\n          ...doc,\n          ...{\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n          },\n        };\n      });\n    }\n\n    if (archiveSuccess && archiveSuccess.length > 0) {\n      dataTable.data = archiveSuccess.data.map((doc, key) => {\n        const { createdAt } = doc;\n        return {\n          ...doc,\n          ...{\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n          },\n        };\n      });\n    }\n\n    if (metaList.length > 0 && dataTable.titles.filter((data) => (data.id === metaList[0].name)).length === 0 && metaFlag === false) {\n      metaList.length > 0 && metaList.map((item, key) => {\n        if (key === 0 && dataTable.titles.filter((data) => (data.id === metaList[0].name)).length === 0) {\n          dataTable.titles.splice(1, 0, {\n            id: item.name, isSort: true, text: item.name, isDropdownShow: true,\n          });\n        } else {\n          dataTable.titles.splice(key + 1, 0, {\n            id: item.name, isSort: true, text: item.name, isDropdownShow: false,\n          });\n        }\n      });\n    }\n\n    const metaField = this.getIndexofMetaFiled();\n\n    return (\n      <>  \n      <WithLayoutContainer>\n        <div id=\"dochistory\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div id=\"changingContent\" className=\"containerBox\">\n                <div className>\n                  <div className=\"table-title\">\n                    <h2 className=\"f-b mb-4 mt-0\">Tik History</h2>\n                  </div>\n                  {/* tabs */}\n                  {/* Nav pills */}\n                  <ul className=\"nav nav-pills\">\n                    {filter.map((filterName, index) => (\n                      <li className=\"nav-item\" key={index}>\n                        <a className={`nav-link ${selectedFilter === filterName ? 'active' : ''}`} onClick={() =>  this.handleFilter(filterName)}>{documentFilter[filterName]}</a>\n                      </li>\n                    ))}\n                  </ul>\n                  {/* end Nav pills */}\n                  {/* Tab panes */}\n                  <div className=\"tab-content mt-2\">\n                    {/* tab-content-all */}\n                    <div className=\"tab-pane active\" id=\"all\">\n                      <div className=\"table-responsive fixHeight\" style={{ maxHeight: 'calc(100vh - 360px)' }}>\n                        <TikHistoryTable\n                          dataTable={dataTable}\n                          // actions={actionsData}\n                          deleteDraftOnClick={this.deleteDraftOnClick}\n                          defaultSort=\"documentStatus\"\n                          loader={loader}\n                          metaList={metaList}\n                          addButtonOnClick={this.addButtonOnClick}\n                          // addMetaFiledInTable={this.addMetaFiledInTable}\n                          selectedFilter={selectedFilter}\n                          getFinalMetaValue={getFinalMetaValue}\n                          editButtonOnClick={this.editDraft}\n                          updateButtonOnClick={this.editTik}\n                          addMetaFiled={this.addMetaFiled}\n                          metaFieldData={metaField}\n                          viewDraft={this.viewDraft}\n                          action={true}\n                          editPermission={document == null || roledocument == null || (document.update || roledocument.update)}\n                          archive={this.archiveDocument}\n                          unarchive={this.unarchiveDocument}\n                          isAddTag= {addTag}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"tab-pane fade\" id=\"archive\">...</div>\n                  </div>\n                  {deleteDraftFlag\n                    && (\n                      <DeleteDraftTIikPopup\n                        closePopup={this.deleteClosePopup}\n                        confirmDelete={this.confirmDelete}\n                        tik={tik}\n                        deleteData={deleteDraftData}\n                      />\n                    )}\n\n                  {(SuccessPopupFlag && successPopup)\n                    && (\n                      <SuccessPopup\n                        msg={successPopup.msg}\n                        closePopup={this.successPopupClosePopup}\n                      />\n                    )}\n                  {addFlag\n                    && <AddTag closePopup={this.addTagClosePopup} addTagData={addTagData} />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    documentList: state.Tik.documentList,\n    metaList: state.Tik.metaList,\n    loader: state.Tik.loader,\n    tik: state.Tik,\n    draftDetailData: state.Tik.draftDetailSuccess,\n    tikDetailSuccess: state.Tik.tikDetailSuccess,\n    viewTikData: state.Tik.viewTik,\n    roledocument: state.Profile.Roledocument,\n    document: state.Profile.document,\n    // successLoader: state.Tik.tikDetailSuccess,\n    // successPopup: state.Tik.tikDetailSuccess,\n    archiveSuccess: state.Tik.archiveSuccess,\n    specialFeatures: state.Subscription.specialFeatures,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDocumentListInfo: (filter) => dispatch(actions.getDocumentListInfo(filter)),\n  getMetaListInfo: () => dispatch(actions.getMetaListInfo()),\n  deleteDraftTikListing: (data) => dispatch(actions.deleteDraftTikListing(data)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  draftDtail: (data) => dispatch(actions.draftDtail(data)),\n  tikInitialization: () => dispatch(actions.tikInitialization()),\n  clearDraft: () => dispatch(actions.clearDraft()),\n  tikDetail: (data) => dispatch(actions.tikDetail(data)),\n  viewTik: (payload) => dispatch(actions.viewTik(payload)),\n  archive: (payload) => dispatch(actions.archive(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TikListing);\n","C:\\react-main\\src\\container\\Tik\\EditDraft.jsx",["984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192"],"import React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport { Images } from \"../../assets/images\";\nimport * as actions from \"../../actions\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport Timekeeper from \"react-timekeeper\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DraftMobileView from \"./DraftMobileView.jsx\";\nimport { toast } from \"react-toastify\";\nimport CreatableSelect from \"react-select/creatable\";\nimport _ from \"lodash\";\nimport { draftDetailSuccess } from \"../../actions\";\n// import QRCode from 'react-qr-code';\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\nimport calander from\"../../assets/img/cal.png\";\nimport times from \"../../assets/img/time.png\";\nimport certi from \"../../assets/img/certi.png\";\nvar QRCode = require(\"qrcode.react\");\n\nclass EditDraft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      tabActive: \"Personal\",\n      updateBtn: false,\n      firstName: \"\",\n      lastName: \"\",\n      designation: \"\",\n      companyName: \"\",\n      address: \"\",\n      showSuccess: false,\n      message: \"\",\n      coverImage: \"\",\n      imageURL: \"\",\n      mobileNumberUpdate: false,\n      MobileOtpPopup: false,\n      showTime: false,\n      time: \"12:34pm\",\n      attrVal: [],\n      timeIndex: null,\n      imgList: [],\n      imageURL: \"\",\n      coverImage: \"\",\n      image: [],\n      livepreview: [],\n      MobileViewPoppup: false,\n      submit: false,\n      reciverList: [],\n      teeDetail: [],\n      showTicket: false,\n      screenwidth: \"\",\n      loader: false,\n      error: false,\n      errormessage: \"\",\n      touch: false,\n      isbase64: false,\n      isChecked: false,\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n  componentDidMount() {\n    this.props.errorClear();\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    const draftId = JSON.parse(localStorage.getItem(\"draftId\"));\n    if (draftId != null) {\n      this.props.draftDtail({ Id: draftId });\n      localStorage.setItem(\"isEditDraft\", JSON.stringify(false));\n    }\n    this.props.profile();\n    // this.props.getTemplateDetail({ templateId: tempId });\n    this.props.reciverListInfo();\n    // window.addEventListener(\"resize\", this.updateWidth);\n    localStorage.setItem(\"prevroute\", JSON.stringify(\"editDraft\"));\n    // let previousdata = this.props.imgList;\n    // this.props.imgListData.map((e) => {\n    //   console.log(\"ppppppppppppppppppppppp\", e);\n    //   let data5 = previousdata[e.order - 1];\n    //   let testObject = {\n    //     ...data5,\n    //     dataType: e.dataType,\n    //     default: e.default,\n    //     name: e.name,\n    //     order: e.order.toString(),\n    //     value: e.value,\n    //   };\n    //   previousdata[e.order - 1] = testObject;\n    //   this.setState({ attrVal: previousdata });\n    //   this.props.imgListEdit({ previousdata });\n    // });\n  }\n\n  b64toBlob = (b64Data, contentType, sliceSize) => {\n    contentType = contentType || \"\";\n    sliceSize = sliceSize || 512;\n\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  updateWidth = () => {\n    const x = document.getElementById(\"screenPixel\").offsetWidth;\n    this.setState({\n      screenwidth: x,\n    });\n  };\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.templateDetail != this.props.templateDetail) {\n      if (this.props.templateDetail != undefined) {\n        let booleanMain = [];\n        Object.keys(this.props.templateDetail).map((e) => {\n          if (e == \"attribute\") {\n            this.props.templateDetail[\"attribute\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"image\") {\n            this.props.templateDetail[\"image\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"text\") {\n            this.props.templateDetail[\"text\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n        });\n        let sortedBooleanMain = _.sortBy(booleanMain, [\"order\"]);\n        // console.log('callllllllllllllllllllll',sortedBooleanMain)\n        sortedBooleanMain.map((e) => {\n          if (e.dataType == \"Boolean\") {\n            //  console.log('boolean condition')\n            let booleanData = this.state.attrVal;\n            let data = booleanData[e.order - 1];\n            const object = {\n              ...data,\n              name: e.attribute_name,\n              value: false,\n              order: e.order,\n              dataType: e.datatype,\n              default: e.defaultValue,\n            };\n            booleanData[e.order - 1] = object;\n            this.setState(\n              {\n                attrVal: booleanData,\n              },\n              () => console.log(\"sasvddvhjdadhjddhjdahd\", this.state.attrVal)\n            );\n          }\n          if (e.dataType == \"Text\") {\n            //  console.log('boolean condition')\n            let textData = this.state.attrVal;\n            let data = textData[e.order - 1];\n            const object = {\n              ...data,\n              name: e.attribute_name,\n              value: e.value,\n              order: e.order,\n              dataType: e.dataType,\n              default: e.default,\n            };\n            textData[e.order - 1] = object;\n            this.setState(\n              {\n                attrVal: textData,\n              },\n              () => console.log(\"sasvddvhjdadhjddhjdahd\", this.state.attrVal)\n            );\n          }\n        });\n      }\n    }\n\n    if (prevProps.createTikSuccess != this.props.createTikSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Tik published successfully\",\n        loader: false,\n      });\n    }\n    if (this.props.error != prevProps.error) {\n      // console.log(this.props.error);\n      this.setState({ loader: false });\n    }\n    if (\n      this.props.reciverData != undefined &&\n      this.props.reciverData instanceof Array &&\n      this.props.reciverData != prevProps.reciverData\n    ) {\n      let teeObjectList = [];\n      let teeArrayList = [];\n      this.props.reciverData.map((e) => {\n        // console.log(e);\n        teeArrayList.push(e.email);\n        const teeObject = {\n          ...teeArrayList,\n          value: e.email,\n          label: e.email,\n        };\n        // console.log(teeObject);\n      });\n      teeArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeObjectList.push(teeObject);\n      });\n      //   this.setState({ teeDetail: teeObjectList });\n      this.props.reciverDraft({ teeDetail: teeObjectList });\n    }\n\n    if (this.props.saveDraftSuccess != prevProps.saveDraftSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Draft saved sucessfully\",\n        loader: false,\n      });\n    }\n\n    if (this.props.draftDetailSuccess != prevProps.draftDetailSuccess) {\n      let previousdata = this.props.imgList;\n      this.props.imgListData.map((e) => {\n        if (e.dataType == \"Image\") {\n          let data5 = previousdata[e.order - 1];\n          let testObject = {\n            ...data5,\n            dataType: e.dataType,\n            default: e.default,\n            name: e.name,\n            order: e.order.toString(),\n            value: e.value,\n            fileName: e.fileName,\n          };\n          previousdata[e.order - 1] = testObject;\n          this.setState({ attrVal: previousdata });\n          this.props.imgListEdit({ previousdata });\n        } else {\n          let data5 = previousdata[e.order - 1];\n          let testObject = {\n            ...data5,\n            dataType: e.dataType,\n            default: e.default,\n            name: e.name,\n            order: e.order.toString(),\n            value: e.value,\n          };\n          previousdata[e.order - 1] = testObject;\n          this.setState({ attrVal: previousdata });\n          this.props.imgListEdit({ previousdata });\n        }\n      });\n      let teeDraftObjectList = [];\n      let teeDraftArrayList = [];\n      console.log(\n        \"oooooooooooooooo\",\n        this.props.draftDetailSuccess.draftData.receiverList\n      );\n      this.props.draftDetailSuccess.draftData.receiverList.map((e) => {\n        // console.log(e);\n        teeDraftArrayList.push(e);\n        const teeObject = {\n          ...teeDraftArrayList,\n          value: e,\n          label: e,\n        };\n        // console.log(teeObject);\n      });\n      teeDraftArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeDraftObjectList.push(teeObject);\n      });\n      //   this.setState({ teeDetail: teeObjectList });\n      this.props.reciverDraftEdit({ reciverList: teeDraftObjectList });\n      this.props.getTemplateDetail({\n        templateId: this.props.draftDetailSuccess.draftData.templateId,\n        whiteList: true,\n      });\n      localStorage.setItem(\n        \"addMetaData\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.metaList)\n      );\n      localStorage.setItem(\n        \"templateId\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.templateId)\n      );\n      localStorage.setItem(\n        \"selectId\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.templateId)\n      );\n      this.props.addMetaData({\n        metaData: this.props.draftDetailSuccess.draftData.metaList,\n      });\n    }\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.history.push({\n      pathname: \"/docHistory\",\n      state: { detail: \"Drafts\" },\n    });\n  };\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  ticketHandler = () => {\n    this.setState({\n      showTicket: !this.state.showTicket,\n    });\n  };\n\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  activeTab = (activeName) => {\n    this.setState({\n      tabActive: activeName,\n    });\n  };\n  updateToggle = () => {\n    this.setState({\n      updateBtn: true,\n    });\n  };\n\n  handleSubmit = () => {\n    this.setState({ submit: true, touch: true });\n    let images = [];\n    let sortReciverList = [];\n    let sortattrValCheck = [];\n    let sortimgListCheck = [];\n    let imageValueFilter = [];\n    let sortImageFilter = [];\n    let numberVali = [];\n    let filterTemplateDetail;\n    let blobArray = [];\n\n    const { draftDetailSuccess, imageData } = this.props;\n    filterTemplateDetail = this.props.templateDetail.attribute\n    // filterTemplateDetail = this.props.templateDetail.attribute.filter(\n    //   (e) => e.dataType != \"Text\"\n    // );\n\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n    const sortimage = this.props.imageData.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    sortimgList.map((e, i) => {\n      if (e.dataType == \"Image\" && e.value == \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n      } else if (\n        e.dataType == \"Image\" &&\n        e.value != \"\" &&\n        e.value.split(\";\")[1] != undefined\n      ) {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n\n        let block = e.value.split(\";\");\n        // Get the content type of the image\n        let contentType = block[0].split(\":\")[1]; // In this case \"image/gif\"\n        // get the real base64 content of the file\n        let realData = block[1].split(\",\")[1]; // In this case \"R0lGODlhPQBEAPeoAJosM....\"\n\n        // Convert it to a blob to upload\n        let blob = this.b64toBlob(realData, contentType);\n\n        blobArray.push(blob);\n        this.setState({ isbase64: true });\n      } else if (\n        e.dataType == \"Image\" &&\n        e.value != \"\" &&\n        e.value.split(\";\")[1] == undefined\n      ) {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n          value: e.value,\n        };\n        imageValueFilter.push(imageFilterObject);\n        this.setState({ isbase64: false });\n      }\n    });\n\n    sortimgList.map((e) => {\n      if (e.dataType == \"Number\") {\n        numberVali.push(e.value);\n      }\n    });\n\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    const addMeta = JSON.parse(localStorage.getItem(\"addMetaData\"));\n\n    const documentName = addMeta[0].value;\n    const templateId = tempId;\n\n    imageData.map((e) => {\n      if (e != undefined) {\n        images.push(e.image);\n      }\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(imageValueFilter);\n\n    console.log(\n      concatAttr,\n      filterTemplateDetail,\n      imageValueFilter,\n      concatAttr.length === filterTemplateDetail.length,\n      !sortImageFilter.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n    let concateImage = images.concat(blobArray);\n    if (\n      concatAttr.length === filterTemplateDetail.length &&\n      !sortImageFilter.includes(\"\") &&\n      sortReciverList.length != 0 &&\n      this.state.error == false &&\n      /^[0-9]*$/i.test(numberVali)\n    ) {\n      this.setState({ loader: true });\n      this.props.createTik({\n        documentName: addMeta[0].value,\n        templateId,\n        metaData: addMeta,\n        sortattrVal: concatAttr,\n        sortimgList,\n        images: this.state.isbase64 ? concateImage : images,\n        receiverList: sortReciverList,\n      });\n    }\n  };\n  saveDraft = () => {\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    this.setState({ isChecked: true });\n    let images = [];\n    let sortReciverList = [];\n    let sortattrValCheck = [];\n    let sortimgListCheck = [];\n    let imageValueFilter = [];\n    let sortImageFilter = [];\n    let numberVali = [];\n    let filterTemplateDetail;\n    let blobArray = [];\n\n    const {\n      draftDetailSuccess,\n      imageData,\n      metaData,\n      templateDetail,\n    } = this.props;\n    let isEditDraft = JSON.parse(localStorage.getItem(\"isEditDraft\"));\n    let draftDetailId = draftDetailSuccess.draftData._id;\n    filterTemplateDetail = draftDetailSuccess.templateDetails.attribute.filter(\n      (e) => e.dataType != \"Text\"\n    );\n\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n    const sortimage = this.props.imageData.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    sortimgList.map((e, i) => {\n      if (e.dataType == \"Image\" && e.value == \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n      } else if (\n        e.dataType == \"Image\" &&\n        e.value != \"\" &&\n        e.value.split(\";\")[1] != undefined\n      ) {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n\n        let block = e.value.split(\";\");\n        // Get the content type of the image\n        let contentType = block[0].split(\":\")[1]; // In this case \"image/gif\"\n        // get the real base64 content of the file\n        let realData = block[1].split(\",\")[1]; // In this case \"R0lGODlhPQBEAPeoAJosM....\"\n\n        // Convert it to a blob to upload\n        let blob = this.b64toBlob(realData, contentType);\n        blobArray.push(blob);\n        this.setState({ isbase64: true });\n      } else {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n          value: e.value,\n        };\n        imageValueFilter.push(imageFilterObject);\n        this.setState({ isbase64: false });\n      }\n    });\n\n    sortimgList.map((e) => {\n      if (e.dataType == \"Number\") {\n        numberVali.push(e.value);\n      }\n    });\n\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    const addMeta = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    const documentName = addMeta[0].value;\n    const templateId = tempId;\n\n    imageData.map((e) => {\n      if (e != undefined) {\n        images.push(e.image);\n      }\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(imageValueFilter);\n    console.log(\n      imageValueFilter,\n      concatAttr.length,\n      filterTemplateDetail.length,\n      concatAttr.length === filterTemplateDetail.length,\n      !sortImageFilter.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n    console.log(blobArray);\n    let concateImage = images.concat(blobArray);\n    console.log(\"aaaaaaaaaaaa\", concateImage);\n\n    this.setState({ loader: true });\n    this.props.saveDraft({\n      documentName: addMeta[0].value,\n      templateId: tempId,\n      metaData: addMeta,\n      sortattrVal: concatAttr,\n      sortimgList,\n      images: this.state.isbase64 ? concateImage : images,\n      receiverList: sortReciverList,\n      removeDraftId: isEditDraft ? \"\" : draftDetailId,\n    });\n  };\n  imageChangeHandler = (e) => {\n    this.setState({\n      imageURL: URL.createObjectURL(e.target.files[0]),\n      coverImage: e.target.files[0],\n    });\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      mobileNumberUpdate: false,\n    });\n  };\n  mobileUpdateHandler = () => {\n    this.setState({\n      mobileNumberUpdate: true,\n    });\n  };\n  mobileOtpModalClose = () => {\n    this.setState({\n      MobileOtpPopup: false,\n    });\n  };\n  showTimeHandler = (index) => {\n    this.setState({\n      showTime: true,\n      timeIndex: index,\n    });\n  };\n  showTimeCloseHandler = () => {\n    this.setState({\n      showTime: false,\n    });\n  };\n  setTime = (e, index) => {\n    this.setState({\n      time: e,\n    });\n  };\n\n  handleChange = (e, value, index, name, datatype, defaultValue, date = \"\") => {\n    this.setState({ touch: true });\n    if (value == \"attribute_name\") {\n      let previousdata = this.props.imgList;\n      let livePreview = this.state.livepreview;\n\n      let data = previousdata[index];\n      let previewData = livePreview[index];\n      const object = {\n        ...data,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked.toString()\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: (index + 1).toString(),\n        dataType: datatype,\n        default: defaultValue,\n      };\n      const previewObject = {\n        ...previewData,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: index + 1,\n      };\n      previousdata[index] = object;\n      livePreview[index] = previewObject;\n\n      //   this.setState({\n      //     attrVal: previousdata,\n      //     livepreview: livePreview,\n      //   });\n      this.props.imgListEdit({ previousdata });\n    }\n    if (value == \"image_title\") {\n      if (e.target.files == undefined) {\n        let previousdata = this.props.imgList;\n\n        let data = previousdata[index];\n        const object = {\n          ...data,\n          name: name,\n          value: e.target.value,\n          order: (index + 1).toString(),\n          dataType: datatype,\n          default: defaultValue,\n        };\n\n        previousdata[index] = object;\n        this.props.imgListEdit({ previousdata });\n      } else {\n        if (\n          e.target.files[0].name.split(\".\").includes(\"jpg\") ||\n          e.target.files[0].name.split(\".\").includes(\"jpeg\") ||\n          e.target.files[0].name.split(\".\").includes(\"png\")\n        ) {\n          let previousdata = this.props.imgList;\n          let previousdata2 = this.props.imageData;\n\n          let data = previousdata[index];\n          let data2 = previousdata2[index];\n\n          const object = {\n            ...data,\n            name: name,\n            order: (index + 1).toString(),\n            dataType: datatype,\n            default: defaultValue,\n            value: \"\",\n          };\n          const object2 = {\n            ...data2,\n            name: name,\n            image: e.target.files[0],\n            order: (index + 1).toString(),\n            default: defaultValue,\n            value: e.target.files[0].name,\n          };\n          previousdata[index] = object;\n          previousdata2[index] = object2;\n\n          this.setState({\n            imgList: previousdata,\n            image: previousdata2,\n          });\n          this.props.imgListEdit({ previousdata });\n          this.props.imageEdit({ previousdata2 });\n        } else {\n          toast.error(\"Only jpg,jpeg and png files are supported\");\n        }\n      }\n    }\n  };\n  handleTeeChange = (e) => {\n    console.log(e);\n    if (e != null) {\n      if (e.length != 0) {\n        const result = e.filter(\n          (j) => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(j.value)\n        );\n        if (result.length > 0) {\n          this.setState({\n            error: true,\n            errormessage: \"invalid email address\",\n          });\n        } else {\n          this.setState({\n            error: false,\n            errormessage: \"\",\n          });\n          // this.setState({\n          //   reciverList: e,\n          // });\n          this.props.reciverDraftEdit({ reciverList: e });\n        }\n      }\n    } else {\n      this.props.reciverDraftEdit({ reciverList: e });\n    }\n  };\n  imageChangeHandler = (e) => {\n    if (\n      !e.target.files[0].name.split(\".\").includes(\"jpg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"jpeg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"png\")\n    ) {\n      toast.error(\"Only jpg,jpeg and png files are supported\");\n    } else {\n      this.setState({\n        imageURL: URL.createObjectURL(e.target.files[0]),\n        coverImage: e.target.files[0],\n      });\n    }\n  };\n  closeMobilePopup = () => {\n    this.setState({ MobileViewPoppup: false });\n  };\n  showMobileView = () => {\n    this.setState({ MobileViewPoppup: true });\n  };\n  render() {\n    console.log(this.props.imageDate,this.props.imgList)\n    const {\n      showNotification,\n      logout,\n      showSuccess,\n      message,\n      showTime,\n      time,\n      timeIndex,\n      attrVal,\n      imgList,\n      image,\n      loader,\n      MobileViewPoppup,\n      isChecked,\n    } = this.state;\n\n    const {\n      templateDetail,\n      metaData,\n      reciverData,\n      draftDetailSuccess,\n    } = this.props;\n    let numberValidation = /^[0-9]*$/i;\n    // const sortattrVal = attrVal.filter((e) => Object.keys(e).length != 0);\n    // const sortimgList = this.props.imgList.filter((e) => Object.keys(e).length != 0 && Object.keys(e) != undefined );\n    // const sortimage = this.props.imageData.filter((e) => Object.keys(e).length != 0);\n    // let localMetaData = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    // console.log(\"before sort\", imgList);\n    // console.log(\"after sort\", sortattrVal, sortimgList, sortimage);\n    // console.log(\"concat\", sortattrVal.concat(sortimgList), sortimage);\n    // console.log(\"tee detail\", this.props.error);\n    let attr = [];\n    let thumbnail = [];\n    let text = [];\n    let main = [];\n    Object.keys(this.props.templateDetail).map((e) => {\n      if (e == \"attribute\") {\n        this.props.templateDetail[\"attribute\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"image\") {\n        this.props.templateDetail[\"image\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"text\") {\n        this.props.templateDetail[\"text\"].map((i) => {\n          main.push(i);\n        });\n      }\n    });\n    let sortedMain = _.sortBy(main, [\"order\"]);\n    sortedMain.map((e) => {\n      Object.keys(e).map((i) => {\n        if (i == \"attribute_name\") {\n          attr.push(e);\n        }\n      });\n    });\n  \n    // console.log(_.findIndex(this.props.imgList, [\"order\", \"1\"]));\n\n \n\n    return (\n      <>\n        <nav className=\"navbar beforel navbar-expand-md py-1\">\n          <a\n            class=\"navbar-brand\"\n            onClick={() => this.props.history.push(\"/dashboard\")}\n          >\n            <img class=\"big img-fluid\" src={header_logo} />\n            <img class=\"mini img-fluid\" src={logom} />\n          </a>\n          <ul className=\"nav navbar-top-links navbar-right\">\n            <li className=\"ml-2 mr-2\">\n              <a\n                className=\"btn p-0\"\n                data-toggle=\"modal\"\n                data-target=\"#searchmodal\"\n              >\n                <img className src={searcho} />\n                {/* <i className=\"fas fa-search\"></i> */}\n              </a>\n            </li>\n            <li className=\"ml-2 mr-2\">\n              {this.props.document == null ? (\n                <li className=\"ml-2 mr-2\">\n                  <a\n                    onClick={() => {\n                      this.props.history.push(\"/add-metadata\");\n                      localStorage.setItem(\n                        \"prevroute\",\n                        JSON.stringify(\"create-tik\")\n                      );\n                      localStorage.removeItem(\"addMetaData\");\n                      this.props.createTikEdit({ metaData: [] });\n                      localStorage.removeItem(\"selectId\");\n                    }}\n                    className=\"btn-border org-border br-6 d-flex p-2\"\n                  >\n                    <img className src={doc} />\n                    <h4\n                      style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                      className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                    >\n                      Create New Tik\n                    </h4>\n                  </a>\n                </li>\n              ) : this.props.roledocument != undefined ? (\n                this.props.document.create || this.props.roledocument.create ? (\n                  <a\n                    onClick={() => {\n                      this.props.history.push(\"/add-metadata\");\n                      localStorage.setItem(\n                        \"prevroute\",\n                        JSON.stringify(\"create-tik\")\n                      );\n                      localStorage.removeItem(\"addMetaData\");\n                    }}\n                    className=\"btn-border org-border br-6 d-flex p-2\"\n                  >\n                    <img className src={doc} />\n                    <h4\n                      style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                      className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                    >\n                      Create New Tik\n                    </h4>\n                  </a>\n                ) : null\n              ) : null}\n            </li>\n            <li className=\"dropdown mx-2\">\n              <a\n                className=\"dropdown-toggle count-info px-0\"\n                data-toggle=\"dropdown\"\n                onClick={() => this.showNotification()}\n              >\n                <i className=\"fa fa-bell f-26\"></i>{\" \"}\n                <span className=\"label label-primary\">8</span>\n              </a>\n              {showNotification === true ? <Notification /> : null}\n            </li>\n\n            <li className=\"ml-2\">\n              <ProfileDropdown logout={this.logoutHandler} />\n            </li>\n          </ul>\n        </nav>\n        {logout ? (\n          <Modal closePopup={this.closeLogoutPopup}>\n            <div class=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 class=\"modal-title text-center f-20 f-m\" id=\"\">\n                Are you sure you want to log out?\n              </h4>\n              <div class=\"d-flex logout-buttons\">\n                <Button\n                  type=\"button\"\n                  buttonText=\"No\"\n                  className=\"m-1 clear_button\"\n                  onClick={() => this.closeLogoutPopup()}\n                />\n                <Button\n                  type=\"button\"\n                  buttonText={\"Yes\"}\n                  className=\"m-1\"\n                  onClick={() => this.logout()}\n                />\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n        <div id=\"content\" class=\"container-fluid my-5 createDoc\">\n          <div class=\"row\">\n            <div class=\"col-md-12 d-flex align-items-center f-m\">\n              <h1\n                className=\"text-center txt-blk mb-4 f-b\"\n                style={{ width: \"69%\" }}\n              >\n                Edit Draft\n              </h1>\n              <a\n                onClick={this.saveDraft}\n                style={{ whiteSpace: \"nowrap\" }}\n                className={\n                  isChecked\n                    ? \"disabled btn btn-primary f-16 mView-btn saveDraft m-1\"\n                    : \"btn btn-primary f-16 mView-btn saveDraft m-1\"\n                }\n              >\n                Save\n              </a>\n              <a\n                onClick={this.showMobileView}\n                class=\"btn btn-primary f-16\"\n                style={{ whiteSpace: \"nowrap\" }}\n                data-toggle=\"modal\"\n                data-target=\"#mView\"\n              >\n                Mobile Preview{\" \"}\n              </a>\n            </div>\n          </div>\n\n          <div\n            class=\"row ox-hide\"\n            id=\"screenPixel\"\n            onClick={() => this.showTimeCloseHandler()}\n          >\n            <div class=\"col mb-5  flex-grow-3\">\n              <div class=\"border br-20 px-3 py-4 left-container\">\n                <div class=\"min-fixHeight pr-3\" style={{ minHeight: \"470px\" }}>\n                  <h3 class=\"f-20 f-b\">Metadata</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {this.props.draftDetailSuccess &&\n                        this.props.draftDetailSuccess.draftData.metaList.map(\n                          (e) => {\n                            return (\n                              <div class=\"col-lg-6\">\n                                <div class=\"row\">\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16 f-b\">{e.name}</h3>\n                                  </div>\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16\">{e.value}</h3>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        )}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Template</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Name</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                                this.props.draftDetailSuccess.templateDetails\n                                  .template_name}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Number of Attributes</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                              this.props.draftDetailSuccess.templateDetails\n                                .attribute != undefined\n                                ? this.props.draftDetailSuccess.templateDetails\n                                    .attribute.length\n                                : null}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Type</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                                this.props.draftDetailSuccess.templateDetails\n                                  .template_type}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Acceptance Form Integrated</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                              this.props.draftDetailSuccess.templateDetails\n                                .isAcceptanceDocument\n                                ? \"Yes\"\n                                : \"No\"}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <h3 class=\"f-20 f-b\">Template Fields</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {sortedMain.map((e, index) => {\n                      \n                        if (e.dataType == \"String\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Boolean\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"3px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form class=\"d-flex flex-wrap form-group\">\n                                    <div class=\"form-check-inline custom-control custom-checkbox\">\n                                      <input\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default,\n                                            \"boolean\"\n                                          )\n                                        }\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input\"\n                                        id={index}\n                                        name=\"example1\"\n                                        checked={\n                                          this.props.imgList &&\n                                          this.props.imgList[\n                                            _.findIndex(this.props.imgList, [\n                                              \"order\",\n                                              e.order.toString(),\n                                            ])\n                                          ] != undefined\n                                            ? this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value == \"false\"\n                                              ? false\n                                              : true\n                                            : false\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-m\"\n                                        for={index}\n                                      ></label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Text\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.state.attrVal[index] != undefined\n                                          ? this.state.attrVal[index].value\n                                          : null\n                                      }\n                                      disabled\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              \n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Number\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : !numberValidation.test(\n                                    parseInt(\n                                      this.props.imgList[\n                                        _.findIndex(this.props.imgList, [\n                                          \"order\",\n                                          e.order.toString(),\n                                        ])\n                                      ].value\n                                    )\n                                  ) ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the only number\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        // if (e.datatype == \"Boolean\") {\n                        //     return (\n                        //       <div class=\"col-lg-6\">\n                        //         <div class=\"row\">\n                        //           <div class=\"col-lg-4\">\n                        //             <h3 class=\"f-16 f-b\">{e.attribute_name}</h3>\n                        //           </div>\n                        //           <input\n                        //                   type=\"checkbox\"\n                        //                   class=\"custom-control-input\"\n                        //                   id=\"customCheck11212\"\n                        //                   name=\"example1\"\n                        //                   checked={\n                        //                     document != null\n                        //                       ? document.update\n                        //                       : false\n                        //                   }\n                        //                 />\n                        //         </div>\n                        //       </div>\n                        //     );\n                        //   }\n                        if (e.dataType == \"Date\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <DatePicker\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(date) =>\n                                        this.handleChange(\n                                          date,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default,\n                                          \"date\"\n                                        )\n                                      }\n                                      dateFormat=\"MM-dd-yyyy\"\n                                      //   disabled={this.props.btnchange ? false : true}\n                                      className={\n                                        \"form-control f-14 w-70 float-left text-center py-1 dull datetimepicker1\"\n                                      }\n                                      showMonthDropdown\n                                      showYearDropdown\n                                      dropdownMode=\"select\"\n                                      //   maxDate={addDays(new Date(), 0)}\n                                      //   minDate={subYears(new Date(), 100)}\n                                    />\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={calander} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Time\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div\n                                  class=\"col-lg-8\"\n                                  onClick={(e) => e.stopPropagation()}\n                                >\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group date\"\n                                  >\n                                    <input\n                                      onClick={() =>\n                                        this.showTimeHandler(index)\n                                      }\n                                      type=\"text\"\n                                      class=\"timepicker form-control f-14 w-70 float-left text-center py-1 dull\"\n                                      id=\"\"\n                                      placeholder=\"00:00\"\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                    />\n                                    {showTime && timeIndex == index && (\n                                      <Timekeeper\n                                        // onChange={(newTime) =>\n                                        //   this.setTime(\n                                        //     newTime.formatted12,\n                                        //     index\n                                        //   )\n                                        // }\n                                        onChange={(newTime) =>\n                                          this.handleChange(\n                                            newTime.formatted12,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                        onDoneClick={() =>\n                                          this.showTimeCloseHandler()\n                                        }\n                                        switchToMinuteOnHourSelect\n                                      />\n                                    )}\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={times} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Qr\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"image_title\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Image\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                  >\n                                    <div class=\"custom-file\">\n                                      <input\n                                        type=\"file\"\n                                        class=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"image_title\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-file-label f-m\"\n                                        for=\"customFile\"\n                                      >\n                                        {this.props.imageData[\n                                          _.findIndex(this.props.imageData, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? _.truncate(\n                                              this.props.imageData[\n                                                _.findIndex(\n                                                  this.props.imageData,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value,\n                                              { length: 12 }\n                                            )\n                                          : this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ] != undefined\n                                          ? _.truncate(\n                                              this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].fileName,\n                                              { length: 12 }\n                                            )\n                                          : \"No file selected\"}\n                                      </label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[index] != undefined ? (\n                                (\n                                  this.props.imgList[index].value == \"\" &&\n                                  (this.props.imageData[index] != undefined\n                                    ? this.props.imageData[index].value == \"\"\n                                    : true) ? (\n                                    <>\n                                      <div class=\"row\">\n                                        <div class=\"col-lg-4\"></div>\n                                        <div class=\"col-lg-8\">\n                                          <div className=\"input-feedback-tik\">\n                                            Please enter the {e.attribute_name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </>\n                                  ) : (\n                                    this.props.imageData[index] &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpeg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"png\")\n                                  )\n                                ) ? (\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Only jpg,jpeg,png files are supported\n                                      </div>\n                                    </div>\n                                  </div>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Please enter the {e.attribute_name}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                      })}\n                      {/* {sortedMain.map((e, index) => {\n                       \n                      })} */}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Tee Details</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-4\">\n                            <h3 class=\"f-16 f-b\" style={{ marginTop: \"12px\" }}>\n                              Email Address\n                            </h3>\n                          </div>\n                          <div class=\"col-lg-8\">\n                            <form\n                              onSubmit={(e) => {\n                                e.preventDefault();\n                              }}\n                              class=\"form-group createDoc\"\n                            >\n                              <CreatableSelect\n                                isMulti\n                                onChange={this.handleTeeChange}\n                                options={this.props.reciverList}\n                                value={this.props.reciverDraftList}\n                              />\n                            </form>\n                          </div>\n                        </div>\n\n                        {this.state.submit ? (\n                          this.props.reciverDraftList != null ? (\n                            this.props.reciverDraftList.length == 0 ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please select the email\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : this.state.error ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      {this.state.errormessage}\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : null\n                          ) : (\n                            <>\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\"></div>\n                                <div class=\"col-lg-8\">\n                                  <div className=\"input-feedback-tik\">\n                                    Please select the email\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          )\n                        ) : this.state.error ? (\n                          <>\n                            <div class=\"row\">\n                              <div class=\"col-lg-4\"></div>\n                              <div class=\"col-lg-8\">\n                                <div className=\"input-feedback-tik\">\n                                  {this.state.errormessage}\n                                </div>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n\n                  <div class=\"row\">\n                    <div class=\"offset-lg-1 col-lg-10 mt-5\">\n                      <div class=\"offset-lg-2 col-lg-8 d-flex\">\n                        <a\n                          onClick={() =>\n                            this.props.history.push(\"/select-template\")\n                          }\n                          class=\"btn btn-default m-1 w-100 f-b\"\n                        >\n                          Previous\n                        </a>\n                        <a\n                          onClick={this.handleSubmit}\n                          id=\"\"\n                          data-toggle=\"modal\"\n                          data-target=\"#successPublished\"\n                          class=\"btn btn-org m-1 w-100 f-b published\"\n                        >\n                          {loader ? (\n                            <i class=\"fa fa-refresh fa-spin\"></i>\n                          ) : (\n                            \"Publish\"\n                          )}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className={\n                this.state.showTicket\n                  ? \"col flex-grow-0 d-flex align-items-center justify-content-center rotate\"\n                  : \"col flex-grow-0 d-flex align-items-center justify-content-center\"\n              }\n            >\n              <a\n                onClick={this.ticketHandler}\n                class=\"arrow-toggle text-center text-white btn btn-primary d-table\"\n              >\n                <i class=\"f-24 fa fa-chevron-left d-table-cell vertical-align-m\"></i>\n              </a>\n            </div>\n\n            <div\n              className={\n                this.state.showTicket\n                  ? \"col-lg-3 col-md-4 mb-5 br-20 right-ticket\"\n                  : \"col-lg-3 col-md-4 mb-5 br-20 right-ticket hide-right-panel\"\n              }\n            >\n              <div class=\"br-20 px-3 py-4 right-container\">\n                <div class=\"pr-0 min-fixHeight\">\n                  {this.props.imgList.map((e) => {\n                    if (e != undefined) {\n                      if (\n                        e.value != \"\" &&\n                        e.default == true &&\n                        e.dataType == \"Qr\"\n                      ) {\n                        return (\n                          <>\n                            <div class=\"px-3 py-4 border-dark br-20 first-box\">\n                              <div class=\"d-flex  flex-wrap justify-content-center flex-column\">\n                                <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                                  <QRCode\n                                    value={e.value}\n                                    size={128}\n                                    bgColor={\"#ffffff\"}\n                                    fgColor={\"#000000\"}\n                                    includeMargin={false}\n                                    renderAs={\"svg\"}\n                                    imageSettings={{\n                                      excavate: true,\n                                    }}\n                                  />\n                                </div>\n\n                                <div class=\"text-center d-flex justify-content-center align-items-center\">\n                                  <h3\n                                    style={{ wordBreak: \"break-all\" }}\n                                    class=\"f-26 f-b mr-3\"\n                                  >\n                                    {e.name}\n                                  </h3>\n                                  <h3\n                                    style={{ wordBreak: \"break-all\" }}\n                                    class=\"f-26\"\n                                  >\n                                    {e.value}\n                                  </h3>\n                                </div>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      }\n                    }\n                  })}\n                  \n                  <div class=\"px-3 py-4 border-dark br-20 mt-2 second-box\">\n                    <div class=\" justify-content-center\">\n                      {/* {this.state.image != '' ? this.props.imgList.map((e) => {\n                        console.log('edit draft',e)\n                        if (e.default == true) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={e.image != '' ? URL.createObjectURL(e.image): certi}\n                            />\n                          );\n                        }\n                      }): <img\n                      style={{\n                        height: \"132px\",\n                        width: \"132px\",\n                      }}\n                      class=\"d-block mx-auto  mb-2 img-fluid\"\n                      src={certi}\n                    />} */}\n    \n                    {this.props.imageData == undefined ? this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (\n                          e.default == true &&\n                          e.dataType == \"Image\" &&\n                          e.value != \"\"\n                        ) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={e.value != '' ? e.value:certi}\n                            />\n                          );\n                        }\n                      }else{\n                        return <img\n                        style={{\n                          height: \"132px\",\n                          width: \"132px\",\n                        }}\n                        class=\"d-block mx-auto  mb-2 img-fluid\"\n                        src={certi}\n                      />\n                      }\n                    }):this.props.imageData.map((e) => {\n                      if (e != undefined) {\n                        if (e.default == true) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={URL.createObjectURL(e.image)}\n                            />\n                          );\n                        }\n                      }\n                    })\n                  }\n\n                    {/* {this.props.imageData.map((e) => {\n                      if (e != undefined) {\n                        if (e.default == true) {\n                          console.log(\"image\", e);\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={URL.createObjectURL(e.image)}\n                            />\n                          );\n                        }\n                      }\n                    })} */}\n                 \n                      <div class=\"text-center d-flex justify-content-center align-items-center\">\n                        <h3 class=\"f-26 f-b \">\n                          {templateDetail.template_type}\n                        </h3>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"px-3 py-4 border-dark br-20 mt-2\">\n                    <h4\n                      class=\"f-24 f-m text-center\"\n                      style={{ wordBreak: \"break-all\" }}\n                    >\n                      {this.props.templateDetail.template_name}\n                    </h4>\n\n                    {this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (\n                          e.value != \"\" &&\n                          e.default == false &&\n                          e.dataType == \"Qr\"\n                        ) {\n                          return (\n                            <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                              <QRCode\n                                value={e.value}\n                                size={128}\n                                bgColor={\"#ffffff\"}\n                                fgColor={\"#000000\"}\n                                includeMargin={false}\n                                renderAs={\"svg\"}\n                                imageSettings={{\n                                  excavate: true,\n                                }}\n                              />\n                            </div>\n                          );\n                        }\n                      }\n                    })}\n                    {this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (\n                          e.default == false &&\n                          e.dataType == \"Image\" &&\n                          e.value != \"\"\n                        ) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={e.value}\n                            />\n                          );\n                        }\n                      }\n                    })}\n\n                    {this.props.imageData.map((e) => {\n                      if (e != undefined) {\n                        if (e.default == false) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={URL.createObjectURL(e.image)}\n                            />\n                          );\n                        }\n                      }\n                    })}\n                    {this.props.imgList.map((e, index) => {\n                      if (e != undefined) {\n                        if (e.dataType != \"Image\") {\n                          return (\n                            <div class=\"d-flex flex-wrap\">\n                              <div class=\"col-sm-4\">\n                                <h3 class=\"f-16 f-b\">{e.name}</h3>\n                              </div>\n                              <div class=\"col-sm-8\">\n                                <h3 class=\"f-16\">\n                                  {e.value == true && e.value != \"\"\n                                    ? \"True\"\n                                    : e.value == false && e.value != \"\"\n                                    ? \"False\"\n                                    : e.value}\n                                </h3>\n                              </div>\n                            </div>\n                          );\n                        }\n                      }\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n        {MobileViewPoppup == true ? (\n          <DraftMobileView\n            closePopup={this.closeMobilePopup}\n            history={this.props.history}\n            imageData={this.props.imageData}\n            imgList={this.props.imgList}\n            draft={this.props.draftDetailSuccess}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  firstName: state.Profile.firstName,\n  templateDetail: state.Template.templateDetail,\n  metaData: state.Tik.metaData,\n  reciverData: state.Tik.reciverData,\n  createTikSuccess: state.Tik.createTikSuccess,\n  error: state.Auth.error,\n  document: state.Profile.document,\n  roledocument: state.Profile.Roledocument,\n  draftDetailSuccess: state.Tik.draftDetailSuccess,\n  imgList: state.Tik.imgList,\n  imageData: state.Tik.image,\n  imgListData: state.Tik.imgListData,\n  reciverList: state.Tik.reciverList,\n  reciverDraftList: state.Tik.reciverDraftList,\n  saveDraftSuccess: state.Tik.saveDraftSuccess,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  createTik: (payload) => dispatch(actions.createTik(payload)),\n  reciverListInfo: () => dispatch(actions.reciverList()),\n  errorClear: () => dispatch(actions.errorClear()),\n  saveDraft: (payload) => dispatch(actions.saveDraft(payload)),\n  imgListEdit: (payload) => dispatch(actions.imgListEdit(payload)),\n  imageEdit: (payload) => dispatch(actions.imageEdit(payload)),\n  reciverDraft: (payload) => dispatch(actions.reciverDraft(payload)),\n  reciverDraftEdit: (payload) => dispatch(actions.reciverDraftEdit(payload)),\n  draftDtail: (data) => dispatch(actions.draftDtail(data)),\n  addMetaData: (data) => dispatch(actions.addMetaData(data)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDraft);\n","C:\\react-main\\src\\container\\Tik\\ViewTik.jsx",[],"C:\\react-main\\src\\container\\Template\\SelectAcceptanceTemp.jsx",["1193","1194","1195","1196","1197","1198","1199","1200"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { WithLayoutContainer, Button } from '../../component/index.jsx';\nimport * as actions from '../../actions';\nimport Loader from '../../component/Loader.jsx'\nimport { toast } from 'react-toastify';\nimport { convertTemplateDataFromData } from '../../helper/utility.js';\nimport temp1 from \"../../assets/img/temp1.png\";\nimport search from \"../../assets/img/search.png\";\n\nconst SelectAcceptanceTemp = (props) => {\n  const { location, templateUpdate } = props;\n  const { state } = location;\n  const { finalObj, editFlag } = state;\n\n  const [selectTempId, selectAcceptanceTemp] = useState('');\n  const [searchValue, handleSearchOnChangeValue] = useState('');\n\n  const { selectedTemplate, selectedTemplateLoader, successLoader } = props;\n\n  if (templateUpdate === true) {\n    props.history.push('template');\n  }\n  if(props.error){\n    props.history.push('/template')\n    props.errorClear()\n  }\n  useEffect(\n    () => {\n      props.getSelectAcceptanceTempInfo(searchValue);\n\n      if (editFlag) {\n        selectAcceptanceTemp(finalObj.acceptance_form);\n      }\n    },\n    {},\n  );\n  const previousButton = () => {\n    const { location } = props;\n    const { state } = location;\n    const { finalObj, editFlag } = state;\n\n    if (editFlag) {\n      props.history.push('editTemp', { finalObj, selectTemp: true });\n    } else {\n      props.history.push('createTemp', { finalObj, selectTemp: true });\n    }\n  }\n\n  const handleSubmit = () => {\n    let temp1 = finalObj;\n    if (selectTempId !== '') {\n      temp1.acceptance_form = selectTempId;\n\n      const finalData = convertTemplateDataFromData(temp1);\n\n      if (editFlag) {\n        props.editTemplate(finalData);\n      } else {\n        props.createTemplate(finalData);\n      }\n\n      if (templateUpdate === true) {\n        this.props.history.push('template');\n      }\n      // props.history.push('template');\n    } else {\n      toast.error('Select document to continue');\n    }\n  }\n\n  const handleSearch = () => {\n    props.getSelectAcceptanceTempInfo(searchValue);\n  }\n  return (\n    <WithLayoutContainer>\n      <div id=\"userMgnt\" className=\"wrapper wrapper-content\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"containerBox pb-2\">\n              <div className=\" \">\n                <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                  <h2 className=\"f-b m-0\">{editFlag == true ? 'Edit Template' : 'Create Template'}</h2>\n                </div>\n                <form role=\"search\" className=\"search navbar-form-custom form-inline\" action=\"#\">\n                  <div className=\"form-group dropdown\">\n                    <img className=\"searchImg\" src={search} />\n                    <input type=\"text\" placeholder=\"Search Template...\" class=\"form-control pl-5\" value={searchValue} name=\"top-search\" id=\"top-search\" onChange={(e) => handleSearchOnChangeValue(e.target.value)} />\n                  </div>\n                  <a type=\"submit\" className=\"btn btn-primary f-18 ml-2 f-m px-4\" onClick={() => handleSearch()}>\n                    Search\n                    </a>\n                </form>\n\n                {selectedTemplateLoader &&\n                  <Loader /> ||\n                  <div className=\"fixHeight\" style={{ maxHeight: 'calc(100vh - 360px)', marginTop: 20 }}>\n                    <div className=\"selectTemplate\">\n                      <div className=\"card-deck\">\n                        {selectedTemplate.length > 0 ?\n                          selectedTemplate.map((item, index) => {\n                            return (\n                              <div key={index} className={`card border-0  ${selectTempId === item._id ? 'selected' : ''} `} onClick={() => selectAcceptanceTemp(item._id)}>\n                                <img className='card-img-top' src={temp1} alt=\"Card image cap\" />\n                                <div className=\"card-footer border-0 pl-0\">\n                                  <strong className=\"txt-blk f-18 \">{item.template_name}</strong>\n                                </div>\n\n                              </div>\n                            )\n                          })\n                          : <div className=\"no-data\"> No data </div>}\n                      </div>\n                    </div>\n                  </div>}\n                <div class=\"offset-lg-2 offset-md-2 col-lg-8 col-md-8 d-flex mt-2\">\n\n                  <Button\n                    type=\"button\"\n                    buttonText=\"Previous\"\n                    className=\"m-1 clear_button\"\n                    onClick={() => previousButton()}\n                  />\n                  <Button\n                    type=\"button\"\n                    buttonText={successLoader ? <i class=\"fa fa-refresh fa-spin\"></i> : 'Submit'}\n                    className=\"m-1\"\n                    onClick={() => handleSubmit()}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </WithLayoutContainer>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  templateList: state.Template.templateList,\n  selectedTemplate: state.Template.selectedTemplate,\n  selectedTemplateLoader: state.Template.selectedTemplateLoader,\n  successLoader: state.Template.successLoader,\n  templateUpdate: state.Template.templateUpdate,\n  error: state.Auth.error\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSelectAcceptanceTempInfo: (searchValue) => dispatch(actions.getSelectAcceptanceTempInfo(searchValue)),\n  createTemplate: (data) => dispatch(actions.createTemplate(data)),\n  editTemplate: (data) => dispatch(actions.editTemplate(data)),\n  errorClear: () => dispatch(actions.errorClear()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectAcceptanceTemp);\n","C:\\react-main\\src\\container\\Template\\TemplateList.jsx",["1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Table, SuccessPopup } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport DeleteTemplatePopup from './DeleteTemplatePopup.jsx';\nimport { TemplateListingTitle } from '../../constants/Mapper.js';\nimport { formatTime, formatDate, } from \"../../helper/utility.js\"\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport TeamplateView from \"./TemplateView.jsx\";\nimport { toast } from \"react-toastify\";\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\n\n\nclass TemplateList extends Component {\n  state = {\n    editFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    deleteData: {},\n    addPopupSuccess: false,\n    viewFlag: false,\n    viewData: {},\n    showSuccess: false,\n    successFlag: true,\n    SuccessPopupFlag: true,\n    // addPopupLoader: false,\n    // editData={}\n  }\n\n\n  editButtonOnClick = (data) => {\n    this.props.history.push('editTemp', { data });\n  }\n\n  editClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      editFlag: false,\n    });\n  }\n\n  deleteClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      deleteFlag: false,\n      deleteData: {},\n    });\n  }\n\n  deleteButtonOnClick = (data) => {\n    // this.props.roleInitialization();\n    document.body.classList.add('modal-open');\n    this.setState({\n      deleteFlag: true,\n      deleteData: data,\n    });\n  }\n\n  confirmDelete = () => {\n    const { deleteData } = this.state\n    const templateId = deleteData._id\n    this.props.deleteTemplate({ templateId });\n  }\n\n  addTemplates = () => {\n    this.props.history.push('createTemp');\n  }\n\n  addClosePopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      addFlag: false,\n    });\n  }\n\n  handleSubmit = (data) => {\n    this.props.addRoleInList(data);\n  }\n\n  submitEditData = (data) => {\n    this.props.editRoleInList(data);\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false })\n  }\n  errorclose = () => {\n    if (this.state.showSuccess == false) {\n      this.props.errorClear()\n    }\n  }\n  successPopup = () => {\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      editData: {},\n      deleteData: {},\n      viewFlag: false,\n      SuccessPopupFlag: true,\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.roleInitialization();\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      viewFlag: false,\n      editData: {},\n      deleteData: {},\n      message: '',\n      SuccessPopupFlag: false\n    })\n  }\n\n  componentDidMount() {\n    this.props.errorClear();\n    this.props.getTemplateListInfo({ search: '' });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { templateObj } = this.props;\n    const { successPopup, successLoader } = templateObj;\n\n    if (prevProps.deleteSuccess != this.props.deleteSuccess) {\n      this.deleteClosePopup()\n      this.setState({ showSuccess: true, message: this.props.deleteSuccess.msg })\n      this.props.getTemplateListInfo({ search: '' });\n    }\n\n    if (this.props.error) {\n      this.deleteClosePopup()\n      // this.setState({ showSuccess: true, message: 'your are not authorize' })\n      toast.error('you are not authorized');\n      this.props.errorClear();\n    }\n    // if (prevProps.templateList != this.props.templateList) {\n    //   console.log(prevProps.templateList, this.props.templateList)\n    //   // this.props.getTemplateListInfo();\n    // }\n\n    if (prevProps.templateDetail != this.props.templateDetail) {\n      this.props.history.push({\n        pathname: '/template-view',\n        state: { detail: this.props.templateDetail }\n      })\n    }\n    if (prevProps != this.props)\n      if (successPopup !== '' && successLoader === false) {\n        this.successPopup();\n      }\n  }\n\n  successPopup = () => {\n    this.setState({\n      successFlag: true,\n      SuccessPopupFlag: true,\n\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.templateInitialization();\n\n    this.setState({\n      SuccessPopupFlag: false,\n    });\n  }\n\n  closeViewPopup = () => {\n    document.body.classList.remove('modal-open');\n    this.setState({\n      viewFlag: false,\n      viewData: {},\n    });\n  }\n\n  viewPopup = (data) => {\n    if (this.props.roleName !== 'Super Provider'){\n    if (this.props.template.view || this.props.roletemplate.view) {\n      document.body.classList.add(\"modal-open\");\n      const templateId = data._id\n      this.props.getTemplateDetail({ templateId, whiteList: '' });\n      localStorage.setItem('templateId', JSON.stringify(templateId));\n    }\n  }else{\n    document.body.classList.add(\"modal-open\");\n    const templateId = data._id\n    this.props.getTemplateDetail({ templateId, whiteList: '' });\n    localStorage.setItem('templateId', JSON.stringify(templateId));\n  }\n  }\n\n  render() {\n    const { deleteFlag, editFlag, addFlag, viewFlag, viewData, message, editData, showSuccess, deleteData, SuccessPopupFlag } = this.state;\n    const { templateList, role, templateObj, roletemplate } = this.props;\n    const { successPopup } = templateObj;\n\n    // const { successPopup } = role;\n    const dataTable = {\n      titles: TemplateListingTitle,\n      data: [],\n    };\n\n    if (templateList.length > 0) {\n      dataTable.data = templateList.map((role, key) => {\n        const { createdAt, } = role;\n        return {\n          ...role,\n          ...{\n            sr_no: key + 1,\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n          }\n        };\n      })\n    }\n\n    return (\n      <WithLayoutContainer>\n        <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox\">\n                <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                  <h2 className=\"f-b m-0\">Template Management</h2>\n                  {this.props.template == null || this.props.template.create ? <a\n                    onClick={() => this.addTemplates()}\n                    className=\"btn btn-primary py-1\"\n                  >\n                    Create New Template\n                  </a> : roletemplate != undefined ? this.props.template.create || roletemplate.create ? (\n                      <a\n                        onClick={() => this.addTemplates()}\n                        className=\"btn btn-primary py-1\"\n                      >\n                        Create New Template\n                      </a>\n                    ) : null : null}\n                </div>\n                <div className=\"table-responsive fixHeight\">\n                  <Table\n                    dataTable={dataTable}\n                    actions={actionsData}\n                    defaultSort={'sr_no'}\n                    editButtonOnClick={this.editButtonOnClick}\n                    deleteButtonOnClick={this.deleteButtonOnClick}\n                    loader={this.props.loader}\n                    viewPopup={this.viewPopup}\n                    updatePermission={this.props.template == null || this.props.roletemplate == null || (this.props.template.update || this.props.roletemplate.update)}\n                    deletePermission={this.props.template == null || this.props.roletemplate == null || (this.props.template.delete || this.props.roletemplate.delete)}\n\n                  />\n                </div>\n              </div>\n            </div>\n            {deleteFlag &&\n              <DeleteTemplatePopup\n                closePopup={this.deleteClosePopup}\n                confirmDelete={this.confirmDelete}\n                role={role}\n                deleteData={deleteData} />}\n            {viewFlag &&\n              <TeamplateView\n                closePopup={this.closeViewPopup}\n                viewData={viewData} />}\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n\n        {SuccessPopupFlag === true && successPopup\n          ? <SuccessPopup msg={successPopup.msg} closePopup={this.successPopupClosePopup} history={this.props.history} />\n          : null}\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    templateList: state.Template.templateList,\n    loader: state.Role.loader,\n    deleteSuccess: state.Template.deleteSuccess,\n    templateDetail: state.Template.templateDetail,\n    templateObj: state.Template,\n    template: state.Profile.template,\n    error: state.Auth.error,\n    roletemplate: state.Profile.Roletemplate,\n    roleName: state.Profile.roleName,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTemplateListInfo: (payload) => dispatch(actions.getTemplateListInfo(payload)),\n  deleteTemplate: (data) => dispatch(actions.deleteTemplate(data)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  templateInitialization: () => dispatch(actions.templateInitialization()),\n  errorClear: () => dispatch(actions.errorClear()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateList);\n","C:\\react-main\\src\\container\\Tik\\UpdateTik.jsx",["1214","1215","1216","1217","1218","1219","1220","1221","1222","1223"],"/* eslint-disable array-callback-return */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-undef */\nimport React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  HeaderWithoutSearch\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport Timekeeper from \"react-timekeeper\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DraftMobileView from \"./DraftMobileView.jsx\";\nimport { toast } from \"react-toastify\";\nimport CreatableSelect from \"react-select/creatable\";\nimport _ from \"lodash\";\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\nimport calander from\"../../assets/img/cal.png\";\nimport times from \"../../assets/img/time.png\";\nvar QRCode = require(\"qrcode.react\");\n\nclass UpdateTik extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      tabActive: \"Personal\",\n      updateBtn: false,\n      firstName: \"\",\n      lastName: \"\",\n      designation: \"\",\n      companyName: \"\",\n      address: \"\",\n      showSuccess: false,\n      message: \"\",\n      coverImage: \"\",\n      imageURL: \"\",\n      mobileNumberUpdate: false,\n      MobileOtpPopup: false,\n      showTime: false,\n      time: \"12:34pm\",\n      attrVal: [],\n      timeIndex: null,\n      imgList: [],\n      image: [],\n      livepreview: [],\n      MobileViewPoppup: false,\n      submit: false,\n      reciverList: [],\n      teeDetail: [],\n      showTicket: false,\n      screenwidth: \"\",\n      loader: false,\n      error: false,\n      errormessage: \"\",\n      path: \"\",\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n  componentDidMount() {\n    this.props.errorClear();\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    const docId = JSON.parse(localStorage.getItem(\"docId\"));\n    const isEditTik = JSON.parse(localStorage.getItem(\"isEditTik\"));\n    this.props.profile();\n    localStorage.setItem(\"prevroute\", JSON.stringify(\"editTik\"));\n    this.props.reciverListInfo();\n    // window.addEventListener(\"resize\", this.updateWidth);\n\n    if (isEditTik == true) {\n      this.props.getTemplateDetail({ templateId: tempId, whiteList: true });\n    } else {\n      this.props.tikDetail({ Id: docId });\n    }\n  }\n\n  b64toBlob = (b64Data, contentType, sliceSize) => {\n    contentType = contentType || \"\";\n    sliceSize = sliceSize || 512;\n\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  updateWidth = () => {\n    const x = document.getElementById(\"screenPixel\").offsetWidth;\n    this.setState({\n      screenwidth: x,\n    });\n  };\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.templateDetail != this.props.templateDetail) {\n      if (this.props.templateDetail != undefined) {\n        let booleanMain = [];\n        Object.keys(this.props.templateDetail).map((e) => {\n          if (e == \"attribute\") {\n            this.props.templateDetail[\"attribute\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"image\") {\n            this.props.templateDetail[\"image\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"text\") {\n            this.props.templateDetail[\"text\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n        });\n        let sortedBooleanMain = _.sortBy(booleanMain, [\"order\"]);\n        // console.log('callllllllllllllllllllll',sortedBooleanMain)\n        sortedBooleanMain.map((e) => {\n          if (e.dataType == \"Boolean\") {\n            //  console.log('boolean condition')\n            let booleanData = this.state.attrVal;\n            let data = booleanData[e.order - 1];\n            const object = {\n              ...data,\n              name: e.attribute_name,\n              value: false,\n              order: e.order,\n              dataType: e.datatype,\n              default: e.defaultValue,\n            };\n            booleanData[e.order - 1] = object;\n            this.setState(\n              {\n                attrVal: booleanData,\n              },\n              () => console.log(\"sasvddvhjdadhjddhjdahd\", this.state.attrVal)\n            );\n          }\n          if (e.dataType == \"Text\") {\n            //  console.log('boolean condition')\n            let textData = this.state.attrVal;\n            let data = textData[e.order - 1];\n            const object = {\n              ...data,\n              name: e.attribute_name,\n              value: e.value,\n              order: e.order,\n              dataType: e.dataType,\n              default: e.default,\n            };\n            textData[e.order - 1] = object;\n            this.setState(\n              {\n                attrVal: textData,\n              },\n              () => console.log(\"sasvddvhjdadhjddhjdahd\", this.state.attrVal)\n            );\n          }\n        });\n      }\n    }\n\n    if (prevProps.createTikSuccess != this.props.createTikSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Tik published successfully\",\n        loader: false,\n      });\n    }\n    if (this.props.error != prevProps.error) {\n      // console.log(this.props.error);\n      this.setState({ loader: false });\n    }\n    if (\n      this.props.reciverData != undefined &&\n      this.props.reciverData instanceof Array &&\n      this.props.reciverData != prevProps.reciverData\n    ) {\n      let teeObjectList = [];\n      let teeArrayList = [];\n      this.props.reciverData.map((e) => {\n        // console.log(e);\n        teeArrayList.push(e.email);\n        // console.log(teeObject);\n      });\n      teeArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeObjectList.push(teeObject);\n      });\n      //   this.setState({ teeDetail: teeObjectList });\n      this.props.reciverDraft({ teeDetail: teeObjectList });\n    }\n\n    if (this.props.saveDraftSuccess != prevProps.saveDraftSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Draft saved sucessfully\",\n        loader: false,\n        path: \"Drafts\",\n      });\n    }\n\n    if (this.props.updateTikSuccess != prevProps.updateTikSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Tik updated successfully\",\n        loader: false,\n        path: \"all\",\n      });\n    }\n\n    if (prevProps.tikDetailSuccess != this.props.tikDetailSuccess) {\n      let previousdata = this.props.imgList;\n      const tikData = JSON.parse(this.props.tikListData);\n      console.log(this.props.tikListData);\n      tikData.map((e) => {\n        console.log(\"ppppppppppppppppppppppp\", e);\n        let data5 = previousdata[e.order - 1];\n        let testObject = {\n          ...data5,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order.toString(),\n          value: e.value,\n        };\n        previousdata[e.order - 1] = testObject;\n        this.setState({ attrVal: previousdata });\n        this.props.imgListEdit({ previousdata });\n      });\n      let teeDraftObjectList = [];\n      let teeDraftArrayList = [];\n      this.props.tikDetailSuccess.receiverEmail.map((e) => {\n        // console.log(e);\n        teeDraftArrayList.push(e);\n        // console.log(teeObject);\n      });\n      teeDraftArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeDraftObjectList.push(teeObject);\n      });\n      this.props.reciverDraftEdit({ reciverList: teeDraftObjectList });\n\n      this.props.getTemplateDetail({\n        templateId: this.props.tikDetailSuccess.templateDetails._id,\n        whiteList: true,\n      });\n      localStorage.setItem(\n        \"addMetaData\",\n        JSON.stringify(this.props.tikDetailSuccess.document.metaList)\n      );\n      localStorage.setItem(\n        \"templateId\",\n        JSON.stringify(this.props.tikDetailSuccess.templateDetails._id)\n      );\n      localStorage.setItem(\n        \"selectId\",\n        JSON.stringify(this.props.tikDetailSuccess.templateDetails._id)\n      );\n      this.props.addMetaData({\n        metaData: this.props.tikDetailSuccess.document.metaList,\n      });\n    }\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    if (this.state.path == \"Drafts\") {\n      this.props.history.push({\n        pathname: \"/docHistory\",\n        state: { detail: \"Drafts\" },\n      });\n    } else {\n      this.props.history.push({\n        pathname: \"/docHistory\",\n        state: { detail: \"all\" },\n      });\n    }\n  };\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  ticketHandler = () => {\n    this.setState({\n      showTicket: !this.state.showTicket,\n    });\n  };\n\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  activeTab = (activeName) => {\n    this.setState({\n      tabActive: activeName,\n    });\n  };\n  updateToggle = () => {\n    this.setState({\n      updateBtn: true,\n    });\n  };\n\n  handleSubmit = () => {\n    this.setState({ submit: true });\n    let images = [];\n    let sortReciverList = [];\n    let sortimgListCheck = [];\n    let imageValueFilter = [];\n    let sortImageFilter = [];\n    let filterTemplateDetail;\n\n    const { imageData } = this.props;\n\n    filterTemplateDetail = this.props.templateDetail.attribute\n\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    console.log(sortimgList);\n    sortimgList.map((e, i) => {\n      if (e.dataType == \"Image\" && e.value == \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n      } else if (e.dataType == \"Image\" && e.value != \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n          value: e.value,\n        };\n        imageValueFilter.push(imageFilterObject);\n\n        //          let block = e.value.split(\";\");\n        //   // Get the content type of the image\n        //   let contentType = block[0].split(\":\")[1];// In this case \"image/gif\"\n        //   // get the real base64 content of the file\n        //   let realData = block[1].split(\",\")[1];// In this case \"R0lGODlhPQBEAPeoAJosM....\"\n\n        //   // Convert it to a blob to upload\n        //   let blob = this.b64toBlob(realData, contentType);\n        //   blobArray.push(e.value)\n      }\n    });\n\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    const addMeta = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    const docId = JSON.parse(localStorage.getItem(\"docId\"));\n\n    imageData.map((e) => {\n      if (e != undefined) {\n        images.push(e.image);\n      }\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(imageValueFilter);\n\n    console.log(\n      imageValueFilter,\n      concatAttr.length === filterTemplateDetail.length,\n      !sortImageFilter.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n    if (\n      concatAttr.length === filterTemplateDetail.length &&\n      !sortImageFilter.includes(\"\") &&\n      sortReciverList.length != 0 &&\n      this.state.error == false\n    ) {\n      this.setState({ loader: true });\n      this.props.updateTik({\n        documentName: addMeta[0].value,\n        templateId: tempId,\n        metaData: addMeta,\n        sortattrVal: concatAttr,\n        sortimgList,\n        images,\n        receiverList: sortReciverList,\n        documentId: docId,\n      });\n    }\n  };\n  saveDraft = () => {\n    let images = [];\n    let sortReciverList = [];\n    let sortattrValCheck = [];\n    let sortImageFilter = [];\n    let sortimgListCheck = [];\n    const { templateDetail } = this.props;\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => Object.keys(e).length != 0\n    );\n    const sortimage = this.props.imageData.filter(\n      (e) => Object.keys(e).length != 0\n    );\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    let localMetaData = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    const documentName = localMetaData ? localMetaData[0].value : \"\";\n    const templateId = templateDetail._id;\n\n    sortimage.map((e) => {\n      images.push(e.image);\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(sortimgList);\n\n    console.log(\n      concatAttr.length,\n      templateDetail.attribute.length,\n      !sortattrValCheck.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n\n    this.props.saveDraft({\n      documentName,\n      templateId,\n      metaData: localMetaData,\n      sortattrVal: concatAttr,\n      sortimgList,\n      images,\n      receiverList: sortReciverList,\n    });\n  };\n  imageChangeHandler = (e) => {\n    this.setState({\n      imageURL: URL.createObjectURL(e.target.files[0]),\n      coverImage: e.target.files[0],\n    });\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      mobileNumberUpdate: false,\n    });\n  };\n  mobileUpdateHandler = () => {\n    this.setState({\n      mobileNumberUpdate: true,\n    });\n  };\n  mobileOtpModalClose = () => {\n    this.setState({\n      MobileOtpPopup: false,\n    });\n  };\n  showTimeHandler = (index) => {\n    this.setState({\n      showTime: true,\n      timeIndex: index,\n    });\n  };\n  showTimeCloseHandler = () => {\n    this.setState({\n      showTime: false,\n    });\n  };\n  setTime = (e, index) => {\n    this.setState({\n      time: e,\n    });\n  };\n\n  handleChange = (e, value, index, name, datatype, defaultValue, date = \"\") => {\n    if (value == \"attribute_name\") {\n      let previousdata = this.props.imgList;\n      let livePreview = this.state.livepreview;\n\n      let data = previousdata[index];\n      let previewData = livePreview[index];\n      const object = {\n        ...data,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked.toString()\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: (index + 1).toString(),\n        dataType: datatype,\n        default: defaultValue,\n      };\n      const previewObject = {\n        ...previewData,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: index + 1,\n      };\n      previousdata[index] = object;\n      livePreview[index] = previewObject;\n\n      //   this.setState({\n      //     attrVal: previousdata,\n      //     livepreview: livePreview,\n      //   });\n      this.props.imgListEdit({ previousdata });\n    }\n    if (value == \"image_title\") {\n      console.log(e.target.value);\n      if (e.target.files == undefined) {\n        let previousdata = this.props.imgList;\n\n        let data = previousdata[index];\n        const object = {\n          ...data,\n          name: name,\n          value: e.target.value,\n          order: (index + 1).toString(),\n          dataType: datatype,\n          default: defaultValue,\n        };\n\n        previousdata[index] = object;\n        this.props.imgListEdit({ previousdata });\n      } else {\n        if (\n          e.target.files[0].name.split(\".\").includes(\"jpg\") ||\n          e.target.files[0].name.split(\".\").includes(\"jpeg\") ||\n          e.target.files[0].name.split(\".\").includes(\"png\")\n        ) {\n          let previousdata = this.props.imgList;\n          let previousdata2 = this.props.imageData;\n\n          let data = previousdata[index];\n          let data2 = previousdata2[index];\n\n          const object = {\n            ...data,\n            name: name,\n            order: (index + 1).toString(),\n            dataType: datatype,\n            default: defaultValue,\n            value: \"\",\n          };\n          const object2 = {\n            ...data2,\n            name: name,\n            image: e.target.files[0],\n            order: (index + 1).toString(),\n            default: defaultValue,\n            value: e.target.files[0].name,\n          };\n          previousdata[index] = object;\n          previousdata2[index] = object2;\n\n          this.setState({\n            imgList: previousdata,\n            image: previousdata2,\n          });\n          this.props.imgListEdit({ previousdata });\n          this.props.imageEdit({ previousdata2 });\n        } else {\n          toast.error(\"Only jpg,jpeg and png files are supported\");\n        }\n      }\n    }\n  };\n  handleTeeChange = (e) => {\n    console.log(e);\n    if (e != null) {\n      if (e.length != 0) {\n        const result = e.filter(\n          (j) => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(j.value)\n        );\n        if (result.length > 0) {\n          this.setState({\n            error: true,\n            errormessage: \"invalid email address\",\n          });\n        } else {\n          this.setState({\n            error: false,\n            errormessage: \"\",\n          });\n          // this.setState({\n          //   reciverList: e,\n          // });\n          this.props.reciverDraftEdit({ reciverList: e });\n        }\n      }\n    } else {\n      this.props.reciverDraftEdit({ reciverList: e });\n    }\n  };\n  imageChangeHandler = (e) => {\n    if (\n      !e.target.files[0].name.split(\".\").includes(\"jpg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"jpeg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"png\")\n    ) {\n      toast.error(\"Only jpg,jpeg and png files are supported\");\n    } else {\n      this.setState({\n        imageURL: URL.createObjectURL(e.target.files[0]),\n        coverImage: e.target.files[0],\n      });\n    }\n  };\n  closeMobilePopup = () => {\n    this.setState({ MobileViewPoppup: false });\n  };\n  showMobileView = () => {\n    this.setState({ MobileViewPoppup: true });\n  };\n  render() {\n    const {\n      showNotification,\n      logout,\n      showSuccess,\n      message,\n      showTime,\n      timeIndex,\n      loader,\n      MobileViewPoppup,\n    } = this.state;\n    const {document, roledocument } = this.props;\n    if (document) {\n      if (document.update === false && roledocument.update === false) {\n        this.props.history.push(\"/dashboard\");\n        toast.error('you are not authorized');\n      }\n    }\n    const {\n      templateDetail,\n    } = this.props;\n    // const sortattrVal = attrVal.filter((e) => Object.keys(e).length != 0);\n    // const sortimgList = this.props.imgList.filter((e) => Object.keys(e).length != 0 && Object.keys(e) != undefined );\n    // const sortimage = this.props.imageData.filter((e) => Object.keys(e).length != 0);\n    // let localMetaData = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    // console.log(\"before sort\", imgList);\n    // console.log(\"after sort\", sortattrVal, sortimgList, sortimage);\n    // console.log(\"concat\", sortattrVal.concat(sortimgList), sortimage);\n    // console.log(\"tee detail\", this.props.error);\n    let attr = [];\n    let main = [];\n    Object.keys(templateDetail).map((e) => {\n      if (e == \"attribute\") {\n        templateDetail[\"attribute\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"image\") {\n        this.props.templateDetail[\"image\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"text\") {\n        this.props.templateDetail[\"text\"].map((i) => {\n          main.push(i);\n        });\n      }\n    });\n    let sortedMain = _.sortBy(main, [\"order\"]);\n    sortedMain.map((e) => {\n      Object.keys(e).map((i) => {\n        if (i == \"attribute_name\") {\n          attr.push(e);\n        }\n      });\n    });\n    console.log(this.props.draftDetailSuccess);\n    console.log(\n      \"lllllllllllllllllllllllllllllll\",\n      this.props.imgList,\n      this.props.imageData\n    );\n    // console.log(_.findIndex(this.props.imgList, [\"order\", \"1\"]));\n    console.log(this.props.tikListData);\n    console.log(\n      \"test\",\n      this.props.reciverDraftList,\n      this.props.imgList,\n      this.props.imageData\n    );\n    return (\n      <>\n       <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container-fluid my-5 createDoc\">\n          <div class=\"row\">\n            <div class=\"col-md-12 d-flex align-items-center f-m\">\n              <h1 class=\"text-center txt-blk mb-4 f-b w-100\">Edit Tik</h1>\n              <a\n                onClick={this.saveDraft}\n                style={{ whiteSpace: \"nowrap\" }}\n                class=\"btn btn-primary f-16 mView-btn saveDraft m-1\"\n              >\n                Save as Draft\n              </a>\n              <a\n                onClick={this.showMobileView}\n                class=\"btn btn-primary f-16\"\n                style={{ whiteSpace: \"nowrap\" }}\n                data-toggle=\"modal\"\n                data-target=\"#mView\"\n              >\n                Mobile Preview{\" \"}\n              </a>\n            </div>\n          </div>\n\n          <div class=\"row ox-hide\" id=\"screenPixel\">\n            <div class=\"col mb-5  flex-grow-3\">\n              <div class=\"border br-20 px-3 py-4 left-container\">\n                <div class=\"min-fixHeight pr-3\" style={{ minHeight: \"470px\" }}>\n                  <h3 class=\"f-20 f-b\">Metadata</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {this.props.tikDetailSuccess &&\n                        this.props.tikDetailSuccess.document.metaList.map(\n                          (e) => {\n                            return (\n                              <div class=\"col-lg-6\">\n                                <div class=\"row\">\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16 f-b\">{e.name}</h3>\n                                  </div>\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16\">{e.value}</h3>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        )}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Template</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Name</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.tikDetailSuccess &&\n                                this.props.tikDetailSuccess.templateDetails\n                                  .template_name}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Number of Attributes</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.tikDetailSuccess &&\n                              this.props.tikDetailSuccess.templateDetails\n                                .attribute != undefined\n                                ? this.props.tikDetailSuccess.templateDetails\n                                    .attribute.length\n                                : null}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Type</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.tikDetailSuccess &&\n                                this.props.tikDetailSuccess.templateDetails\n                                  .template_type}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Acceptance Form Integrated</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.tikDetailSuccess &&\n                              this.props.tikDetailSuccess.templateDetails\n                                .isAcceptanceDocument\n                                ? \"Yes\"\n                                : \"No\"}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <h3 class=\"f-20 f-b\">Template Fields</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {sortedMain.map((e, index) => {\n                        if (e.dataType == \"String\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Text\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.state.attrVal[index] != undefined\n                                          ? this.state.attrVal[index].value\n                                          : null\n                                      }\n                                      disabled\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              \n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Boolean\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"3px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form class=\"d-flex flex-wrap form-group\">\n                                    <div class=\"form-check-inline custom-control custom-checkbox\">\n                                      <input\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default,\n                                            \"boolean\"\n                                          )\n                                        }\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input\"\n                                        id={index}\n                                        name=\"example1\"\n                                        checked={\n                                          this.props.imgList &&\n                                          this.props.imgList[\n                                            _.findIndex(this.props.imgList, [\n                                              \"order\",\n                                              e.order.toString(),\n                                            ])\n                                          ] != undefined\n                                            ? this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value == false || this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value == 'false'\n                                              ? undefined\n                                              : true\n                                            : undefined\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-m\"\n                                        for={index}\n                                      ></label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {/* {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null} */}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Number\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"number\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        // if (e.datatype == \"Boolean\") {\n                        //     return (\n                        //       <div class=\"col-lg-6\">\n                        //         <div class=\"row\">\n                        //           <div class=\"col-lg-4\">\n                        //             <h3 class=\"f-16 f-b\">{e.attribute_name}</h3>\n                        //           </div>\n                        //           <input\n                        //                   type=\"checkbox\"\n                        //                   class=\"custom-control-input\"\n                        //                   id=\"customCheck11212\"\n                        //                   name=\"example1\"\n                        //                   checked={\n                        //                     document != null\n                        //                       ? document.update\n                        //                       : false\n                        //                   }\n                        //                 />\n                        //         </div>\n                        //       </div>\n                        //     );\n                        //   }\n                        if (e.dataType == \"Date\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <DatePicker\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(date) =>\n                                        this.handleChange(\n                                          date,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default,\n                                          \"date\"\n                                        )\n                                      }\n                                      dateFormat=\"MM-dd-yyyy\"\n                                      //   disabled={this.props.btnchange ? false : true}\n                                      className={\n                                        \"form-control f-14 w-70 float-left text-center py-1 dull datetimepicker1\"\n                                      }\n                                      showMonthDropdown\n                                      showYearDropdown\n                                      dropdownMode=\"select\"\n                                      //   maxDate={addDays(new Date(), 0)}\n                                      //   minDate={subYears(new Date(), 100)}\n                                    />\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={calander} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Time\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div\n                                  class=\"col-lg-8\"\n                                  onClick={(e) => e.stopPropagation()}\n                                >\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group date\"\n                                  >\n                                    <input\n                                      onClick={() =>\n                                        this.showTimeHandler(index)\n                                      }\n                                      type=\"text\"\n                                      class=\"timepicker form-control f-14 w-70 float-left text-center py-1 dull\"\n                                      id=\"\"\n                                      placeholder=\"00:00\"\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                    />\n                                    {showTime && timeIndex == index && (\n                                      <Timekeeper\n                                        // onChange={(newTime) =>\n                                        //   this.setTime(\n                                        //     newTime.formatted12,\n                                        //     index\n                                        //   )\n                                        // }\n                                        onChange={(newTime) =>\n                                          this.handleChange(\n                                            newTime.formatted12,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                        onDoneClick={() => {\n                                          this.showTimeCloseHandler();\n                                          this.handleChange(\n                                            newTime.formatted12,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          );\n                                        }}\n                                        switchToMinuteOnHourSelect\n                                      />\n                                    )}\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={times} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Qr\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"image_title\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Image\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                  >\n                                    <div class=\"custom-file\">\n                                      <input\n                                        type=\"file\"\n                                        class=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"image_title\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-file-label f-m\"\n                                        for=\"customFile\"\n                                      >\n                                        {this.props.imageData[\n                                          _.findIndex(this.props.imageData, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? _.truncate(\n                                              this.props.imageData[\n                                                _.findIndex(\n                                                  this.props.imageData,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value,\n                                              { length: 12 }\n                                            )\n                                          : this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ] != undefined\n                                          ? _.truncate(\n                                              this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].fileName,\n                                              { length: 12 }\n                                            )\n                                          : \"No file selected\"}\n                                      </label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[index] != undefined ? (\n                                (\n                                  this.props.imgList[index].value == \"\" &&\n                                  (this.props.imageData[index] != undefined\n                                    ? this.props.imageData[index].value == \"\"\n                                    : true) ? (\n                                    <>\n                                      <div class=\"row\">\n                                        <div class=\"col-lg-4\"></div>\n                                        <div class=\"col-lg-8\">\n                                          <div className=\"input-feedback-tik\">\n                                            Please enter the {e.attribute_name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </>\n                                  ) : (\n                                    this.props.imageData[index] &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpeg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"png\")\n                                  )\n                                ) ? (\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Only jpg,jpeg,png files are supported\n                                      </div>\n                                    </div>\n                                  </div>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Please enter the {e.attribute_name}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                      })}\n                      {/* {sortedMain.map((e, index) => {\n                       \n                      })} */}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Tee Details</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-4\">\n                            <h3 class=\"f-16 f-b\" style={{ marginTop: \"12px\" }}>\n                              Email Address\n                            </h3>\n                          </div>\n                          <div class=\"col-lg-8\">\n                            <form\n                              onSubmit={(e) => {\n                                e.preventDefault();\n                              }}\n                              class=\"form-group createDoc\"\n                            >\n                              <CreatableSelect\n                                isMulti\n                                isDisabled\n                                onChange={this.handleTeeChange}\n                                options={this.props.reciverList}\n                                value={this.props.reciverDraftList}\n                              />\n                            </form>\n                          </div>\n                        </div>\n\n                        {this.state.submit ? (\n                          this.props.reciverDraftList != null ? (\n                            this.props.reciverDraftList.length == 0 ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please select the email\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : this.state.error ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      {this.state.errormessage}\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : null\n                          ) : (\n                            <>\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\"></div>\n                                <div class=\"col-lg-8\">\n                                  <div className=\"input-feedback-tik\">\n                                    Please select the email\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          )\n                        ) : this.state.error ? (\n                          <>\n                            <div class=\"row\">\n                              <div class=\"col-lg-4\"></div>\n                              <div class=\"col-lg-8\">\n                                <div className=\"input-feedback-tik\">\n                                  {this.state.errormessage}\n                                </div>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n\n                  <div class=\"row\">\n                    <div class=\"offset-lg-4 col-lg-4 mt-5\">\n                      <div class=\"offset-lg-2 col-lg-10 d-flex\">\n                        {/* <a\n                          onClick={() =>\n                            this.props.history.push(\"/select-template\")\n                          }\n                          class=\"btn btn-default m-1 w-100 f-b\"\n                        >\n                          Previous\n                        </a> */}\n                        <a\n                          onClick={this.handleSubmit}\n                          id=\"\"\n                          data-toggle=\"modal\"\n                          data-target=\"#successPublished\"\n                          class=\"btn btn-org m-1 w-100 f-b published\"\n                        >\n                          {loader ? (\n                            <i class=\"fa fa-refresh fa-spin\"></i>\n                          ) : (\n                            \"Publish\"\n                          )}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className={\n                this.state.showTicket\n                  ? \"col flex-grow-0 d-flex align-items-center justify-content-center rotate\"\n                  : \"col flex-grow-0 d-flex align-items-center justify-content-center\"\n              }\n            >\n              <a\n                onClick={this.ticketHandler}\n                class=\"arrow-toggle text-center text-white btn btn-primary d-table\"\n              >\n                <i class=\"f-24 fa fa-chevron-left d-table-cell vertical-align-m\"></i>\n              </a>\n            </div>\n\n            <div\n              className={\n                this.state.showTicket\n                  ? \"col-lg-3 col-md-4 mb-5 br-20 right-ticket\"\n                  : \"col-lg-3 col-md-4 mb-5 br-20 right-ticket hide-right-panel\"\n              }\n            >\n              <div class=\"br-20 px-3 py-4 right-container\">\n                <div class=\"pr-0 min-fixHeight\">\n                  {this.props.imgList.map((e) => {\n                    if (e != undefined) {\n                      if (\n                        e.value != \"\" &&\n                        e.default == true &&\n                        e.dataType == \"Qr\"\n                      ) {\n                        return (\n                          <div class=\"px-3 py-4 border-dark br-20 first-box\">\n                            <div class=\"d-flex  flex-wrap justify-content-center flex-column\">\n                              <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                                <QRCode\n                                  value={e.value}\n                                  size={128}\n                                  bgColor={\"#ffffff\"}\n                                  fgColor={\"#000000\"}\n                                  includeMargin={false}\n                                  renderAs={\"svg\"}\n                                  imageSettings={{\n                                    excavate: true,\n                                  }}\n                                />\n                              </div>\n                              <div class=\"text-center d-flex justify-content-center align-items-center\">\n                                <h3\n                                  style={{ wordBreak: \"break-all\" }}\n                                  class=\"f-26 f-b mr-3\"\n                                >\n                                  {e.name}\n                                </h3>\n                                <h3\n                                  style={{ wordBreak: \"break-all\" }}\n                                  class=\"f-26\"\n                                >\n                                  {e.value}\n                                </h3>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      }\n                    }\n                  })}\n\n                  <div class=\"px-3 py-4 border-dark br-20 mt-2 second-box\">\n                    <div class=\" justify-content-center\">\n                      {this.props.imgList.map((e) => {\n                        if (e != undefined) {\n                          if (\n                            e.default == true &&\n                            e.dataType == \"Image\" &&\n                            e.value != \"\"\n                          ) {\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={e.value}\n                              />\n                            );\n                          }\n                        }\n                      })}\n\n                      {this.props.imageData.map((e) => {\n                        if (e != undefined) {\n                          if (e.default == true) {\n                            console.log(\"image\", e);\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={URL.createObjectURL(e.image)}\n                              />\n                            );\n                          }\n                        }\n                      })}\n\n                      <div class=\"text-center d-flex justify-content-center align-items-center\">\n                        <h3 class=\"f-26 f-b \">\n                          {templateDetail.template_type}\n                        </h3>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"px-3 py-4 border-dark br-20 mt-2\">\n                    <h4\n                      class=\"f-24 f-m text-center\"\n                      style={{ wordBreak: \"break-all\" }}\n                    >\n                      {this.props.templateDetail.template_name}\n                    </h4>\n\n                    {this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (\n                          e.value != \"\" &&\n                          e.default == false &&\n                          e.dataType == \"Qr\"\n                        ) {\n                          return (\n                            <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                              <QRCode\n                                value={e.value}\n                                size={128}\n                                bgColor={\"#ffffff\"}\n                                fgColor={\"#000000\"}\n                                includeMargin={false}\n                                renderAs={\"svg\"}\n                                imageSettings={{\n                                  excavate: true,\n                                }}\n                              />\n                            </div>\n                          );\n                        }\n                      }\n                    })}\n                    {this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (\n                          e.default == false &&\n                          e.dataType == \"Image\" &&\n                          e.value != \"\"\n                        ) {\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={e.value}\n                            />\n                          );\n                        }\n                      }\n                    })}\n\n                    {this.props.imageData.map((e) => {\n                      if (e != undefined) {\n                        if (e.default == false) {\n                          console.log(\"image\", e);\n                          return (\n                            <img\n                              style={{\n                                height: \"132px\",\n                                width: \"132px\",\n                              }}\n                              class=\"d-block mx-auto  mb-2 img-fluid\"\n                              src={URL.createObjectURL(e.image)}\n                            />\n                          );\n                        }\n                      }\n                    })}\n                    {this.props.imgList.map((e, index) => {\n                      if (e != undefined) {\n                        if (e.dataType != \"Image\") {\n                          return (\n                            <div class=\"d-flex flex-wrap\">\n                              <div class=\"col-sm-4\">\n                                <h3 class=\"f-16 f-b\">{e.name}</h3>\n                              </div>\n                              <div class=\"col-sm-8\">\n                                <h3 class=\"f-16\">\n                                  {e.value === true\n                                    ? \"True\"\n                                    : e.value === false\n                                    ? \"False\"\n                                    : e.value}\n                                </h3>\n                              </div>\n                            </div>\n                          );\n                        }\n                      }\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n        {MobileViewPoppup == true ? (\n          <DraftMobileView\n            closePopup={this.closeMobilePopup}\n            history={this.props.history}\n            imageData={this.props.imageData}\n            imgList={this.props.imgList}\n            draft={this.props.tikDetailSuccess}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  firstName: state.Profile.firstName,\n  templateDetail: state.Template.templateDetail,\n  metaData: state.Tik.metaData,\n  reciverData: state.Tik.reciverData,\n  createTikSuccess: state.Tik.createTikSuccess,\n  error: state.Auth.error,\n  document: state.Profile.document,\n  draftDetailSuccess: state.Tik.draftDetailSuccess,\n  imgList: state.Tik.imgList,\n  imageData: state.Tik.image,\n  imgListData: state.Tik.imgListData,\n  reciverList: state.Tik.reciverList,\n  reciverDraftList: state.Tik.reciverDraftList,\n  tikDetailSuccess: state.Tik.tikDetailSuccess,\n  tikListData: state.Tik.tikListData,\n  updateTikSuccess: state.Tik.updateTikSuccess,\n  saveDraftSuccess: state.Tik.saveDraftSuccess,\n  roledocument: state.Profile.Roledocument,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  createTik: (payload) => dispatch(actions.createTik(payload)),\n  reciverListInfo: () => dispatch(actions.reciverList()),\n  errorClear: () => dispatch(actions.errorClear()),\n  saveDraft: (payload) => dispatch(actions.saveDraft(payload)),\n  imgListEdit: (payload) => dispatch(actions.imgListEdit(payload)),\n  imageEdit: (payload) => dispatch(actions.imageEdit(payload)),\n  reciverDraft: (payload) => dispatch(actions.reciverDraft(payload)),\n  reciverDraftEdit: (payload) => dispatch(actions.reciverDraftEdit(payload)),\n  draftDtail: (data) => dispatch(actions.draftDtail(data)),\n  tikDetail: (data) => dispatch(actions.tikDetail(data)),\n  addMetaData: (data) => dispatch(actions.addMetaData(data)),\n  updateTik: (payload) => dispatch(actions.updateTik(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateTik);\n","C:\\react-main\\src\\container\\Tik\\ViewDraft.jsx",["1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable array-callback-return */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable eqeqeq */\nimport React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport Timekeeper from \"react-timekeeper\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DraftMobileView from \"./DraftMobileView.jsx\";\nimport { toast } from \"react-toastify\";\nimport CreatableSelect from \"react-select/creatable\";\nimport _ from \"lodash\";\nimport { draftDetailSuccess } from \"../../actions\";\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\nimport calander from\"../../assets/img/cal.png\";\nimport times from \"../../assets/img/time.png\";\nimport certi from \"../../assets/img/certi.png\";\n// import QRCode from 'react-qr-code';\nvar QRCode = require(\"qrcode.react\");\n\nclass ViewDraft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      tabActive: \"Personal\",\n      updateBtn: false,\n      firstName: \"\",\n      lastName: \"\",\n      designation: \"\",\n      companyName: \"\",\n      address: \"\",\n      showSuccess: false,\n      message: \"\",\n      coverImage: \"\",\n      imageURL: \"\",\n      mobileNumberUpdate: false,\n      MobileOtpPopup: false,\n      showTime: false,\n      time: \"12:34pm\",\n      attrVal: [],\n      timeIndex: null,\n      imgList: [],\n      imageURL: \"\",\n      coverImage: \"\",\n      image: [],\n      livepreview: [],\n      MobileViewPoppup: false,\n      submit: false,\n      reciverList: [],\n      teeDetail: [],\n      showTicket: false,\n      screenwidth: \"\",\n      loader: false,\n      error: false,\n      errormessage: \"\",\n      touch: false,\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n  componentDidMount() {\n    this.props.errorClear();\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    const draftId = JSON.parse(localStorage.getItem(\"draftId\"));\n    if (draftId != null) {\n      this.props.draftDtail({ Id: draftId });\n    }\n    this.props.profile();\n    // this.props.getTemplateDetail({ templateId: tempId });\n    this.props.reciverListInfo();\n    // window.addEventListener(\"resize\", this.updateWidth);\n    localStorage.setItem(\"prevroute\", JSON.stringify(\"editDraft\"));\n    // let previousdata = this.props.imgList;\n    // this.props.imgListData.map((e) => {\n    //   console.log(\"ppppppppppppppppppppppp\", e);\n    //   let data5 = previousdata[e.order - 1];\n    //   let testObject = {\n    //     ...data5,\n    //     dataType: e.dataType,\n    //     default: e.default,\n    //     name: e.name,\n    //     order: e.order.toString(),\n    //     value: e.value,\n    //   };\n    //   previousdata[e.order - 1] = testObject;\n    //   this.setState({ attrVal: previousdata });\n    //   this.props.imgListEdit({ previousdata });\n    // });\n  }\n\n  b64toBlob = (b64Data, contentType, sliceSize) => {\n    contentType = contentType || \"\";\n    sliceSize = sliceSize || 512;\n\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  updateWidth = () => {\n    const x = document.getElementById(\"screenPixel\").offsetWidth;\n    this.setState({\n      screenwidth: x,\n    });\n  };\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.templateDetail != this.props.templateDetail) {\n      if (this.props.templateDetail != undefined) {\n        let booleanMain = [];\n        Object.keys(this.props.templateDetail).map((e) => {\n          if (e == \"attribute\") {\n            this.props.templateDetail[\"attribute\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"image\") {\n            this.props.templateDetail[\"image\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n          if (e == \"text\") {\n            this.props.templateDetail[\"text\"].map((i) => {\n              booleanMain.push(i);\n            });\n          }\n        });\n        let sortedBooleanMain = _.sortBy(booleanMain, [\"order\"]);\n        // console.log('callllllllllllllllllllll',sortedBooleanMain)\n        sortedBooleanMain.map((e) => {\n          if (e.dataType == \"Boolean\") {\n            //  console.log('boolean condition')\n            let booleanData = this.state.attrVal;\n            let data = booleanData[e.order - 1];\n            const object = {\n              ...data,\n              name: e.attribute_name,\n              value: false,\n              order: e.order,\n              dataType: e.datatype,\n              default: e.defaultValue,\n            };\n            booleanData[e.order - 1] = object;\n            this.setState(\n              {\n                attrVal: booleanData,\n              },\n              () => console.log(\"sasvddvhjdadhjddhjdahd\", this.state.attrVal)\n            );\n          }\n        });\n      }\n    }\n\n    if (prevProps.createTikSuccess != this.props.createTikSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Tik published successfully\",\n        loader: false,\n      });\n    }\n    if (this.props.error != prevProps.error) {\n      // console.log(this.props.error);\n      this.setState({ loader: false });\n    }\n    if (\n      this.props.reciverData != undefined &&\n      this.props.reciverData instanceof Array &&\n      this.props.reciverData != prevProps.reciverData\n    ) {\n      let teeObjectList = [];\n      let teeArrayList = [];\n      this.props.reciverData.map((e) => {\n        // console.log(e);\n        teeArrayList.push(e.email);\n        const teeObject = {\n          ...teeArrayList,\n          value: e.email,\n          label: e.email,\n        };\n        // console.log(teeObject);\n      });\n      teeArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeObjectList.push(teeObject);\n      });\n      //   this.setState({ teeDetail: teeObjectList });\n      this.props.reciverDraft({ teeDetail: teeObjectList });\n    }\n\n    if (this.props.saveDraftSuccess != prevProps.saveDraftSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Draft saved sucessfully\",\n        loader: false,\n      });\n    }\n\n    if (this.props.draftDetailSuccess != prevProps.draftDetailSuccess) {\n      let previousdata = this.props.imgList;\n      this.props.imgListData.map((e) => {\n        console.log(\"ppppppppppppppppppppppp\", e);\n        if (e.dataType == \"Image\") {\n          let data5 = previousdata[e.order - 1];\n          let testObject = {\n            ...data5,\n            dataType: e.dataType,\n            default: e.default,\n            name: e.name,\n            order: e.order.toString(),\n            value: e.value,\n            fileName: e.fileName,\n          };\n          previousdata[e.order - 1] = testObject;\n          this.setState({ attrVal: previousdata });\n          this.props.imgListEdit({ previousdata });\n        } else {\n          let data5 = previousdata[e.order - 1];\n          let testObject = {\n            ...data5,\n            dataType: e.dataType,\n            default: e.default,\n            name: e.name,\n            order: e.order.toString(),\n            value: e.value,\n          };\n          previousdata[e.order - 1] = testObject;\n          this.setState({ attrVal: previousdata });\n          this.props.imgListEdit({ previousdata });\n        }\n      });\n      let teeDraftObjectList = [];\n      let teeDraftArrayList = [];\n      console.log(\n        \"oooooooooooooooo\",\n        this.props.draftDetailSuccess.draftData.receiverList\n      );\n      this.props.draftDetailSuccess.draftData.receiverList.map((e) => {\n        // console.log(e);\n        teeDraftArrayList.push(e);\n        const teeObject = {\n          ...teeDraftArrayList,\n          value: e,\n          label: e,\n        };\n        // console.log(teeObject);\n      });\n      teeDraftArrayList.map((e) => {\n        const teeObject = {\n          value: e,\n          label: e,\n        };\n        teeDraftObjectList.push(teeObject);\n      });\n      //   this.setState({ teeDetail: teeObjectList });\n      this.props.reciverDraftEdit({ reciverList: teeDraftObjectList });\n      this.props.getTemplateDetail({\n        templateId: this.props.draftDetailSuccess.draftData.templateId,\n        whiteList: true,\n      });\n      localStorage.setItem(\n        \"addMetaData\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.metaList)\n      );\n      localStorage.setItem(\n        \"templateId\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.templateId)\n      );\n      localStorage.setItem(\n        \"selectId\",\n        JSON.stringify(this.props.draftDetailSuccess.draftData.templateId)\n      );\n      this.props.addMetaData({\n        metaData: this.props.draftDetailSuccess.draftData.metaList,\n      });\n    }\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.history.push({\n      pathname: \"/docHistory\",\n      state: { detail: \"Drafts\" },\n    });\n  };\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  ticketHandler = () => {\n    this.setState({\n      showTicket: !this.state.showTicket,\n    });\n  };\n\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  activeTab = (activeName) => {\n    this.setState({\n      tabActive: activeName,\n    });\n  };\n  updateToggle = () => {\n    this.setState({\n      updateBtn: true,\n    });\n  };\n\n  handleSubmit = () => {\n    this.setState({ submit: true });\n    let images = [];\n    let sortReciverList = [];\n    let sortattrValCheck = [];\n    let sortimgListCheck = [];\n    let imageValueFilter = [];\n    let sortImageFilter = [];\n    let numberVali = [];\n    let filterTemplateDetail;\n    let blobArray = [];\n\n    const { draftDetailSuccess, imageData } = this.props;\n\n    filterTemplateDetail = draftDetailSuccess.templateDetails.attribute.filter(\n      (e) => e.dataType != \"Text\"\n    );\n\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n    const sortimage = this.props.imageData.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    sortimgList.map((e, i) => {\n      if (e.dataType == \"Image\" && e.value == \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n      } else if (e.dataType == \"Image\" && e.value != \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n\n        let block = e.value.split(\";\");\n        // Get the content type of the image\n        let contentType = block[0].split(\":\")[1]; // In this case \"image/gif\"\n        // get the real base64 content of the file\n        let realData = block[1].split(\",\")[1]; // In this case \"R0lGODlhPQBEAPeoAJosM....\"\n\n        // Convert it to a blob to upload\n        let blob = this.b64toBlob(realData, contentType);\n        blobArray.push(blob);\n      }\n    });\n\n    sortimgList.map((e) => {\n      if (e.dataType == \"Number\") {\n        numberVali.push(e.value);\n      }\n    });\n\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    const documentName = draftDetailSuccess.draftData.metaList[0].value;\n    const templateId = draftDetailSuccess.draftData.templateId;\n\n    imageData.map((e) => {\n      if (e != undefined) {\n        images.push(e.image);\n      }\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(imageValueFilter);\n\n    console.log(\n      imageValueFilter,\n      concatAttr.length === filterTemplateDetail.length,\n      !sortImageFilter.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n    console.log(blobArray);\n    let concateImage = images.concat(blobArray);\n    console.log(\"aaaaaaaaaaaa\", concateImage);\n    if (\n      concatAttr.length === filterTemplateDetail.length &&\n      !sortImageFilter.includes(\"\") &&\n      sortReciverList.length != 0 &&\n      this.state.error == false &&\n      /^[0-9]*$/i.test(numberVali)\n    ) {\n      this.setState({ loader: true });\n      this.props.createTik({\n        documentName,\n        templateId,\n        metaData: draftDetailSuccess.draftData.metaList,\n        sortattrVal: concatAttr,\n        sortimgList,\n        images: concateImage,\n        receiverList: sortReciverList,\n      });\n    }\n  };\n  saveDraft = () => {\n    const tempId = JSON.parse(localStorage.getItem(\"templateId\"));\n    let images = [];\n    let sortReciverList = [];\n    let sortattrValCheck = [];\n    let sortimgListCheck = [];\n    let imageValueFilter = [];\n    let sortImageFilter = [];\n    let numberVali = [];\n    let filterTemplateDetail;\n    let blobArray = [];\n\n    const {\n      draftDetailSuccess,\n      imageData,\n      metaData,\n      templateDetail,\n    } = this.props;\n    let isEditDraft = JSON.parse(localStorage.getItem(\"isEditDraft\"));\n    let draftDetailId = draftDetailSuccess.draftData._id;\n    filterTemplateDetail = draftDetailSuccess.templateDetails.attribute.filter(\n      (e) => e.dataType != \"Text\"\n    );\n\n    // const sortattrVal = this.state.attrVal.filter(\n    //   (e) => Object.keys(e).length != 0\n    // );\n    const sortimgList = this.props.imgList.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n    const sortimage = this.props.imageData.filter(\n      (e) => e && Object.keys(e).length != 0\n    );\n\n    // sortattrVal.map((e) => {\n    //   sortattrValCheck.push(e.value);\n    // });\n    sortimgList.map((e, i) => {\n      if (e.dataType == \"Image\" && e.value == \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n      } else if (e.dataType == \"Image\" && e.value != \"\") {\n        let imageFilter = imageValueFilter;\n        let data = imageFilter[i];\n        const imageFilterObject = {\n          ...data,\n          dataType: e.dataType,\n          default: e.default,\n          name: e.name,\n          order: e.order,\n        };\n        imageValueFilter.push(imageFilterObject);\n\n        let block = e.value.split(\";\");\n        // Get the content type of the image\n        let contentType = block[0].split(\":\")[1]; // In this case \"image/gif\"\n        // get the real base64 content of the file\n        let realData = block[1].split(\",\")[1]; // In this case \"R0lGODlhPQBEAPeoAJosM....\"\n\n        // Convert it to a blob to upload\n        let blob = this.b64toBlob(realData, contentType);\n        blobArray.push(blob);\n      }\n    });\n\n    sortimgList.map((e) => {\n      if (e.dataType == \"Number\") {\n        numberVali.push(e.value);\n      }\n    });\n\n    sortImageFilter = sortimgList.filter((e) => e.dataType != \"Image\");\n    sortimgList.map((e) => {\n      sortimgListCheck.push(e.value);\n    });\n    const documentName = draftDetailSuccess.draftData.metaList[0].value;\n    const templateId = draftDetailSuccess.draftData.templateId;\n\n    imageData.map((e) => {\n      if (e != undefined) {\n        images.push(e.image);\n      }\n    });\n    if (this.props.reciverDraftList != null) {\n      this.props.reciverDraftList.map((e) => {\n        // console.log(e);\n        sortReciverList.push(e.value);\n      });\n    }\n    const concatAttr = sortImageFilter.concat(imageValueFilter);\n\n    console.log(\n      imageValueFilter,\n      concatAttr.length === filterTemplateDetail.length,\n      !sortImageFilter.includes(\"\"),\n      sortReciverList.length != 0,\n      this.state.error == false\n    );\n    console.log(blobArray);\n    let concateImage = images.concat(blobArray);\n    console.log(\"aaaaaaaaaaaa\", concateImage);\n\n    this.setState({ loader: true });\n    this.props.saveDraft({\n      documentName,\n      templateId: tempId,\n      metaData: draftDetailSuccess.draftData.metaList,\n      sortattrVal: concatAttr,\n      sortimgList,\n      images: concateImage,\n      receiverList: sortReciverList,\n      removeDraftId: isEditDraft ? \"\" : draftDetailId,\n    });\n  };\n  imageChangeHandler = (e) => {\n    this.setState({\n      imageURL: URL.createObjectURL(e.target.files[0]),\n      coverImage: e.target.files[0],\n    });\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      mobileNumberUpdate: false,\n    });\n  };\n  mobileUpdateHandler = () => {\n    this.setState({\n      mobileNumberUpdate: true,\n    });\n  };\n  mobileOtpModalClose = () => {\n    this.setState({\n      MobileOtpPopup: false,\n    });\n  };\n  showTimeHandler = (index) => {\n    this.setState({\n      showTime: true,\n      timeIndex: index,\n    });\n  };\n  showTimeCloseHandler = () => {\n    this.setState({\n      showTime: false,\n    });\n  };\n  setTime = (e, index) => {\n    this.setState({\n      time: e,\n    });\n  };\n\n  handleChange = (e, value, index, name, datatype, defaultValue, date = \"\") => {\n    this.setState({ touch: true });\n    if (value == \"attribute_name\") {\n      let previousdata = this.props.imgList;\n      let livePreview = this.state.livepreview;\n\n      let data = previousdata[index];\n      let previewData = livePreview[index];\n      const object = {\n        ...data,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked.toString()\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: (index + 1).toString(),\n        dataType: datatype,\n        default: defaultValue,\n      };\n      const previewObject = {\n        ...previewData,\n        name: name,\n        value:\n          e.target != undefined\n            ? date == \"boolean\"\n              ? e.target.checked\n              : e.target.value\n            : date == \"date\"\n            ? (\"0\" + new Date(e).getDate()).slice(-2) +\n              \"-\" +\n              (\"0\" + (new Date(e).getMonth() + 1)).slice(-2) +\n              \"-\" +\n              e.getFullYear()\n            : e,\n        order: index + 1,\n      };\n      previousdata[index] = object;\n      livePreview[index] = previewObject;\n\n      //   this.setState({\n      //     attrVal: previousdata,\n      //     livepreview: livePreview,\n      //   });\n      this.props.imgListEdit({ previousdata });\n    }\n    if (value == \"image_title\") {\n      console.log(e.target.value);\n      if (e.target.files == undefined) {\n        let previousdata = this.props.imgList;\n\n        let data = previousdata[index];\n        const object = {\n          ...data,\n          name: name,\n          value: e.target.value,\n          order: (index + 1).toString(),\n          dataType: datatype,\n          default: defaultValue,\n        };\n\n        previousdata[index] = object;\n        this.props.imgListEdit({ previousdata });\n      } else {\n        if (\n          e.target.files[0].name.split(\".\").includes(\"jpg\") ||\n          e.target.files[0].name.split(\".\").includes(\"jpeg\") ||\n          e.target.files[0].name.split(\".\").includes(\"png\")\n        ) {\n          let previousdata = this.props.imgList;\n          let previousdata2 = this.props.imageData;\n\n          let data = previousdata[index];\n          let data2 = previousdata2[index];\n\n          const object = {\n            ...data,\n            name: name,\n            order: (index + 1).toString(),\n            dataType: datatype,\n            default: defaultValue,\n            value: \"\",\n          };\n          const object2 = {\n            ...data2,\n            name: name,\n            image: e.target.files[0],\n            order: (index + 1).toString(),\n            default: defaultValue,\n            value: e.target.files[0].name,\n          };\n          previousdata[index] = object;\n          previousdata2[index] = object2;\n\n          this.setState({\n            imgList: previousdata,\n            image: previousdata2,\n          });\n          this.props.imgListEdit({ previousdata });\n          this.props.imageEdit({ previousdata2 });\n        } else {\n          toast.error(\"Only jpg,jpeg and png files are supported\");\n        }\n      }\n    }\n  };\n  handleTeeChange = (e) => {\n    console.log(e);\n    if (e != null) {\n      if (e.length != 0) {\n        const result = e.filter(\n          (j) => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(j.value)\n        );\n        if (result.length > 0) {\n          this.setState({\n            error: true,\n            errormessage: \"invalid email address\",\n          });\n        } else {\n          this.setState({\n            error: false,\n            errormessage: \"\",\n          });\n          // this.setState({\n          //   reciverList: e,\n          // });\n          this.props.reciverDraftEdit({ reciverList: e });\n        }\n      }\n    } else {\n      this.props.reciverDraftEdit({ reciverList: e });\n    }\n  };\n  imageChangeHandler = (e) => {\n    if (\n      !e.target.files[0].name.split(\".\").includes(\"jpg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"jpeg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"png\")\n    ) {\n      toast.error(\"Only jpg,jpeg and png files are supported\");\n    } else {\n      this.setState({\n        imageURL: URL.createObjectURL(e.target.files[0]),\n        coverImage: e.target.files[0],\n      });\n    }\n  };\n  closeMobilePopup = () => {\n    this.setState({ MobileViewPoppup: false });\n  };\n  showMobileView = () => {\n    this.setState({ MobileViewPoppup: true });\n  };\n  render() {\n    const {\n      showNotification,\n      logout,\n      showSuccess,\n      message,\n      showTime,\n      time,\n      timeIndex,\n      attrVal,\n      imgList,\n      image,\n      loader,\n      MobileViewPoppup,\n    } = this.state;\n\n    const {\n      templateDetail,\n      metaData,\n      reciverData,\n      draftDetailSuccess,\n    } = this.props;\n    let numberValidation = /^[0-9]*$/i;\n    // const sortattrVal = attrVal.filter((e) => Object.keys(e).length != 0);\n    // const sortimgList = this.props.imgList.filter((e) => Object.keys(e).length != 0 && Object.keys(e) != undefined );\n    // const sortimage = this.props.imageData.filter((e) => Object.keys(e).length != 0);\n    // let localMetaData = JSON.parse(localStorage.getItem(\"addMetaData\"));\n    // console.log(\"before sort\", imgList);\n    // console.log(\"after sort\", sortattrVal, sortimgList, sortimage);\n    // console.log(\"concat\", sortattrVal.concat(sortimgList), sortimage);\n    // console.log(\"tee detail\", this.props.error);\n    let attr = [];\n    let thumbnail = [];\n    let text = [];\n    let main = [];\n    Object.keys(this.props.templateDetail).map((e) => {\n      if (e == \"attribute\") {\n        this.props.templateDetail[\"attribute\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"image\") {\n        this.props.templateDetail[\"image\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"text\") {\n        this.props.templateDetail[\"text\"].map((i) => {\n          main.push(i);\n        });\n      }\n    });\n    let sortedMain = _.sortBy(main, [\"order\"]);\n    sortedMain.map((e) => {\n      Object.keys(e).map((i) => {\n        if (i == \"attribute_name\") {\n          attr.push(e);\n        }\n      });\n    });\n    console.log(this.props.draftDetailSuccess);\n    console.log(\n      \"lllllllllllllllllllllllllllllll\",\n      this.props.imgList,\n      this.props.imageData\n    );\n    // console.log(_.findIndex(this.props.imgList, [\"order\", \"1\"]));\n\n    console.log(\n      \"test\",\n      this.props.reciverDraftList,\n      this.props.imgList,\n      this.props.imageData\n    );\n\n    return (\n      <>\n        <nav className=\"navbar beforel navbar-expand-md py-1\">\n          <a\n            class=\"navbar-brand\"\n            onClick={() => this.props.history.push(\"/dashboard\")}\n          >\n            <img class=\"big img-fluid\" src={header_logo} />\n            <img class=\"mini img-fluid\" src={logom} />\n          </a>\n          <ul className=\"nav navbar-top-links navbar-right\">\n            <li className=\"ml-2 mr-2\">\n              <a\n                className=\"btn p-0\"\n                data-toggle=\"modal\"\n                data-target=\"#searchmodal\"\n              >\n                <img className src={searcho} />\n                {/* <i className=\"fas fa-search\"></i> */}\n              </a>\n            </li>\n            <li className=\"ml-2 mr-2\">\n              {this.props.document == null ? (\n                <li className=\"ml-2 mr-2\">\n                  <a\n                    onClick={() => {\n                      this.props.history.push(\"/add-metadata\");\n                      localStorage.setItem(\n                        \"prevroute\",\n                        JSON.stringify(\"create-tik\")\n                      );\n                    }}\n                    className=\"btn-border org-border br-6 d-flex p-2\"\n                  >\n                    <img className src={doc} />\n                    <h4\n                      style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                      className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                    >\n                      Create New Tik\n                    </h4>\n                  </a>\n                </li>\n              ) : this.props.roledocument != undefined ? (\n                this.props.document.create || this.props.roledocument.create ? (\n                  <a\n                    onClick={() => {\n                      this.props.history.push(\"/add-metadata\");\n                      localStorage.setItem(\n                        \"prevroute\",\n                        JSON.stringify(\"create-tik\")\n                      );\n                    }}\n                    className=\"btn-border org-border br-6 d-flex p-2\"\n                  >\n                    <img className src={doc} />\n                    <h4\n                      style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                      className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                    >\n                      Create New Tik\n                    </h4>\n                  </a>\n                ) : null\n              ) : null}\n            </li>\n            <li className=\"dropdown mx-2\">\n              <a\n                className=\"dropdown-toggle count-info px-0\"\n                data-toggle=\"dropdown\"\n                onClick={() => this.showNotification()}\n              >\n                <i className=\"fa fa-bell f-26\"></i>{\" \"}\n                <span className=\"label label-primary\">8</span>\n              </a>\n              {showNotification === true ? <Notification /> : null}\n            </li>\n\n            <li className=\"ml-2\">\n              <ProfileDropdown logout={this.logoutHandler} />\n            </li>\n          </ul>\n        </nav>\n        {logout ? (\n          <Modal closePopup={this.closeLogoutPopup}>\n            <div class=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 class=\"modal-title text-center f-20 f-m\" id=\"\">\n                Are you sure you want to log out?\n              </h4>\n              <div class=\"d-flex logout-buttons\">\n                <Button\n                  type=\"button\"\n                  buttonText=\"No\"\n                  className=\"m-1 clear_button\"\n                  onClick={() => this.closeLogoutPopup()}\n                />\n                <Button\n                  type=\"button\"\n                  buttonText={\"Yes\"}\n                  className=\"m-1\"\n                  onClick={() => this.logout()}\n                />\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n        <div id=\"content\" class=\"container-fluid my-5 createDoc\">\n          <div class=\"row\">\n            <div class=\"col-md-12 d-flex align-items-center f-m\">\n              <h1 className=\"text-center txt-blk mb-4 f-b w-100\">View Draft</h1>\n            </div>\n          </div>\n\n          <div\n            class=\"row ox-hide\"\n            id=\"screenPixel\"\n            onClick={() => this.showTimeCloseHandler()}\n          >\n            <div class=\"col mb-5  flex-grow-3\">\n              <div class=\"border br-20 px-3 py-4 left-container\">\n                <div class=\" min-fixHeight pr-3\" style={{ minHeight: \"470px\" }}>\n                  <h3 class=\"f-20 f-b\">Metadata</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {this.props.draftDetailSuccess &&\n                        this.props.draftDetailSuccess.draftData.metaList.map(\n                          (e) => {\n                            return (\n                              <div class=\"col-lg-6\">\n                                <div class=\"row\">\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16 f-b\">{e.name}</h3>\n                                  </div>\n                                  <div class=\"col-lg-6\">\n                                    <h3 class=\"f-16\">{e.value}</h3>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        )}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Template</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Name</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                                this.props.draftDetailSuccess.templateDetails\n                                  .template_name}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Number of Attributes</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                              this.props.draftDetailSuccess.templateDetails\n                                .attribute != undefined\n                                ? this.props.draftDetailSuccess.templateDetails\n                                    .attribute.length\n                                : null}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Template Type</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                                this.props.draftDetailSuccess.templateDetails\n                                  .template_type}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16 f-b\">Acceptance From Integrated</h3>\n                          </div>\n                          <div class=\"col-lg-6\">\n                            <h3 class=\"f-16\">\n                              {this.props.draftDetailSuccess &&\n                              this.props.draftDetailSuccess.templateDetails\n                                .isAcceptanceDocument\n                                ? \"Yes\"\n                                : \"No\"}\n                            </h3>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <h3 class=\"f-20 f-b\">Template Fields</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      {sortedMain.map((e, index) => {                      \n                        if (e.dataType == \"String\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      disabled\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Boolean\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"3px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form class=\"d-flex flex-wrap form-group\">\n                                    <div class=\"form-check-inline custom-control custom-checkbox\">\n                                      <input\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default,\n                                            \"boolean\"\n                                          )\n                                        }\n                                        disabled\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input\"\n                                        id={index}\n                                        name=\"example1\"\n                                        checked={\n                                          this.props.imgList &&\n                                          this.props.imgList[\n                                            _.findIndex(this.props.imgList, [\n                                              \"order\",\n                                              e.order.toString(),\n                                            ])\n                                          ] != undefined\n                                            ? this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value == \"false\"\n                                              ? false\n                                              : true\n                                            : false\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-m\"\n                                        for={index}\n                                      ></label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Number\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      disabled\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : !numberValidation.test(\n                                    parseInt(\n                                      this.props.imgList[\n                                        _.findIndex(this.props.imgList, [\n                                          \"order\",\n                                          e.order.toString(),\n                                        ])\n                                      ].value\n                                    )\n                                  ) ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the only number\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n\n                        if (e.dataType == \"Date\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <DatePicker\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      disabled\n                                      onChange={(date) =>\n                                        this.handleChange(\n                                          date,\n                                          \"attribute_name\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default,\n                                          \"date\"\n                                        )\n                                      }\n                                      dateFormat=\"MM-dd-yyyy\"\n                                      //   disabled={this.props.btnchange ? false : true}\n                                      className={\n                                        \"form-control f-14 w-70 float-left text-center py-1 dull datetimepicker1\"\n                                      }\n                                      showMonthDropdown\n                                      showYearDropdown\n                                      dropdownMode=\"select\"\n                                      //   maxDate={addDays(new Date(), 0)}\n                                      //   minDate={subYears(new Date(), 100)}\n                                    />\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={calander} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Time\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"6px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group date\"\n                                  >\n                                    <input\n                                      onClick={() =>\n                                        this.showTimeHandler(index)\n                                      }\n                                      disabled\n                                      type=\"text\"\n                                      class=\"timepicker form-control f-14 w-70 float-left text-center py-1 dull\"\n                                      id=\"\"\n                                      placeholder=\"00:00\"\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                    />\n                                    {showTime && timeIndex == index && (\n                                      <Timekeeper\n                                        onChange={(newTime) =>\n                                          this.handleChange(\n                                            newTime.formatted12,\n                                            \"attribute_name\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                        onDoneClick={() =>\n                                          this.showTimeCloseHandler()\n                                        }\n                                        switchToMinuteOnHourSelect\n                                      />\n                                    )}\n                                    <label class=\"w-30\">\n                                      <button\n                                        class=\"border-0 event-none ml-1\"\n                                        disabled=\"\"\n                                      >\n                                        <img src={times} />\n                                      </button>\n                                    </label>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Qr\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                    class=\"form-group\"\n                                  >\n                                    <input\n                                      type=\"text\"\n                                      disabled\n                                      class=\"form-control f-16 px-3 py-2\"\n                                      placeholder={`Enter ${e.attribute_name}`}\n                                      value={\n                                        this.props.imgList &&\n                                        this.props.imgList[\n                                          _.findIndex(this.props.imgList, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ].value\n                                          : null\n                                      }\n                                      onChange={(event) =>\n                                        this.handleChange(\n                                          event,\n                                          \"image_title\",\n                                          index,\n                                          e.attribute_name,\n                                          e.dataType,\n                                          e.default\n                                        )\n                                      }\n                                    />\n                                  </form>\n                                </div>\n                              </div>\n                              {this.state.touch &&\n                              this.props.imgList[\n                                _.findIndex(this.props.imgList, [\n                                  \"order\",\n                                  e.order.toString(),\n                                ])\n                              ] != undefined ? (\n                                this.props.imgList[\n                                  _.findIndex(this.props.imgList, [\n                                    \"order\",\n                                    e.order.toString(),\n                                  ])\n                                ].value == \"\" ? (\n                                  <>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-4\"></div>\n                                      <div class=\"col-lg-8\">\n                                        <div className=\"input-feedback-tik\">\n                                          Please enter the {e.attribute_name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please enter the {e.attribute_name}\n                                    </div>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                        if (e.dataType == \"Image\") {\n                          return (\n                            <div class=\"col-lg-6\">\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\">\n                                  <h3\n                                    style={{ marginTop: \"10px\" }}\n                                    class=\"f-16 f-b\"\n                                  >\n                                    {e.attribute_name}\n                                  </h3>\n                                </div>\n                                <div class=\"col-lg-8\">\n                                  <form\n                                    onSubmit={(e) => {\n                                      e.preventDefault();\n                                    }}\n                                  >\n                                    <div class=\"custom-file\">\n                                      <input\n                                        type=\"file\"\n                                        disabled\n                                        class=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        onChange={(event) =>\n                                          this.handleChange(\n                                            event,\n                                            \"image_title\",\n                                            index,\n                                            e.attribute_name,\n                                            e.dataType,\n                                            e.default\n                                          )\n                                        }\n                                      />\n                                      <label\n                                        class=\"custom-file-label f-m\"\n                                        for=\"customFile\"\n                                      >\n                                        {this.props.imageData[\n                                          _.findIndex(this.props.imageData, [\n                                            \"order\",\n                                            e.order.toString(),\n                                          ])\n                                        ] != undefined\n                                          ? _.truncate(\n                                              this.props.imageData[\n                                                _.findIndex(\n                                                  this.props.imageData,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].value,\n                                              { length: 12 }\n                                            )\n                                          : this.props.imgList[\n                                              _.findIndex(this.props.imgList, [\n                                                \"order\",\n                                                e.order.toString(),\n                                              ])\n                                            ] != undefined\n                                          ? _.truncate(\n                                              this.props.imgList[\n                                                _.findIndex(\n                                                  this.props.imgList,\n                                                  [\"order\", e.order.toString()]\n                                                )\n                                              ].fileName,\n                                              { length: 12 }\n                                            )\n                                          : \"No file selected\"}\n                                      </label>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                              {this.props.imgList[index] != undefined ? (\n                                (\n                                  this.props.imgList[index].value == \"\" &&\n                                  (this.props.imageData[index] != undefined\n                                    ? this.props.imageData[index].value == \"\"\n                                    : true) ? (\n                                    <>\n                                      <div class=\"row\">\n                                        <div class=\"col-lg-4\"></div>\n                                        <div class=\"col-lg-8\">\n                                          <div className=\"input-feedback-tik\">\n                                            Please enter the {e.attribute_name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </>\n                                  ) : (\n                                    this.props.imageData[index] &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"jpeg\") &&\n                                    !this.props.imageData[index].value\n                                      .split(\".\")\n                                      .includes(\"png\")\n                                  )\n                                ) ? (\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Only jpg,jpeg,png files are supported\n                                      </div>\n                                    </div>\n                                  </div>\n                                ) : null\n                              ) : this.state.submit ? (\n                                <>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-4\"></div>\n                                    <div class=\"col-lg-8\">\n                                      <div className=\"input-feedback-tik\">\n                                        Please enter the {e.attribute_name}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </>\n                              ) : null}\n                            </div>\n                          );\n                        }\n                      })}\n                      {/* {sortedMain.map((e, index) => {\n                       \n                      })} */}\n                    </div>\n                  </div>\n                  <hr />\n\n                  <h3 class=\"f-20 f-b\">Tee Details</h3>\n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-4\">\n                            <h3 class=\"f-16 f-b\" style={{ marginTop: \"12px\" }}>\n                              Email Address\n                            </h3>\n                          </div>\n                          <div class=\"col-lg-8\">\n                            <form\n                              onSubmit={(e) => {\n                                e.preventDefault();\n                              }}\n                              class=\"form-group createDoc\"\n                            >\n                              <CreatableSelect\n                                isMulti\n                                isDisabled\n                                onChange={this.handleTeeChange}\n                                options={this.props.reciverList}\n                                value={this.props.reciverDraftList}\n                              />\n                            </form>\n                          </div>\n                        </div>\n\n                        {this.state.submit ? (\n                          this.props.reciverDraftList != null ? (\n                            this.props.reciverDraftList.length == 0 ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      Please select the email\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : this.state.error ? (\n                              <>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-4\"></div>\n                                  <div class=\"col-lg-8\">\n                                    <div className=\"input-feedback-tik\">\n                                      {this.state.errormessage}\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            ) : null\n                          ) : (\n                            <>\n                              <div class=\"row\">\n                                <div class=\"col-lg-4\"></div>\n                                <div class=\"col-lg-8\">\n                                  <div className=\"input-feedback-tik\">\n                                    Please select the email\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          )\n                        ) : this.state.error ? (\n                          <>\n                            <div class=\"row\">\n                              <div class=\"col-lg-4\"></div>\n                              <div class=\"col-lg-8\">\n                                <div className=\"input-feedback-tik\">\n                                  {this.state.errormessage}\n                                </div>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n        {MobileViewPoppup == true ? (\n          <DraftMobileView\n            closePopup={this.closeMobilePopup}\n            history={this.props.history}\n            imageData={this.props.imageData}\n            imgList={this.props.imgList}\n            draft={this.props.draftDetailSuccess}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  firstName: state.Profile.firstName,\n  templateDetail: state.Template.templateDetail,\n  metaData: state.Tik.metaData,\n  reciverData: state.Tik.reciverData,\n  createTikSuccess: state.Tik.createTikSuccess,\n  error: state.Auth.error,\n  document: state.Profile.document,\n  roledocument: state.Profile.Roledocument,\n  draftDetailSuccess: state.Tik.draftDetailSuccess,\n  imgList: state.Tik.imgList,\n  imageData: state.Tik.image,\n  imgListData: state.Tik.imgListData,\n  reciverList: state.Tik.reciverList,\n  reciverDraftList: state.Tik.reciverDraftList,\n  saveDraftSuccess: state.Tik.saveDraftSuccess,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  createTikEdit: (data) => dispatch(actions.createTikEdit(data)),\n  createTik: (payload) => dispatch(actions.createTik(payload)),\n  reciverListInfo: () => dispatch(actions.reciverList()),\n  errorClear: () => dispatch(actions.errorClear()),\n  saveDraft: (payload) => dispatch(actions.saveDraft(payload)),\n  imgListEdit: (payload) => dispatch(actions.imgListEdit(payload)),\n  imageEdit: (payload) => dispatch(actions.imageEdit(payload)),\n  reciverDraft: (payload) => dispatch(actions.reciverDraft(payload)),\n  reciverDraftEdit: (payload) => dispatch(actions.reciverDraftEdit(payload)),\n  draftDtail: (data) => dispatch(actions.draftDtail(data)),\n  addMetaData: (data) => dispatch(actions.addMetaData(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewDraft);\n","C:\\react-main\\src\\container\\Template\\TemplateView.jsx",["1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  WithLayoutContainer,\n  TextArea,\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport _ from \"lodash\";\nimport { imageMapperTemplate } from '../../constants/Mapper.js';\n\nclass TemplateView extends Component {\n  state = {\n    editFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    deleteData: {},\n    addPopupSuccess: false,\n    viewFlag: false,\n    viewData: {},\n    showSuccess: false,\n    // addPopupLoader: false\n  };\n  editButtonOnClick = (data) => {\n    // this.props.roleInitialization();\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      editFlag: true,\n      editData: data,\n    });\n  };\n\n  editClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      editFlag: false,\n    });\n  };\n  deleteClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      deleteFlag: false,\n      deleteData: {},\n    });\n  };\n\n  deleteButtonOnClick = (data) => {\n    // this.props.roleInitialization();\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      deleteFlag: true,\n      deleteData: data,\n    });\n  };\n\n  confirmDelete = () => {\n    const { deleteData } = this.state;\n    const templateId = deleteData._id;\n    this.props.deleteTemplate({ templateId });\n  };\n\n  addRoles = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      addFlag: true,\n    });\n  };\n  addClosePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      addFlag: false,\n    });\n  };\n\n  handleSubmit = (data) => {\n    this.props.addRoleInList(data);\n  };\n\n  submitEditData = (data) => {\n    this.props.editRoleInList(data);\n  };\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n  };\n  successPopup = () => {\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      editData: {},\n      deleteData: {},\n      viewFlag: false,\n      SuccessPopupFlag: true,\n    });\n  };\n\n  successPopupClosePopup = () => {\n    this.props.roleInitialization();\n    this.setState({\n      addFlag: false,\n      editFlag: false,\n      deleteFlag: false,\n      addFlag: false,\n      viewFlag: false,\n      editData: {},\n      deleteData: {},\n      message: \"\",\n      SuccessPopupFlag: false,\n    });\n  };\n\n  closeViewPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      viewFlag: false,\n      viewData: {},\n    });\n  };\n  componentDidMount() {\n    const tempId = JSON.parse(localStorage.getItem('templateId'))\n    this.props.getTemplateDetail({ templateId: tempId, whiteList: '' })\n  }\n\n  editButtonOnClick = (data) => {\n    this.props.history.push('editTemp', { data });\n  }\n\n  render() {\n    let attr = [];\n    let thumbnail = [];\n    let text = [];\n    let main = [];\n    Object.keys(this.props.templateDetail).map((e) => {\n      if (e == \"attribute\") {\n        this.props.templateDetail[\"attribute\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"image\") {\n        this.props.templateDetail[\"image\"].map((i) => {\n          main.push(i);\n        });\n      }\n      if (e == \"text\") {\n        this.props.templateDetail[\"text\"].map((i) => {\n          main.push(i);\n        });\n      }\n    });\n    let sortedMain = _.sortBy(main, [\"order\"]);\n    sortedMain.map((e) => {\n      Object.keys(e).map((i) => {\n        if (i == \"attribute_name\") {\n          attr.push(e);\n        }\n      });\n    });\n    if (this.props.template) {\n      if (this.props.template.view == false && this.props.roletemplate.view == false) {\n        this.props.history.push('/template')\n      }\n    }\n    return (\n      <WithLayoutContainer>\n        <div id=\"createTemp\" class=\"wrapper wrapper-content createTemp viewTemp\">\n          <div class=\"row\" >\n            <div class=\"col-xl-12\">\n              <div class=\"containerBox p-0\">\n                <div class=\"row\" id='viewTemp'>\n                  <div class=\"col-xl-12 col-lg-12 col-sm-12 border-right py-4 pl-5\">\n                    <div class=\"table-title d-flex justify-content-between mb-2\">\n                      <h2 class=\"f-b my-0\">View Template</h2>\n                      {this.props.template == null || this.props.template.update ? <a className={'btn-edit-temp btn-org btn mr-4'} onClick={() => this.editButtonOnClick(this.props.templateDetail)}>Edit Template</a> : null}\n                    </div>\n                    <div\n                      class=\"fixHeight\"\n                      style={{\n                        minHeight: \"calc(100vh - 280px)\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <ul class=\"slides\">\n                        <li class=\"slide slide1\">\n                          <div class=\"org-border br-6 p-3 bg-white\">\n                            <div class=\"row mb-3 \">\n                              <div class=\"col-lg-6 d-flex flex-wrap\">\n                                <label class=\"f-16 f-b\">Template Name</label>\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control h-40 f-16 f-m w-70 mb-3\"\n                                  value={\n                                    this.props.templateDetail\n                                      .template_name\n                                  }\n                                  placeholder=\"Enter Template Name\"\n                                  disabled\n                                />\n                              </div>\n                              <div class=\"col\"></div>\n                            </div>\n                            <div class=\"row mb-3 \">\n                              <div class=\"col-lg-6 d-flex flex-wrap\">\n                                <label class=\"f-16 f-b\">Template Type</label>\n                                <div class=\"input-group w-70\">\n                                  <select class=\"acceptance custom-select f-16 f-m h-40 border-0 box-shd\" disabled>\n                                    <option\n                                      value={\n                                        this.props.templateDetail\n                                          .template_type\n                                      }\n                                    >\n                                      {\n                                        this.props.templateDetail\n                                          .template_type\n                                      }\n                                    </option>\n                                  </select>\n                                </div>\n                              </div>\n                              <div class=\"col next-margin d-flex\">\n                                <form class=\"form-group d-inline-block\">\n                                  <div class=\"custom-file edit-thum\">\n                                    <img class=\"img-fluid image-circle tempLogo mr-3 temp-Image\" src={imageMapperTemplate[this.props.templateDetail.template_type]} />\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                            <div class=\"custom-control custom-checkbox check-dipend\">\n                              <input\n                                type=\"checkbox\"\n                                class=\"custom-control-input\"\n                                id=\"customChec1k1\"\n                                name=\"example1\"\n                                checked={\n                                  this.props.templateDetail\n                                    .isAcceptanceDocument\n                                }\n                                disabled\n                              />\n                              <label\n                                class=\"custom-control-label f-16 f-m pl-2\"\n                                for=\"customChec1k1\"\n                              >\n                                Required acceptance\n                              </label>\n                            </div>\n                          </div>\n                        </li>\n                        {sortedMain.map((e) => {\n                          return Object.keys(e).map((i) => {\n                            if (i == \"attribute_name\") {\n                              return (\n                                <li class=\"slide slide2\">\n                                  <div class=\"org-border br-6 p-3 bg-white\">\n                                    <div class=\"row mb-3 \">\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                        <label class=\"f-16 f-b\">\n                                          Attribute Name\n                                        </label>\n                                        <input\n                                          type=\"text\"\n                                          class=\"form-control h-40 f-16 f-m w-70\"\n                                          value={e.attribute_name}\n                                          placeholder=\"Enter Attribute Name\"\n                                          disabled\n                                        />\n                                      </div>\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                        <label class=\"f-16 f-b\">\n                                          Data Type\n                                        </label>\n                                        <div class=\"input-group w-70\">\n                                          <select class=\"custom-select f-16 f-m h-40 border-0 box-shd\" disabled>\n                                            <option value={e.dataType}>\n                                              {e.dataType}\n                                            </option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                      {e.dataType === 'Text' ?\n                                        <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                          <label className=\"f-16 f-b\">Description</label>\n                                          <div className=\"input-group w-70\">\n                                            <TextArea\n                                              placeholder=\"Type here...\"\n                                              rows={3}\n                                              value={e.value || ''}\n                                            />\n                                          </div>\n                                        </div> : ''}\n                                    </div>\n                                    <div class=\"custom-control custom-checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input\"\n                                        id=\"customChec1k11\"\n                                        name=\"example1\"\n                                        checked={(e.dataType === 'Image' || e.dataType === 'Qr') ? e.default : e.include_in_thumbnail}\n                                        disabled\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-16 f-m pl-2\"\n                                        for=\"customChec1k11\"\n                                      >\n                                        {(e.dataType === 'Image' || e.dataType === 'Qr') ? \"Set as Default\" : 'Include in thumbnail'}\n                                      </label>\n                                    </div>\n                                  </div>\n                                </li>\n\n                              );\n                            }\n                            if (i == \"title\") {\n                              return (\n                                <li class=\"slide slide4\">\n                                  <div class=\"org-border br-6 p-3 bg-white\">\n                                    <div class=\"row mb-3 \">\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3 align-content-lg-start\">\n                                        <label class=\"f-16 f-b\">Title</label>\n                                        <input\n                                          type=\"text\"\n                                          class=\"form-control h-40 f-16 f-m w-70\"\n                                          value={e.title}\n                                          placeholder=\"Enter Attribute Name\"\n                                          disabled\n                                        />\n                                      </div>\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                        <label class=\"f-16 f-b\">\n                                          Description\n                                        </label>\n                                        <div class=\"input-group w-70\">\n                                          <textarea\n                                            rows=\"3\"\n                                            class=\"form-control\"\n                                            placeholder=\"Type here...\"\n                                            disabled\n                                          >\n                                            {e.description}\n                                          </textarea>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    {/* <div class=\"custom-control custom-checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input\"\n                                        id=\"customChec1k11\"\n                                        name=\"example1\"\n                                        checked={e.include_in_thumbnail}\n                                        disabled\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-16 f-m pl-2\"\n                                        for=\"customChec1k11\"\n                                      >\n                                        Include in Thumbnail\n                                      </label>\n                                    </div> */}\n                                  </div>\n                                </li>\n                              );\n                            }\n                            if (i == \"image_title\") {\n                              return (\n                                <li class=\"slide slide3\">\n                                  <div class=\"org-border br-6 p-3 bg-white\">\n                                    <div class=\"row mb-3 \">\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                        <label class=\"f-16 f-b\">\n                                          Thumbnail Title\n                                        </label>\n                                        <input\n                                          type=\"text\"\n                                          class=\"form-control h-40 f-16 f-m w-70\"\n                                          value={e.image_title}\n                                          placeholder=\"Enter Thumbnail Title\"\n                                          disabled\n                                        />\n                                      </div>\n                                      <div class=\"col-lg-6 d-flex flex-wrap mb-3\">\n                                        <label class=\"f-16 f-b\">\n                                          Data Type\n                                        </label>\n                                        <div class=\"input-group w-70\">\n                                          <select class=\"custom-select f-16 f-m h-40 border-0 box-shd\" disabled>\n                                            <option value={e.dataType} selected>\n                                              {e.dataType}\n                                            </option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    {/* <div class=\"custom-control custom-checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        class=\"custom-control-input w-70\"\n                                        id=\"customChec1k11\"\n                                        name=\"example1\"\n                                        checked={e.include_in_thumbnail}\n                                        disabled\n                                      />\n                                      <label\n                                        class=\"custom-control-label f-16 f-m pl-2\"\n                                        for=\"customChec1k11\"\n                                      >\n                                        Include in Thumbnail\n                                      </label>\n                                    </div> */}\n                                  </div>\n                                </li>\n                              );\n                            }\n                          });\n                        })}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer >\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    templateDetail: state.Template.templateDetail,\n    template: state.Profile.template,\n    roletemplate: state.Profile.Roletemplate,\n  };\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTemplateListInfo: (payload) => dispatch(actions.getTemplateListInfo(payload)),\n  deleteTemplate: (data) => dispatch(actions.deleteTemplate(data)),\n  getTemplateDetail: (data) => dispatch(actions.getTemplateDetail(data)),\n  templateInitialization: () => dispatch(actions.templateInitialization()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateView);\n","C:\\react-main\\src\\container\\Template\\editTemplate.jsx",["1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable no-undef */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React, { Component } from 'react';\nimport {\n  Formik, Form, FieldArray,\n} from 'formik';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  WithLayoutContainer,\n  SuccessPopup,\n} from '../../component/index.jsx';\nimport DragAndDrop from './DragDrop.jsx';\nimport StaticTemplate from './StaticTemplate.jsx';\nimport createTemplateSchema from '../../schema/createTemplateSchema.js';\nimport RecentAttribute from './RecentAttribute.jsx';\nimport * as actions from '../../actions';\nimport LivePreview from './LivePreview.jsx';\nimport Loader from '../../component/Loader.jsx';\nimport { convertTemplateDataFromData } from '../../helper/utility.js';\nimport moment from 'moment';\n\nlet interval = '';\nlet checkInternal = false;\nlet autoSaveVar = false;\nclass EditTemlate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: false,\n      selectTemplate: ['Attribute', 'Thumbnail', 'Text'],\n      addFlag: false,\n      recentAttributeFlag: true,\n      attribute: [],\n      successFlag: true,\n      SuccessPopupFlag: true,\n      autoSaveFlag: props.templateObj && props.templateObj.templateDetailsInfo && props.templateObj.templateDetailsInfo.autoSave,\n      autoSaveData: '',\n      formData: '',\n      checkDetailsLoader: false,\n      templateId: '',\n      autoSaveFlagCheck: false,\n      autoSaveLoader: false,\n      checkAutoSave: false,\n      checkAutoSaveBtn: false,\n    };\n    this.wrapperRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n\n    this.buttonRef = React.createRef();\n    this.getFormData = this.getFormData.bind(this);\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.setState({\n        addFlag: false,\n      });\n    }\n  }\n\n  getTemplateItem = (item) => {\n    const { template } = this.state;\n    const temp1 = template;\n\n    temp1.push({\n      type: item.toLowerCase(),\n      attribute_name: '',\n      attribute_dropdown: '',\n      include_in_thumbnail: '',\n    });\n\n    this.setState({\n      template: temp1,\n      addFlag: false,\n    });\n  }\n\n  addFlag = () => {\n    this.setState({\n      addFlag: !this.state.addFlag,\n    });\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    const { templateObj } = this.props;\n    const { templateUpdate, templateDetailsInfo, autoSaveSuccess } = templateObj;\n    const { templateId, autoSaveFlag } = this.state;\n\n    if (this.props !== prevProps) {\n      if (templateUpdate === true) {\n        this.props.history.push('template');\n      }\n      if (templateObj !== '' && templateDetailsInfo !== null) {\n        if (templateDetailsInfo.autoSave === true && checkInternal === false) {\n          interval = setInterval(() => {\n            this.setState({\n              autoSaveFlagCheck: true,\n              // autoSaveLoader: false,\n            }, () => {\n              this.buttonRef.current.click();\n            });\n          }, 60000);\n          checkInternal = true;\n        } else if ((templateDetailsInfo.autoSave === false || templateDetailsInfo.autoSave === undefined) && checkInternal === true) {\n          clearInterval(interval);\n          checkInternal = false;\n          this.setState({\n            autoSaveFlagCheck: false,\n          });\n        } else { }\n      }\n\n      if (autoSaveSuccess === true) {\n        this.props.detailsTemplateListInfo(templateId);\n        this.props.getTemplateListInfo({ search: '' });\n        this.props.templateInitialization();\n      }\n    }\n    if (this.props.error) {\n      this.setState({\n        autoSaveFlag: !autoSaveFlag,\n      });\n      this.props.errorClear();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(interval);\n    checkInternal = false;\n    this.setState({\n      autoSaveFlag: false,\n    });\n    this.props.templateInitialization();\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  successPopup = () => {\n    this.setState({\n      addFlag: false,\n      successFlag: true,\n      SuccessPopupFlag: true,\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.templateInitialization();\n\n    this.setState({\n      addFlag: false,\n      SuccessPopupFlag: false,\n    });\n  }\n\n  formateTemplateData = (values) => {\n    const { templateObj } = this.props;\n    const { templateDetailsInfo } = templateObj;\n    const { _id, acceptance_form } = templateDetailsInfo;\n    const { autoSaveFlag } = this.state;\n\n    const {\n      attribute, template_name, template_type, isAcceptanceDocument, thumbnail,\n    } = values;\n\n    let finalObj = {};\n\n    if (attribute && attribute.length > 0) {\n      const temp1 = attribute.map((item, key) => ({ ...item, order: key + 1 }));\n\n      finalObj = temp1.reduce((att, a) => {\n        att[a.type] = att[a.type] || [];\n\n        if (a.type === 'attribute') {\n          if (a.attribute_dropdown === 'Text') {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              include_in_thumbnail: a.include_in_thumbnail,\n              value: a.description,\n            });\n          } else if (a.attribute_dropdown === 'Image' || a.attribute_dropdown === 'Qr') {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              default: a.include_in_thumbnail,\n            });\n          } else {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              include_in_thumbnail: a.include_in_thumbnail,\n            });\n          }\n        }\n        return att;\n      }, Object.create(null));\n    }\n\n    !('attribute' in finalObj) && (finalObj.attribute = []);\n\n    finalObj.autoSave = autoSaveFlag || false;\n    finalObj.template_name = template_name || '';\n    finalObj.template_type = template_type || '';\n    finalObj.isAcceptanceDocument = isAcceptanceDocument || false;\n    finalObj.templateId = _id;\n    finalObj.thumbnail = thumbnail;\n\n    if (finalObj.isAcceptanceDocument === true && acceptance_form !== '') {\n      finalObj.acceptance_form = acceptance_form || '';\n    }\n    return finalObj;\n  }\n\n  handleSubmit = (values) => {\n    const { autoSaveFlagCheck, autoSaveFlag } = this.state;\n    const { attribute } = values;\n    const { templateObj } = this.props;\n    const { templateDetailsInfo } = templateObj;\n    const { _id, acceptance_form } = templateDetailsInfo;\n\n    let finalObj = {};\n    if (attribute.length === 0) {\n      toast.error('At least one attribute is required');\n      this.setState({\n        autoSaveFlag: !autoSaveFlag,\n      });\n    } else {\n      finalObj = this.formateTemplateData(values);\n      if (autoSaveFlagCheck === true) {\n        if (finalObj.isAcceptanceDocument === true && !acceptance_form) {\n          toast.error('Acceptance tik is required');\n          this.setState({\n            autoSaveFlag: !autoSaveFlag,\n          });\n        } else {\n          autoSaveVar = true;\n          const finalData = convertTemplateDataFromData(finalObj);\n          this.props.autoSaveTemplate(finalData);\n        }\n        this.setState({\n          autoSaveFlagCheck: false,\n        });\n      } else {\n        if (finalObj.isAcceptanceDocument === true) {\n          this.props.history.push('/selectAcceptanceTemp', { finalObj, editFlag: true });\n        } else {\n          const finalData = convertTemplateDataFromData(finalObj);\n          this.props.editTemplate(finalData);\n        }\n      }\n      autoSaveVar = false;\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n    if (this.props.location.state && this.props.location.state.data) {\n      const { data } = this.props.location.state;\n      const { _id } = data;\n      this.setState({\n        templateId: _id,\n      }, () => {\n        this.props.detailsTemplateListInfo(_id);\n      });\n    } else {\n      const { finalObj } = this.props.location.state;\n      const { templateId } = finalObj;\n      this.setState({\n        templateId,\n      }, () => {\n        this.props.detailsTemplateListInfo(templateId);\n      });\n    }\n\n    this.setState({\n      checkDetailsLoader: true,\n    });\n\n    this.props.recentAttributeListInfo();\n    this.props.errorClear();\n\n    const { templateObj } = this.props;\n    const { templateDetailsInfo } = templateObj;\n\n    if (templateDetailsInfo !== null) {\n      this.setState({\n        autoSaveFlag: templateDetailsInfo.autoSave,\n      });\n    }\n  }\n\n  handleTabAttribute = (tab) => {\n    if (tab === 'recent') {\n      this.setState({\n        recentAttributeFlag: true,\n      });\n    } else {\n      this.setState({\n        recentAttributeFlag: false,\n      });\n    }\n  }\n\n  inilitizeTempValue = (templateDetailsInfo) => {\n    const {\n      attribute, image, text,\n    } = templateDetailsInfo;\n\n    const finalAttribute = [];\n    if (templateDetailsInfo !== null) {\n      const result = _.unionBy(image, text, attribute);\n      const temp2 = _.orderBy(result, ['_id'], ['asc']);\n\n      templateDetailsInfo !== null && temp2.length > 0 && temp2.map((item) => {\n        let typeAttribute = '';\n        if (item.image_title) {\n          typeAttribute = 'image';\n        } else if (item.attribute_name) {\n          typeAttribute = 'attribute';\n        } else {\n          typeAttribute = 'text';\n        }\n        finalAttribute.push({\n          type: typeAttribute,\n          attribute_name: item.attribute_name || item.image_title || item.title || '',\n          attribute_dropdown: item.dataType || '',\n          include_in_thumbnail: (item.dataType === 'Image' || item.dataType === 'Qr' ? item.default : item.include_in_thumbnail) || false,\n          description: item.value || '',\n        });\n      });\n    }\n\n    return finalAttribute;\n  }\n\n  handleAutoSaveCheckbox = (checked) => {\n    if (checked === true) {\n      this.setState({\n        checkAutoSave: checked,\n        autoSaveFlag: checked,\n        autoSaveFlagCheck: true,\n      }, () => {\n        this.setState({\n          checkAutoSaveBtn: true,\n        });\n        this.buttonRef.current.click();\n        // this.handleCheckboxAutoSave(checked);\n      });\n    }\n  }\n\n  handleCheckboxAutoSave = (checked) => {\n    this.setState({\n      autoSaveFlag: checked,\n      autoSaveFlagCheck: true,\n      autoSaveLoader: true,\n    }, () => {\n      if (checked === false) {\n        this.setState({\n          checkAutoSaveBtn: true,\n        });\n      }\n      this.buttonRef.current.click();\n    });\n  }\n\n  getFormData = (formData) => {\n    const finalObj = this.formateTemplateData(formData);\n    const finalData = convertTemplateDataFromData(finalObj);\n    this.props.autoSaveTemplate(finalData);\n  };\n\n  render() {\n    const {\n      recentAttributeFlag, SuccessPopupFlag, checkDetailsLoader, autoSaveFlag, checkAutoSave, checkAutoSaveBtn,\n    } = this.state;\n    const { templateObj, location } = this.props;\n    const { state } = location;\n    const {\n      recentAttribute, recentAttributeLoader, successPopup, templateDetailsInfo, detailsLoader, successLoader, autoSaveSuccess, autoSaveData\n    } = templateObj;\n    const finalAttributeValue = {};\n    if (state && state.finalObj && state.selectTemp == true) {\n      const {\n        isAcceptanceDocument, template_name, template_type, thumbnail,\n      } = state.finalObj;\n\n      let temp1 = [];\n      temp1 = this.inilitizeTempValue(state.finalObj);\n\n      finalAttributeValue.template_name = template_name;\n      finalAttributeValue.template_type = template_type;\n      finalAttributeValue.isAcceptanceDocument = isAcceptanceDocument || false;\n      finalAttributeValue.thumbnail = thumbnail || '';\n      finalAttributeValue.attribute = temp1;\n    } else if (templateDetailsInfo !== null) {\n      const {\n        isAcceptanceDocument, template_name, template_type, thumbnail,\n      } = templateDetailsInfo;\n      let temp1 = [];\n      temp1 = this.inilitizeTempValue(templateDetailsInfo);\n      finalAttributeValue.template_name = template_name;\n      finalAttributeValue.template_type = template_type;\n      finalAttributeValue.isAcceptanceDocument = isAcceptanceDocument || false;\n      finalAttributeValue.thumbnail = thumbnail || '';\n      finalAttributeValue.attribute = temp1;\n    }\n    let time = '';\n    if (autoSaveData !== null || (templateDetailsInfo !== null && templateDetailsInfo.autoSave)) {\n      if (autoSaveData === null) {\n        time = moment(templateDetailsInfo.createdAt).fromNow();\n      } else {\n        time = moment(autoSaveData.createdAt).fromNow();\n      }\n    }\n    return (\n      <WithLayoutContainer>\n        <div id=\"createTemp\" className=\"wrapper wrapper-content createTemp\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox p-0\">\n                <div className=\"row\">\n                  <Formik\n                    enableReinitialize={templateDetailsInfo !== null}\n                    initialValues={finalAttributeValue}\n                    validationSchema={createTemplateSchema}\n                    onSubmit={this.handleSubmit}\n                    render={({\n                      values,\n                      errors,\n                      touched,\n                      handleSubmit,\n                      setFieldValue,\n                      setFieldTouched,\n                      resetForm,\n                    }) => (\n                        <>\n                          <FieldArray\n                            name=\"attribute\"\n                            render={(arrayHelpers) => (\n                              <>\n                                <div id=\"createTemplateleft\" className=\"col-xl-9 col-lg-8 col-sm-12 border-right py-4 pl-5\">\n                                  <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                                    <ul className=\"ks-cboxtags\">\n                                      <li>\n                                        {autoSaveVar && <i className=\"fa fa-refresh fa-spin\" />\n                                          || (\n                                            <>\n                                              <input\n                                                type=\"checkbox\"\n                                                id=\"checkboxOne\"\n                                                value=\"\"\n                                                onChange={(e) => this.handleCheckboxAutoSave(e.target.checked)}\n                                                checked={autoSaveFlag === null ? templateDetailsInfo !== null && templateDetailsInfo.autoSave : autoSaveFlag}\n                                              />\n                                              <label htmlFor=\"checkboxOne\">\n                                                Auto Save\n                                            </label>\n                                            </>\n                                          )}\n                                      </li>\n                                      {(autoSaveData !== null || (templateDetailsInfo !== null && templateDetailsInfo.autoSave)) &&\n                                        <li>\n                                          <span>Last saved {time}</span>\n                                        </li>}\n                                    </ul>\n                                    <h2 className=\"f-b m-0\">Edit Template </h2>\n\n                                    <button\n                                      type=\"submit\"\n                                      onClick={handleSubmit}\n                                      className=\"btn-primary p-2 next mr-15 templateButton\"\n                                      disabled={successLoader}\n                                      ref={this.buttonRef}\n                                    >\n                                      {successLoader ? <i className=\"fa fa-refresh fa-spin\" /> : values.isAcceptanceDocument == false ? 'Submit' : 'Next'}\n                                    </button>\n                                  </div>\n\n                                  {(detailsLoader && checkDetailsLoader === false) && <Loader /> || (\n                                    <div className=\"fixHeight\" style={{ minHeight: 'calc(100vh - 280px)', position: 'relative' }}>\n                                      <Form>\n                                        <ul className=\"slides\">\n                                          <StaticTemplate\n                                            setFieldTouched={setFieldTouched}\n                                            values={values}\n                                            errors={errors}\n                                            touched={touched}\n                                            setFieldValue={setFieldValue}\n                                            handleCheckboxAutoSave={this.handleCheckboxAutoSave}\n                                            handleAutoSaveCheckbox={() => this.handleAutoSaveCheckbox}\n                                            checkAutoSave={checkAutoSave}\n                                            autoSaveFlag={autoSaveFlag}\n                                            autoSaveData={autoSaveData}\n                                            checkAutoSaveBtn={checkAutoSaveBtn}\n                                          />\n                                          <div>\n                                            <DragAndDrop\n                                              data={values.attribute}\n                                              setFieldTouched={setFieldTouched}\n                                              values={values}\n                                              errors={errors}\n                                              touched={touched}\n                                              setFieldValue={setFieldValue}\n                                              arrayHelpers={arrayHelpers}\n                                              handleAutoSaveCheckbox={() => this.handleAutoSaveCheckbox}\n                                              checkAutoSave={checkAutoSave}\n                                              autoSaveFlag={autoSaveFlag}\n                                              autoSaveData={autoSaveData}\n                                              checkAutoSaveBtn={checkAutoSaveBtn}\n                                            />\n                                          </div>\n\n                                        </ul>\n                                      </Form>\n                                    </div>\n                                  )}\n                                  <div className=\"dropup puls-drop show\" ref={this.wrapperRef}>\n                                    <a\n                                      className=\"btn plus-btn f-24 text-center p-2\"\n                                      onClick={() => {\n                                        arrayHelpers.push({\n                                          type: 'attribute',\n                                          attribute_name: '',\n                                          attribute_dropdown: '',\n                                          include_in_thumbnail: false,\n                                          description: '',\n                                        });\n                                        this.setState({\n                                          addFlag: false,\n                                        });\n                                      }}\n                                    >\n                                      {' '}\n                                      <i className=\"fa fa-plus\" />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div id=\"editTemplateright\" className=\"col-xl-3 col-lg-4 col-sm-12\">\n                                  <ul className=\"nav nav-pills my-3 flex-wrap justify-content-center\" role=\"tablist\">\n                                    <li className=\"nav-item\">\n                                      <a className={`nav-link  ${recentAttributeFlag === true ? 'active' : ''}`} data-toggle=\"pill\" role=\"tab\" onClick={() => this.handleTabAttribute('recent')}>Recent Attributes</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                      <a className={`nav-link  ${recentAttributeFlag === true ? '' : 'active'}`} data-toggle=\"pill\" role=\"tab\" onClick={() => this.handleTabAttribute('live')}>Live Preview</a>\n                                    </li>\n                                  </ul>\n                                  <div className=\" recent-attribute-main-container\">\n                                    <div>\n                                      <div className=\"tab-content pr-3 br-6 mr-2\" style={{ maxHeight: 'calc(100vh - 320px)', overflowY: 'auto' }}>\n                                        {recentAttributeFlag === true\n                                          ? (\n                                            <RecentAttribute\n                                              recentAttribute={recentAttributeFlag}\n                                              recentAttributeLoader={recentAttributeLoader}\n                                              attribute={recentAttribute.length > 0 ? recentAttribute : []}\n                                              addRecentAttribute={(item) => {\n                                                const a = {\n                                                  type: 'attribute',\n                                                  attribute_name: item.attribute_name || item.image_title || item.title,\n                                                  attribute_dropdown: item.dataType,\n                                                  include_in_thumbnail: item.include_in_thumbnail,\n                                                  description: item.description,\n                                                };\n                                                arrayHelpers.push(a);\n                                              }}\n                                            />\n                                          )\n                                          : <LivePreview attribute={values.attribute} />}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            )}\n                          />\n                        </>\n                      )}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {SuccessPopupFlag === true && successPopup\n          ? <SuccessPopup msg={successPopup.msg} closePopup={this.successPopupClosePopup} history={this.props.history} />\n          : null}\n      </WithLayoutContainer>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  templateObj: state.Template,\n  error: state.Auth.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  recentAttributeListInfo: () => dispatch(actions.recentAttributeListInfo()),\n  createTemplate: (data) => dispatch(actions.createTemplate(data)),\n  detailsTemplateListInfo: (id) => dispatch(actions.detailsTemplateListInfo(id)),\n  editTemplate: (data) => dispatch(actions.editTemplate(data)),\n  autoSaveTemplate: (data) => dispatch(actions.autoSaveTemplate(data)),\n  templateInitialization: () => dispatch(actions.templateInitialization()),\n  errorClear: () => dispatch(actions.errorClear()),\n  getTemplateListInfo: (payload) => dispatch(actions.getTemplateListInfo(payload)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTemlate);\n","C:\\react-main\\src\\container\\Profile\\Invoice.jsx",["1284","1285","1286","1287","1288","1289","1290","1291","1292","1293"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  WithLayoutContainer,\n  Table,\n  SuccessPopup,\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { TransactionHistory } from \"../../constants/Mapper.js\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\nimport moment from \"moment\";\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\nclass Invoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataTable: {\n        titles: TransactionHistory,\n        data: [],\n      },\n    };\n  }\n  componentDidMount() {\n    const transId = JSON.parse(localStorage.getItem(\"transId\"));\n    // this.props.transactionDetail({Id: transId})\n    this.props.transactionDetail({ Id: \"\" });\n  }\n\n  render() {\n    const { transactionDetailSuccess } = this.props;\n    const Subdate = formatDate(\n      transactionDetailSuccess &&\n        transactionDetailSuccess.lastPlan.startOfSubscription\n    );\n    const expdate = formatDate(\n      transactionDetailSuccess &&\n        transactionDetailSuccess.lastPlan.endOfSubscription\n    );\n    const a = moment(\n      transactionDetailSuccess &&\n        transactionDetailSuccess.lastPlan.endOfSubscription\n    );\n    const b = moment(\n      transactionDetailSuccess &&\n        transactionDetailSuccess.lastPlan.startOfSubscription\n    );\n    const Validity = a.diff(b, \"month\");\n    console.log(transactionDetailSuccess);\n    return (\n      <WithLayoutContainer>\n        <div id=\"api\" class=\"wrapper wrapper-content\">\n          <div class=\"row\">\n            <div class=\"col-xl-12\">\n              <div class=\"containerBox\">\n                <div class=\" \">\n                  <div class=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                    <h2 class=\"f-b m-0\">Invoice Details</h2>\n                  </div>\n                  <div class=\"apiContent fixHeight\">\n                    <div class=\"row\">\n                      <div class=\"col-md-8\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Tor Name</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{`${\n                              transactionDetailSuccess &&\n                              transactionDetailSuccess.providerDetails.firstName\n                            } ${\n                              transactionDetailSuccess &&\n                              transactionDetailSuccess.providerDetails.lastName\n                            }`}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Email Address</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">\n                              {transactionDetailSuccess &&\n                                transactionDetailSuccess.providerDetails.email}\n                            </h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Subscription Date</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{Subdate}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Validity</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">\n                              {transactionDetailSuccess &&\n                                transactionDetailSuccess.lastPlan\n                                  .subscriptionPlanDetails.validity}\n                            </h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Expiration Date</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{expdate}</h4>\n                          </div>\n                        </div>\n                        {/* <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Auto Subscribe</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">Yes</h4>\n                          </div>\n                        </div> */}\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Payment Mode</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">\n                              {transactionDetailSuccess != '' ?\n                              transactionDetailSuccess.lastPlan.paymentMethod ==\n                                \"Free\"\n                                ? \"-\"\n                                : transactionDetailSuccess.lastPlan\n                                    .paymentMethod: '-'}\n                            </h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Payment ID</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">\n                              {transactionDetailSuccess &&\n                                transactionDetailSuccess.lastPlan._id}\n                            </h4>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {transactionDetailSuccess &&\n                      transactionDetailSuccess.subscriptionIds.map((e) => {\n                        return (\n                          <>\n                            {\" \"}\n                            <div class=\"row org-border my-2 mx-1 br-6 p-3\">\n                              <div class=\"col-lg-4\">\n                                <h4 class=\"f-16 f-b\">Product ID</h4>\n                                <h4 class=\"f-16 f-r\">{e._id}</h4>\n                              </div>\n                              <div class=\"col-lg-4\">\n                                <h4 class=\"f-16 f-b\">Product Name</h4>\n                                <h4 class=\"f-16 f-r\">\n                                  {e.subscriptionPlanDetails.planName}\n                                </h4>\n                              </div>\n                              <div class=\"col-lg-4\">\n                                <h4 class=\"f-16 f-b\">Amount</h4>\n                                <h4 class=\"f-16 f-r\">${e.totalCost}</h4>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })}\n\n                    <div class=\"row\">\n                      {/* <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Tax</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">$2</h4>\n                      </div> */}\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b txt-org\">Total Amount</h4>\n                   \n                      </div>\n            \n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-b txt-org\">\n                          $\n                          {transactionDetailSuccess &&\n                            transactionDetailSuccess.finalTotalCost}\n                        </h4>\n                        <div className=\"text-center w-100 mb-2 mt-4\">\n                  {transactionDetailSuccess &&\n                              transactionDetailSuccess.lastPlan.subscriptionPlanDetails.type == 'pay_per_use' &&  transactionDetailSuccess.finalTotalCost != 0 ?<span\n                    onClick={() => {\n                      this.props.history.push(\"/payment\");\n                      // this.setState({ freeTrialPopup: false });\n                      // localStorage.setItem(\"trialPop\", JSON.stringify(false));\n                    }}\n                    className=\"btn btn-primary w-20 f-18 f-b\"\n                  >\n                    Payment\n                  </span>:null}\n                </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactionList: state.Transaction.transactionList,\n    transactionDetailSuccess: state.Transaction.transactionDetailSuccess,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  transactionreq: () => dispatch(actions.transactionList()),\n  transactionDetail: (payload) => dispatch(actions.transactionDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoice);\n","C:\\react-main\\src\\container\\reports\\TikReport.jsx",["1294","1295","1296","1297","1298"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from 'react-csv';\nimport _ from 'lodash';\nimport { WithLayoutContainer, Reports } from '../../component/index.jsx';\nimport { staticLabel } from '../../constants/Constants.js';\nimport TikFilter from './TikFilter.jsx';\nimport * as actions from '../../actions';\nimport Loader from '../../component/Loader.jsx';\nimport moment from 'moment';\n\nclass TikReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reportsData: [],\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.tikReports(null);\n  }\n\n  render() {\n    const { reports } = staticLabel;\n    const {\n      title, totalNumberTik, averageTik,\n      totalNumberDay,\n      percentageChange, downloadCSV, tikReportsTitle, XAxiosTitle,\n    } = reports;\n    const { reportsTik, tabData } = this.props;\n    const { tikReportsData, tikReportsLoader } = reportsTik;\n    const {\n      totalDoc, avgPerDay, numberOfDays, percentageOfChange, report: reportsData,\n    } = tikReportsData;\n    let sortedReportData = '';\n\n    if (reportsData && reportsData.length > 0) {\n      sortedReportData = _.sortBy(reportsData, (dateObj) => new Date(dateObj._id));\n    }\n\n    let startDate = sortedReportData && sortedReportData.length > 0 && moment(sortedReportData[0]._id).format('MM/DD/YYYY');\n    let endDate = sortedReportData && sortedReportData.length > 0 && moment(sortedReportData[sortedReportData.length - 1]._id).format('MM/DD/YYYY');\n\n    // if (tabData == \"30day\") {\n    //   startDate = moment(startDate).format('MM/DD/YYYY');\n    //   endDate = moment(endDate).format('MM-DD');\n    // } else if (tabData == \"90day\") {\n    //   startDate = moment(startDate).format('MM-YYYY');\n    //   endDate = moment(endDate).format('MM-YYYY');\n    // } else {\n    //   startDate = moment(startDate).format('MM-YYYY');\n    //   endDate = moment(endDate).format('MM-YYYY');\n    // }\n    let finalCSVData = '';\n    if (reportsData && reportsData.length > 0) {\n      let reportCSVData = JSON.parse(JSON.stringify(reportsData));\n\n      finalCSVData = reportCSVData.map(function (obj) {\n        obj['totaltik'] = obj['total']; // Assign new key \n        delete obj['total']; // Delete old key \n        delete obj['createdDate']\n        return obj;\n      });\n    }\n\n    return (\n      <WithLayoutContainer>\n        <div id=\"docreport\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div id=\"changingContent\" className=\"containerBox\">\n                <div className=\"tikReport\">\n\n                  <>\n                    <div className=\"table-title\">\n                      <h2 className=\"f-b mb-4 mt-0\">{title}</h2>\n\n                      <TikFilter sortedReportData={sortedReportData} />\n                    </div>\n                    <div className=\"fixHeight p-0\" style={{ maxHeight: 'calc(100vh - 340px)' }}>\n                      <div className=\"tab-content mt-2\">\n                        {/* tab-content-all */}\n                        <div className=\"col tab-pane active\" id=\"30day\">\n                          {/* chart */}\n                          {tikReportsLoader && <Loader />\n                            || (\n                              <div\n                                id=\"chartdiv\"\n                                style={{\n                                  overflow: 'hidden', textAlign: 'left',\n                                }}\n                              >\n                                <Reports\n                                  reports={sortedReportData}\n                                  YAxisTitle={tikReportsTitle}\n                                  XAxisTitle={XAxiosTitle}\n                                />\n                              </div>\n                            )}\n                          {/* end chart */}\n                          <div className=\"row align-items-center mt-4 report-number-wrapper\">\n                            <div className=\"col-lg-8\">\n                              <div className=\"d-flex flex-wrap\">\n                                <div className=\"col-lg-4\">\n                                  <h3 className=\"f-b\">{totalNumberTik}</h3>\n                                </div>\n                                <div className=\"col-lg-2\">\n                                  {tikReportsData && totalDoc ? <h3>{totalDoc}</h3>:<h3 style={{marginLeft:'10px'}} className=\" \">-</h3>}\n                                </div>\n                                <div className=\"col-lg-4\">\n                                  <h3 className=\"f-b\">{averageTik}</h3>\n                                </div>\n                                <div className=\"col-lg-2\">\n                                  {tikReportsData && Math.round(avgPerDay)  ? <h3>{Math.round(avgPerDay)}</h3> :<h3 style={{marginLeft:'10px'}} className=\" \">-</h3>}\n                                </div>\n                              </div>\n                              <div className=\"d-flex flex-wrap\">\n                                <div className=\" col-lg-4\">\n                                  <h3 className=\"f-b \">{totalNumberDay}</h3>\n                                </div>\n                                <div className=\"col-lg-2 \">\n                                  {tikReportsData && numberOfDays ? <h3>{numberOfDays}</h3>:<h3 style={{marginLeft:'10px'}} className=\" \">-</h3>}\n                                </div>\n\n                                <div class=\"col-lg-6 d-flex flex-wrap from-to-data\">\n                                  <div class=\"col d-flex p-0\">\n                                    <h3 class=\"f-b \">From :</h3><span class=\"f-b f-20 mt-1\"> &nbsp;{startDate}</span>\n                                  </div>\n                                  <div class=\"col d-flex p-0\">\n                                    <h3 class=\"f-b \">To :</h3><span class=\"f-b f-20 mt-1\"> &nbsp;{endDate}</span>\n                                  </div>\n                                </div>\n                                {/* <div className=\"col-lg-4 \">\n                                  <h3 className=\"f-b \">{percentageChange}</h3>\n                                </div> */}\n                                {/* <div className=\"col-lg-2 \">\n                                  <h3 className=\" \">\n                                    {' '}\n                                    {tikReportsData && percentageOfChange || '-'}\n                                    {' '}\n                                    <i className=\"fas fa-arrow-up ml-2 \" style={{ color: '#13B75A' }} />\n                                  </h3>\n                                </div> */}\n                              </div>\n                            </div>\n                            <div className=\"col-lg-4\">\n                              {finalCSVData && finalCSVData.length > 0\n                                && <CSVLink data={finalCSVData} className=\"btn btn-org px-3 \" filename=\"tikData.csv\">{downloadCSV}</CSVLink>}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"tab-pane\" id=\"90day\">\n                          90 days\n                        </div>\n                        <div className=\"tab-pane \" id=\"1year\">\n                          1 year\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer >\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  reportsTik: state.Reports.tikReports,\n  tabData: state.Reports.tabData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  tikReports: (data) => dispatch(actions.tikReports(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TikReport);\n","C:\\react-main\\src\\container\\Template\\AddTemplate.jsx",["1299","1300","1301","1302","1303","1304","1305","1306","1307","1308"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable no-undef */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React, { Component } from 'react';\nimport {\n  Formik, Form, FieldArray,\n} from 'formik';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport {\n  WithLayoutContainer,\n  SuccessPopup,\n  Button,\n} from '../../component/index.jsx';\nimport DragAndDrop from './DragDrop.jsx';\nimport StaticTemplate from './StaticTemplate.jsx';\nimport createTemplateSchema from '../../schema/createTemplateSchema.js';\nimport RecentAttribute from './RecentAttribute.jsx';\nimport * as actions from '../../actions';\nimport LivePreview from './LivePreview.jsx';\nimport { convertTemplateDataFromData } from '../../helper/utility.js';\n\nlet interval = '';\nlet checkInternal = false;\nlet autoSaveVar = false;\nclass AddTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: false,\n      selectTemplate: ['Attribute', 'Thumbnail', 'Text'],\n      addFlag: false,\n      recentAttributeFlag: true,\n      attribute: [],\n      successFlag: true,\n      SuccessPopupFlag: true,\n      autoSaveFlag: false,\n      formData: '',\n      checkDetailsLoader: false,\n      autoSaveFlagCheck: false,\n      checkAutoSave: false,\n      checkAutoSaveBtn: false,\n    };\n    this.wrapperRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n\n    this.buttonRef = React.createRef();\n    this.getFormData = this.getFormData.bind(this);\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    const { templateObj } = this.props;\n    const {\n      templateUpdate, autoSaveSuccess, autoSaveData,\n    } = templateObj;\n    const { autoSaveFlag } = this.state;\n    if (this.props !== prevProps) {\n      if (templateUpdate === true) {\n        this.props.history.push('template');\n      }\n      if (templateObj !== '' && autoSaveData !== null) {\n        if (autoSaveData.autoSave === true && checkInternal === false) {\n          interval = setInterval(() => {\n            this.setState({\n              autoSaveFlagCheck: true,\n            }, () => {\n              this.buttonRef.current.click();\n            });\n          }, 60000);\n          checkInternal = true;\n        } else if ((autoSaveData.autoSave === false || autoSaveData.autoSave === undefined) && checkInternal === true) {\n          clearInterval(interval);\n          checkInternal = false;\n          this.setState({\n            autoSaveFlagCheck: false,\n          });\n          // eslint-disable-next-line no-empty\n        } else { }\n      }\n\n      if (autoSaveSuccess === true) {\n        this.props.getTemplateListInfo({ search: '' });\n        // this.props.templateInitialization();\n      }\n    }\n    if (this.props.error) {\n      this.setState({\n        autoSaveFlag: !autoSaveFlag,\n      });\n      this.props.errorClear();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(interval);\n    checkInternal = false;\n    this.setState({\n      autoSaveFlag: false,\n      autoSaveData: {},\n    });\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.setState({\n        addFlag: false,\n      });\n    }\n  }\n\n  getTemplateItem = (item) => {\n    const { template } = this.state;\n\n    const temp1 = template;\n\n    temp1.push({\n      type: item.toLowerCase(),\n      attribute_name: '',\n      attribute_dropdown: '',\n      include_in_thumbnail: '',\n    });\n\n    this.setState({\n      template: temp1,\n      addFlag: false,\n    });\n  }\n\n  successPopup = () => {\n    this.setState({\n      addFlag: false,\n      successFlag: true,\n      SuccessPopupFlag: true,\n    });\n  }\n\n  successPopupClosePopup = () => {\n    this.props.templateInitialization();\n\n    this.setState({\n      addFlag: false,\n      SuccessPopupFlag: false,\n    });\n  }\n\n  formateTemplateData = (values) => {\n    const { templateObj } = this.props;\n    const { autoSaveData } = templateObj;\n    const { autoSaveFlag } = this.state;\n\n    const {\n      attribute, template_name, template_type, isAcceptanceDocument, thumbnail,\n    } = values;\n\n    let finalObj = {};\n\n    if (attribute && attribute.length > 0) {\n      const temp1 = attribute.map((item, key) => ({ ...item, order: key + 1 }));\n\n      finalObj = temp1.reduce((att, a) => {\n        att[a.type] = att[a.type] || [];\n\n        if (a.type === 'attribute') {\n          if (a.attribute_dropdown === 'Text') {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              include_in_thumbnail: a.include_in_thumbnail,\n              value: a.description,\n            });\n          } else if (a.attribute_dropdown === 'Image' || a.attribute_dropdown === 'Qr') {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              default: a.include_in_thumbnail,\n            });\n          } else {\n            att[a.type].push({\n              order: a.order,\n              attribute_name: a.attribute_name,\n              dataType: a.attribute_dropdown,\n              include_in_thumbnail: a.include_in_thumbnail,\n            });\n          }\n        }\n\n        return att;\n      }, Object.create(null));\n    }\n\n    !('attribute' in finalObj) && (finalObj.attribute = []);\n    finalObj.autoSave = autoSaveFlag || false;\n    finalObj.template_name = template_name || '';\n    finalObj.template_type = template_type || '';\n    finalObj.isAcceptanceDocument = isAcceptanceDocument || false;\n    finalObj.thumbnail = thumbnail || '';\n\n    if (autoSaveData !== null) {\n      finalObj.templateId = autoSaveData._id || '';\n    }\n    // if (finalObj.isAcceptanceDocument === true) {\n    //   finalObj.acceptance_form = acceptance_form || '';\n    // }\n    return finalObj;\n  }\n\n  handleSubmit = (values) => {\n    const { autoSaveFlagCheck, autoSaveFlag } = this.state;\n    const { attribute } = values;\n    let finalObj = {};\n    if (attribute.length === 0) {\n      toast.error('At least one attribute is required');\n      this.setState({\n        autoSaveFlag: !autoSaveFlag,\n      });\n    } else {\n      finalObj = this.formateTemplateData(values);\n      if (autoSaveFlagCheck === true) {\n        if (finalObj.isAcceptanceDocument === true && finalObj.template_type !== 'Acceptance Tik') {\n          toast.error('Acceptance tik is required');\n          this.setState({\n            autoSaveFlag: !autoSaveFlag,\n          });\n        } else {\n          autoSaveVar = true;\n          const finalData = convertTemplateDataFromData(finalObj);\n          this.props.autoSaveTemplate(finalData);\n        }\n        this.setState({\n          autoSaveFlagCheck: false,\n        });\n      } else if (finalObj.isAcceptanceDocument === true && finalObj.template_type !== 'Acceptance Tik') {\n        this.props.history.push('/selectAcceptanceTemp', { finalObj, editFlag: false });\n      } else {\n        const finalData = convertTemplateDataFromData(finalObj);\n        this.props.createTemplate(finalData);\n      }\n    }\n    autoSaveVar = false;\n  }\n\n  componentDidMount() {\n    this.props.recentAttributeListInfo();\n    document.addEventListener('mousedown', this.handleClickOutside);\n    this.props.errorClear();\n  }\n\n  addFlag = () => {\n    const { addFlag } = this.state;\n    this.setState({\n      addFlag: !addFlag,\n    });\n  }\n\n  handleTabAttribute = (tab) => {\n    if (tab === 'recent') {\n      this.setState({\n        recentAttributeFlag: true,\n      });\n    } else {\n      this.setState({\n        recentAttributeFlag: false,\n      });\n    }\n  }\n\n  inilitizeTempValue = (templateDetailsInfo) => {\n    const {\n      attribute, image, text,\n    } = templateDetailsInfo;\n\n    const finalAttribute = [];\n    if (templateDetailsInfo !== null) {\n      const result = _.unionBy(image, text, attribute);\n      const temp2 = _.orderBy(result, ['_id'], ['asc']);\n\n      templateDetailsInfo !== null && temp2.length > 0 && temp2.map((item) => {\n        let typeAttribute = '';\n        if (item.image_title) {\n          typeAttribute = 'image';\n        } else if (item.attribute_name) {\n          typeAttribute = 'attribute';\n        } else {\n          typeAttribute = 'text';\n        }\n        finalAttribute.push({\n          type: typeAttribute,\n          attribute_name: item.attribute_name || item.image_title || item.title || '',\n          attribute_dropdown: item.dataType || '',\n          include_in_thumbnail: item.include_in_thumbnail || false,\n          description: item.value || '',\n        });\n      });\n    }\n\n    return finalAttribute;\n  }\n\n  handleAutoSaveCheckbox = (checked) => {\n    if (checked === true) {\n      this.setState({\n        checkAutoSave: checked,\n      }, () => {\n        checkInternal = true;\n        this.handleCheckboxAutoSave(checked);\n      });\n    }\n  }\n\n  handleCheckboxAutoSave = (checked) => {\n    this.setState({\n      autoSaveFlag: checked,\n      autoSaveFlagCheck: true,\n      autoSaveLoader: true,\n    }, () => {\n      this.buttonRef.current.click();\n      if (checked === false) {\n        this.setState({\n          checkAutoSaveBtn: true,\n        });\n      }\n    });\n  }\n\n  getFormData = (formData) => {\n    const { templateObj } = this.props;\n    const finalObj = this.formateTemplateData(formData);\n    const finalData = convertTemplateDataFromData(finalObj);\n\n    this.props.autoSaveTemplate(finalData);\n  };\n\n  render() {\n    const {\n      recentAttributeFlag, SuccessPopupFlag, autoSaveFlag, checkAutoSave, checkAutoSaveBtn,\n    } = this.state;\n    const { templateObj, location } = this.props;\n    const {\n      recentAttribute, recentAttributeLoader, successPopup, successLoader, templateDetailsInfo, autoSaveData,\n    } = templateObj;\n\n    const initialValuesData = {};\n    const { state } = location;\n    if (state) {\n      const { finalObj } = state;\n      const finalObjData = this.inilitizeTempValue(finalObj);\n      const {\n        isAcceptanceDocument, template_name, template_type, thumbnail,\n      } = finalObj;\n\n      initialValuesData.template_name = template_name;\n      initialValuesData.template_type = template_type;\n      initialValuesData.isAcceptanceDocument = isAcceptanceDocument;\n      initialValuesData.thumbnail = thumbnail || '';\n      initialValuesData.attribute = finalObjData;\n    } else {\n      initialValuesData.template_name = '';\n      initialValuesData.template_type = '';\n      initialValuesData.isAcceptanceDocument = false;\n      initialValuesData.thumbnail = '';\n      initialValuesData.attribute = [];\n    }\n    const time = autoSaveData !== null && moment(autoSaveData.createdAt).fromNow();\n    return (\n      <WithLayoutContainer>\n        <div id=\"createTemp\" className=\"wrapper wrapper-content createTemp\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox p-0\">\n                <div className=\"row\">\n                  <Formik\n                    initialValues={initialValuesData}\n                    validationSchema={createTemplateSchema}\n                    onSubmit={this.handleSubmit}\n                    render={({\n                      values,\n                      errors,\n                      touched,\n                      handleSubmit,\n                      setFieldValue,\n                      setFieldTouched,\n                    }) => (\n                        <>\n                          <FieldArray\n                            name=\"attribute\"\n                            render={(arrayHelpers) => (\n                              <>\n                                <div id=\"createTemplateleft\" className=\"col-xl-9 col-lg-8 col-sm-12 border-right py-4 pl-5\">\n                                  <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                                    <ul className=\"ks-cboxtags\">\n                                      <li>\n                                        {autoSaveVar && <i className=\"fa fa-refresh fa-spin\" />\n                                          || (\n                                            <>\n                                              <input\n                                                type=\"checkbox\"\n                                                id=\"checkboxOne\"\n                                                value=\"\"\n                                                onChange={(e) => this.handleCheckboxAutoSave(e.target.checked)}\n                                                checked={autoSaveData === null ? false : autoSaveFlag}\n                                              />\n                                              <label htmlFor=\"checkboxOne\">Auto Save</label>\n                                            </>\n                                          )}\n                                      </li>\n                                      {autoSaveData !== null\n                                        && (\n                                          <li>\n                                            <span>\n                                              Last saved {\"\"}\n                                            {time}\n                                            </span>\n                                          </li>\n                                        )}\n                                    </ul>\n                                    <h2 className=\"f-b m-0\">Create Template</h2>\n                                    <button\n                                      type=\"submit\"\n                                      onClick={handleSubmit}\n                                      className=\"btn-primary p-2 next mr-15 templateButton\"\n                                      disabled={successLoader}\n                                      ref={this.buttonRef}\n                                    >\n                                      {successLoader ? <i className=\"fa fa-refresh fa-spin\" /> : values.isAcceptanceDocument == false ? 'Submit' : 'Next'}\n                                    </button>\n                                  </div>\n                                  <div className=\"fixHeight\" style={{ minHeight: 'calc(100vh - 280px)', position: 'relative' }}>\n                                    <Form>\n                                      <ul className=\"slides\">\n                                        <StaticTemplate\n                                          setFieldTouched={setFieldTouched}\n                                          values={values}\n                                          errors={errors}\n                                          touched={touched}\n                                          setFieldValue={setFieldValue}\n                                          successLoader={successLoader}\n                                          handleCheckboxAutoSave={this.handleCheckboxAutoSave}\n                                          handleAutoSaveCheckbox={this.handleAutoSaveCheckbox}\n                                          checkAutoSave={checkAutoSave}\n                                          autoSaveFlag={autoSaveFlag}\n                                          autoSaveData={autoSaveData}\n                                          checkAutoSaveBtn={checkAutoSaveBtn}\n                                          checkInternal={checkInternal}\n                                        />\n                                        <div>\n                                          <DragAndDrop\n                                            data={values.attribute}\n                                            setFieldTouched={setFieldTouched}\n                                            values={values}\n                                            errors={errors}\n                                            touched={touched}\n                                            setFieldValue={setFieldValue}\n                                            arrayHelpers={arrayHelpers}\n                                            handleAutoSaveCheckbox={this.handleAutoSaveCheckbox}\n                                            checkAutoSave={checkAutoSave}\n                                            autoSaveFlag={autoSaveFlag}\n                                            autoSaveData={autoSaveData}\n                                            checkAutoSaveBtn={checkAutoSaveBtn}\n                                            checkInternal={checkInternal}\n                                          />\n                                        </div>\n                                      </ul>\n                                    </Form>\n                                  </div>\n                                  <div className=\"dropup puls-drop show\" ref={this.wrapperRef}>\n                                    <a\n                                      className=\"btn plus-btn f-24 text-center p-2\"\n                                      onClick={() => {\n                                        arrayHelpers.push({\n                                          type: 'attribute',\n                                          attribute_name: '',\n                                          attribute_dropdown: '',\n                                          include_in_thumbnail: false,\n                                          description: '',\n                                        });\n                                        this.setState({\n                                          addFlag: false,\n                                        });\n                                      }}\n                                    >\n                                      {' '}\n                                      <i className=\"fa fa-plus\" />\n                                    </a>\n                                  </div>\n                                </div>\n                                <div id=\"createTemplateright\" className=\"col-xl-3 col-lg-4 col-sm-12\">\n                                  <ul className=\"nav nav-pills my-3 flex-wrap justify-content-center\" role=\"tablist\">\n                                    <li className=\"nav-item\">\n                                      <a className={`nav-link  ${recentAttributeFlag === true ? 'active' : ''}`} data-toggle=\"pill\" role=\"tab\" onClick={() => this.handleTabAttribute('recent')}>Recent Attributes</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                      <a className={`nav-link  ${recentAttributeFlag === true ? '' : 'active'}`} data-toggle=\"pill\" role=\"tab\" onClick={() => this.handleTabAttribute('live')}>Live Preview</a>\n                                    </li>\n                                  </ul>\n                                  <div className=\" recent-attribute-main-container\">\n                                    <div>\n                                      <div className=\"tab-content pr-3 br-6 mr-2\" style={{ maxHeight: 'calc(100vh - 320px)', overflowY: 'auto' }}>\n                                        {recentAttributeFlag === true\n                                          ? (\n                                            <RecentAttribute\n                                              recentAttribute={recentAttributeFlag}\n                                              recentAttributeLoader={recentAttributeLoader}\n                                              attribute={recentAttribute.length > 0 ? recentAttribute : []}\n                                              addRecentAttribute={(item) => {\n                                                const a = {\n                                                  type: 'attribute',\n                                                  attribute_name: item.attribute_name || item.image_title || item.title,\n                                                  attribute_dropdown: item.dataType,\n                                                  include_in_thumbnail: item.include_in_thumbnail,\n                                                  description: item.description,\n                                                };\n                                                arrayHelpers.push(a);\n                                              }}\n                                            />\n                                          )\n                                          : <LivePreview attribute={values.attribute} />}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </>\n                            )}\n                          />\n                        </>\n                      )}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {SuccessPopupFlag === true && successPopup\n          ? <SuccessPopup msg={successPopup.msg} closePopup={this.successPopupClosePopup} history={this.props.history} />\n          : null}\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  templateObj: state.Template,\n  template: state.Profile.template,\n  error: state.Auth.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  recentAttributeListInfo: () => dispatch(actions.recentAttributeListInfo()),\n  createTemplate: (data) => dispatch(actions.createTemplate(data)),\n  templateInitialization: () => dispatch(actions.templateInitialization()),\n  errorClear: () => dispatch(actions.errorClear()),\n  autoSaveTemplate: (data) => dispatch(actions.autoSaveTemplate(data)),\n  getTemplateListInfo: (payload) => dispatch(actions.getTemplateListInfo(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTemplate);\n","C:\\react-main\\src\\container\\transaction_history\\transactionHistory.jsx",["1309","1310","1311","1312","1313","1314"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  WithLayoutContainer,\n  Table,\n  SuccessPopup,\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { TransactionHistory } from \"../../constants/Mapper.js\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\nclass transactionHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataTable: {\n        titles: TransactionHistory,\n        data: [],\n      },\n    };\n  }\n  componentDidMount() {\n    this.props.transactionreq();\n  }\n  sum = (obj) => {\n    let sum = 0;\n    for (let el in obj) {\n      if (obj.hasOwnProperty(el)) {\n        sum += parseFloat(obj[el]);\n      }\n    }\n    return sum;\n  };\n  componentDidUpdate(prevprops) {\n    if (prevprops.transactionList != this.props.transactionList) {\n      console.log(this.props.transactionList);\n\n      if (this.props.transactionList.length > 0) {\n        this.props.transactionList.map((role, key) => {\n          const { startOfSubscription, subscriptionPlanDetails } = role;\n\n          const priceList = this.state.dataTable.data;\n          const data = priceList[key];\n          const object = {\n            ...data,\n            _id: role._id,\n            sr_no: key + 1,\n            subscription_date: formatDate(startOfSubscription),\n            subscription_time: formatTime(startOfSubscription),\n            subscription_plan: role.planName,\n            amount: `$${role.cost}`\n          };\n          const objSum = object;\n          console.log(objSum);\n          priceList[key] = objSum;\n          const tranData = { ...this.state.dataTable };\n          tranData.data = priceList;\n          this.setState({ tranData });\n        });\n      }\n    }\n    if(prevprops.transactionDetailSuccess != this.props.transactionDetailSuccess){\n      this.props.history.push('/transaction-detail')\n  }\n  }\n  viewPopup = (data) => {\n    console.log(data)\n    this.props.transactionDetail({Id: data._id})\n    localStorage.setItem('transId',JSON.stringify(data._id))\n     }\n  render() {\n    const { transactionList, payment, Rolepayment } = this.props;\n    console.log(payment, Rolepayment);\n    return (\n      <WithLayoutContainer>\n             <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox\">\n                <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                  <h2 className=\"f-b m-0\">Transaction History</h2>\n                </div>\n                <div className=\"table-responsive fixHeight\">\n                  <Table\n                    dataTable={this.state.dataTable}\n                    actions={actionsData}\n                    defaultSort={'sr_no'}\n                    editButtonOnClick={this.editButtonOnClick}\n                    deleteButtonOnClick={this.deleteButtonOnClick}\n                    loader={this.props.loader}\n                    viewPopup={this.viewPopup}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactionList: state.Transaction.transactionList,\n    transactionDetailSuccess: state.Transaction.transactionDetailSuccess,\n    payment: state.Profile.payment,\n    Rolepayment: state.Profile.Rolepayment,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  transactionreq: () => dispatch(actions.transactionList()),\n  transactionDetail: (payload) => dispatch(actions.transactionDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(transactionHistory);\n","C:\\react-main\\src\\container\\search\\Search.jsx",["1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  WithLayoutContainer, TikHistoryTable,\n} from '../../component/index.jsx';\nimport * as actions from '../../actions';\nimport { formatTime, formatDate } from '../../helper/utility.js';\nimport { searchMapper } from '../../constants/Mapper.js';\nimport moment from 'moment';\n\nlet dataTable = {\n  titles: searchMapper,\n  data: [],\n};\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: false,\n      metaFlag: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getMetaListInfo();\n    this.props.getTemplateListInfo({ whiteList: true });\n  }\n\n  getIndexofMetaFiled = () => {\n    const { metaList } = this.props;\n    const finalMetaList = [];\n    dataTable.titles.map((data) => {\n      metaList.filter((item) => {\n        if (data.id == item.name && data.isDropdownShow) {\n          finalMetaList.push(data);\n        }\n      });\n    });\n    return finalMetaList;\n  }\n\n  getIndexofMetaFiledAdd = () => {\n    const finalMetaList = [];\n    dataTable.titles.map((data) => {\n      if (!data.isDropdownShow) {\n        finalMetaList.push(data);\n      }\n    });\n    return finalMetaList;\n  }\n\n  addMetaFiled = (titleObject, value) => {\n    if (value === 'plus') {\n      let valueArray = [];\n      valueArray = this.getIndexofMetaFiledAdd();\n\n      const index = dataTable.titles.findIndex((x) => x.id === valueArray[0].id);\n      if (dataTable.titles[index]) {\n        dataTable.titles[index].isDropdownShow = !dataTable.titles[index].isDropdownShow;\n      }\n    } else {\n      const index = dataTable.titles.findIndex((x) => x.id === titleObject.id);\n      if (dataTable.titles[index]) {\n        dataTable.titles[index].isDropdownShow = !dataTable.titles[index].isDropdownShow;\n      }\n    }\n    this.setState({\n      flag: true,\n    });\n  }\n\n  removeSeachValue = (name, value) => {\n    const { advanceSearchValue } = this.props;\n    const { tags, from, to } = advanceSearchValue;\n    // let finalobj = advanceSearchValue;\n    let finalobj = Object.assign({}, advanceSearchValue);\n    let finalAdvanceSearch = Object.assign({}, advanceSearchValue);\n\n    finalobj['form'] = finalobj['from'];\n    finalAdvanceSearch['form'] = finalAdvanceSearch['from'];\n    finalobj['tag'] = finalobj['tags'];\n\n    if (name === 'tags') {\n      let finalTagValue = [];\n\n      tags.map((item) => {\n        if (item !== value) {\n          finalTagValue.push(item);\n        }\n      });\n\n      finalobj['tag'] = finalTagValue;\n      finalAdvanceSearch['tags'] = finalTagValue;\n      finalAdvanceSearch['tag'] = finalTagValue;\n\n      delete finalobj.tags;\n    } else if (name === 'form') {\n      let finalFromValue = [];\n      let finalFromNameValue = [];\n\n      from.map((item) => {\n        if (item.id !== value.id) {\n          finalFromValue.push(item.id);\n          finalFromNameValue.push(item);\n        }\n      });\n\n\n      delete finalobj.from;\n      finalobj['form'] = finalFromValue;\n      finalobj['from'] = finalFromValue;\n      // finalobj['form'] = finalFromValue;\n\n      finalAdvanceSearch['form'] = finalFromNameValue;\n      finalAdvanceSearch['from'] = finalFromNameValue;\n      // finalAdvanceSearch['form'] = finalFromNameValue;\n    } else if (name === 'to') {\n\n      let finalToValue = [];\n      let finalToNameValue = [];\n\n      to.map((item) => {\n        if (item.id !== value.id) {\n          finalToValue.push(item.id);\n          finalToNameValue.push(item);\n        }\n      });\n      finalobj['to'] = finalToValue;\n      finalAdvanceSearch['to'] = finalToNameValue;\n\n    } else {\n      finalobj[name] = '';\n      finalAdvanceSearch[name] = '';\n    }\n\n    let finalFromData = [];\n    let finalToData = [];\n\n    if (name !== 'form' || name !== 'to') {\n      finalobj.form && finalobj.form.map((item) => finalFromData.push(item.id));\n      finalobj.to && finalobj.to.map((item) => finalToData.push(item.id));\n\n      finalobj['form'] = finalFromData;\n      finalobj['from'] = finalFromData;\n      finalobj['to'] = finalToData;\n    }\n\n    this.props.submitAdvanceSearch(finalobj, finalAdvanceSearch);\n  }\n  viewDraft = () => {\n    return false\n  }\n  render() {\n    const {\n      searchData, metaList, advanceSearchValue, simpleSearchValues, templateList\n    } = this.props;\n    console.log('advanceSearchValue',advanceSearchValue)\n\n    const { metaFlag } = this.state;\n    dataTable = {\n      titles: searchMapper,\n      data: [],\n    };\n\n    if (searchData && searchData.length > 0) {\n      dataTable.data = searchData.map((doc, key) => {\n        const { createdAt } = doc;\n        return {\n          ...doc,\n          ...{\n            date: formatDate(createdAt),\n            time: formatTime(createdAt),\n          },\n        };\n      });\n    }\n\n    if (metaList.length > 0 && dataTable.titles.filter((data) => (data.id === metaList[0].name)).length === 0 && metaFlag === false) {\n      metaList.length > 0 && metaList.map((item, key) => {\n        if (key === 0 && dataTable.titles.filter((data) => (data.id === metaList[0].name)).length === 0) {\n          dataTable.titles.splice(1, 0, {\n            id: item.name, isSort: true, text: item.name, isDropdownShow: true,\n          });\n        } else {\n          dataTable.titles.splice(key + 1, 0, {\n            id: item.name, isSort: true, text: item.name, isDropdownShow: false,\n          });\n        }\n      });\n    }\n\n\n    const metaField = this.getIndexofMetaFiled();\n\n    const {\n      category, from, status, tags, template, to,\n    } = (typeof advanceSearchValue !== 'undefined' && advanceSearchValue) || {};\n\n    let templateData = '';\n\n    if (advanceSearchValue && template && templateList.length > 0) {\n      templateData = templateList.filter((temp) => temp._id === template);\n    }\n\n    return (\n      <WithLayoutContainer>\n        <div id=\"searchAll\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div id=\"changingContent\" className=\"containerBox\">\n                <div>\n                  {/* <div className=\"table-title\">\n                    <h2 className=\"f-b mb-4 mt-0\">Search</h2>\n                  </div> */}\n                  <div className=\"table-title mb-2\">\n                    <h2 className=\"f-b mb-4 mt-0 d-inline\">\n                      Search :\n                    </h2>\n                    <div className=\"sTag d-inline\">\n\n                      {advanceSearchValue && status\n                        && (\n                          <span onClick={() => this.removeSeachValue('status', status)}>\n                            {status == 'Update_Required' ? 'Update Required': status}\n                            <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                          </span>\n                        )}\n\n                      {advanceSearchValue && category\n                        && (\n                          <span onClick={() => this.removeSeachValue('category', category)}>\n                            {category}\n                            <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                          </span>\n                        )}\n\n                      {advanceSearchValue && tags.length > 0\n                        && tags.map((tags, keys) => {\n                          return (\n                            <span key={keys} onClick={() => this.removeSeachValue('tags', tags)}>\n                              {tags}\n                              <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                            </span>\n                          )\n                        })}\n\n                      {advanceSearchValue && from.length > 0\n                        && from.map((emails, keys) => {\n                          return (\n                            <span key={keys} onClick={() => this.removeSeachValue('form', emails)}>\n                              {emails.name}\n                              <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                            </span>\n                          )\n                        })}\n\n                      {advanceSearchValue && to.length > 0\n                        && to.map((emails, keys) => {\n                          return (\n                            <span key={keys} onClick={() => this.removeSeachValue('to', emails)}>\n                              {emails.name}\n                              <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                            </span>\n                          )\n                        })}\n\n                      {templateData && templateData.length > 0 &&\n                        (\n                          <span onClick={() => this.removeSeachValue('template', templateData[0].template_name)}>\n                            {templateData[0].template_name}\n                            <a><i className=\"fa fa-times-circle\" aria-hidden=\"true\" /></a>\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"table-responsive fixHeight\">\n                    <TikHistoryTable\n                      dataTable={dataTable}\n                      defaultSort=\"documentStatus\"\n                      search\n                      metaList={metaList}\n                      addMetaFiled={this.addMetaFiled}\n                      metaFieldData={metaField}\n                      action={false}\n                      viewDraft={this.viewDraft}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchData: state.Search.searchData,\n  searchLoader: state.Search.searchLoader,\n  metaList: state.Tik.metaList,\n  advanceSearchValue: state.Search.advanceSearchValueData,\n  simpleSearchValues: state.Search.simpleSearchValues,\n  templateList: state.Template.templateList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  simpleAdvanceSearch: (data) => dispatch(actions.submitSimpleSearch(data)),\n  getMetaListInfo: () => dispatch(actions.getMetaListInfo()),\n  // submitAdvanceSearch: (data) => dispatch(actions.submitAdvanceSearch(data)),\n  submitAdvanceSearch: (data, advanceSearchValueData) => dispatch(actions.submitAdvanceSearch(data, advanceSearchValueData)),\n  getTemplateListInfo: (payload) => dispatch(actions.getTemplateListInfo(payload)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","C:\\react-main\\src\\container\\Profile\\Profile.jsx",["1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392"],"/* eslint-disable no-unused-expressions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  HeaderWithoutSearch,\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport MobileUpdateModal from \"./MobileUpdateModal.jsx\";\nimport MobileOtpModal from \"./MobileOtpModal.jsx\";\nimport { toast } from \"react-toastify\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport cam from \"../../assets/img/cam.png\"\nimport user from \"../../assets/img/user.png\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      tabActive: \"Personal\",\n      updateBtn: false,\n      firstName: \"\",\n      lastName: \"\",\n      designation: \"\",\n      companyName: \"\",\n      address: \"\",\n      showSuccess: false,\n      message: \"\",\n      coverImage: \"\",\n      imageURL: \"\",\n      mobileNumberUpdate: false,\n      MobileOtpPopup: false,\n      errormessage: \"\",\n      error: false,\n      submit: false,\n      errorField: \"\",\n      loader: false,\n      userLimit: \"\",\n      isInfinite: false,\n      referalPopup: false,\n      isCardRemove: false,\n      cardId: ''\n    };\n  }\n  componentDidMount() {\n    this.props.profile();\n    this.props.customerPaymentDetail();\n    this.props.getMyPlan();\n  }\n\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.profileUpdateSuccess != this.props.profileUpdateSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Profile edited successfully\",\n        updateBtn: false,\n        loader: false,\n      });\n      this.props.profile();\n    }\n    if (prevProps.cardRemoveSuccess != this.props.cardRemoveSuccess) {\n      this.setState({\n        showSuccess: true,\n        message: \"Card removed successfully\",\n        loader: false,\n      });\n    }\n    if (prevProps.myPlan != this.props.myPlan) {\n      this.props.specialFeatures.map((e) => {\n        if (e.featureName == \"user_management\") {\n          this.setState({\n            userLimit: e.limit,\n            isInfinite: e.isInfinite,\n          });\n        }\n      });\n    }\n    if(prevProps.transactionDetailSuccess != this.props.transactionDetailSuccess){\n      this.props.history.push('/invoice')\n  }\n  }\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.customerPaymentDetail();\n  };\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  activeTab = (activeName) => {\n    this.setState({\n      tabActive: activeName,\n    });\n  };\n  updateToggle = () => {\n    this.setState({\n      updateBtn: true,\n    });\n  };\n  handleChange = (e, key) => {\n    const special = /^[a-zA-Z]+$/;\n    this.props.profileEdit({ e, key });\n    if (this.state.submit) {\n      if (key == \"firstName\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"First name is required\",\n          error: true,\n          errorField: \"firstName\",\n        });\n      } else if (key == \"firstName\" && !special.test(e.target.value)) {\n        this.setState({\n          errormessage: \"Only character is allowed\",\n          error: true,\n          errorField: \"firstName\",\n        });\n      } else if (key == \"lastName\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Last name is required\",\n          error: true,\n          errorField: \"lastName\",\n        });\n      } else if (key == \"lastName\" && !special.test(e.target.value)) {\n        this.setState({\n          errormessage: \"Only character is allowed\",\n          error: true,\n          errorField: \"lastName\",\n        });\n      } else if (key == \"address\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Address is required\",\n          error: true,\n          errorField: \"address\",\n        });\n      } else if (key == \"designation\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Designation is required\",\n          error: true,\n          errorField: \"designation\",\n        });\n      } else {\n        this.setState({ errormessage: \"\", error: false, errorField: \"\" });\n      }\n    }\n  };\n\n  handleSubmit = () => {\n    const { firstName, lastName, designation, address } = this.props;\n    const special = /^[a-zA-Z]+$/;\n    const trimAddress = address.trim();\n    this.setState({\n      submit: true,\n    });\n    if (this.props.firstName == \"\") {\n      this.setState({\n        errormessage: \"Firstname is required\",\n        error: true,\n        errorField: \"First Name\",\n      });\n    } else if (!special.test(this.props.firstName)) {\n      this.setState({\n        errormessage: \"Only character is allowed\",\n        error: true,\n        errorField: \"firstName\",\n      });\n    } else if (this.props.lastName == \"\") {\n      this.setState({\n        errormessage: \"Last Name is required\",\n        error: true,\n        errorField: \"lastName\",\n      });\n    } else if (!special.test(this.props.lastName)) {\n      this.setState({\n        errormessage: \"Only character is allowed\",\n        error: true,\n        errorField: \"lastName\",\n      });\n    } else if (trimAddress == \"\") {\n      this.setState({\n        errormessage: \"Address is required\",\n        error: true,\n        errorField: \"address\",\n      });\n    } else if (this.props.designation == \"\") {\n      this.setState({\n        errormessage: \"Designation is required\",\n        error: true,\n        errorField: \"designation\",\n      });\n    } else {\n      this.setState({ loader: true });\n      this.props.profileUpdate({\n        firstName,\n        lastName,\n        designation,\n        address,\n        photoData: this.state.coverImage ? this.state.coverImage : null,\n      });\n    }\n\n    // this.props.profilePic({photoData: this.state.coverImage ? this.state.coverImage : null})\n  };\n  imageChangeHandler = (e) => {\n    if (\n      !e.target.files[0].name.split(\".\").includes(\"jpg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"jpeg\") &&\n      !e.target.files[0].name.split(\".\").includes(\"png\")\n    ) {\n      toast.error(\"Only jpg,jpeg,png files are supported\");\n    } else {\n      this.props.profilePic({\n        photoData: e.target.files[0] ? e.target.files[0] : null,\n      });\n      this.setState({\n        imageURL: URL.createObjectURL(e.target.files[0]),\n        coverImage: e.target.files[0],\n      });\n    }\n  };\n  closePopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      mobileNumberUpdate: false,\n    });\n  };\n  mobileUpdateHandler = () => {\n    this.setState({\n      mobileNumberUpdate: true,\n    });\n  };\n  mobileOtpModalClose = () => {\n    this.setState({\n      MobileOtpPopup: false,\n    });\n  };\n  confirmMobileUpdate = () => {\n    this.setState({\n      mobileNumberUpdate: false,\n      showSuccess: true,\n      message: \"Phone number updated successfully\",\n    });\n  };\n  removeCard = () => {\n    this.props.cardRemove({ cardId: this.state.cardId });\n    this.setState({isCardRemove: false})\n  };\n  showReferalPopup = () => {\n    this.setState({ referalPopup: true });\n  };\n  closeReferalPopup = () => {\n    this.setState({ referalPopup: false });\n  };\n  closeCardPopup = () => {\n    this.setState({ isCardRemove: false})\n  }\n  removeCardPopup = (id) => {\n    this.setState({ cardId: id,isCardRemove: true });\n  }\n  render() {\n    const {\n      showNotification,\n      logout,\n      tabActive,\n      updateBtn,\n      showSuccess,\n      message,\n      mobileNumberUpdate,\n      MobileOtpPopup,\n      errorField,\n      errormessage,\n      error,\n      loader,\n      referalPopup,\n      isCardRemove,\n    } = this.state;\n    const {\n      firstName,\n      lastName,\n      designation,\n      mobileNumber,\n      companyName,\n      email,\n      address,\n      role,\n      document,\n      invoice,\n      payment,\n      template,\n      updatedAt,\n      userFirstname,\n      userLastname,\n      roleName,\n      rolerole,\n      roledocument,\n      roleinvoice,\n      rolepayment,\n      roletemplate,\n      myPlan,\n      invitationCode,\n      referralDetails,\n    } = this.props;\n    const date = formatDate(updatedAt);\n    const time = formatTime(updatedAt);\n    return (\n      <>\n      <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container-fluid my-5\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"containerBox mb-5 px-0\" id=\"profile\">\n                <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex flex-wrap f-m mb-5\">\n                  <div class=\"pro-container\">\n                    <img\n                      class=\"img-fluid img-circle\"\n                      src={\n                        this.props.photoData != \"\"\n                          ? this.state.imageURL\n                            ? this.state.imageURL\n                            : this.props.photoData\n                          : this.state.imageURL != \"\"\n                          ? this.state.imageURL\n                          : user\n                      }\n                    />\n                    <div class=\"camera\">\n                      <input\n                        type=\"file\"\n                        accept=\"image/png,image/jpg,image/jpeg\"\n                        multiple={false}\n                        onChange={this.imageChangeHandler}\n                      />\n                      <img class=\"img-fluid\" src={cam} />\n                    </div>\n                  </div>\n                  <div class=\"pro-detail ml-4 mt-4\">\n                    <h5 class=\"f-24 f-b\">\n                      {userFirstname != undefined\n                        ? `${userFirstname} ${userLastname}`\n                        : \"\"}{\" \"}\n                    </h5>\n                    <h5 class=\"f-20 f-m my-2\">\n                      {email != undefined ? email : \"\"}{\" \"}\n                    </h5>\n                    <h5 class=\"f-20 f-m\">\n                      {companyName != undefined ? companyName : \"\"}\n                    </h5>\n                  </div>\n                </div>\n                <div class=\"offset-lg-2 col-lg-8\">\n                  <nav id=\"profile-tab\">\n                    <div\n                      class=\"nav nav-tabs d-flex justify-content-between\"\n                      id=\"nav-tab\"\n                      role=\"tablist\"\n                    >\n                      <a\n                        className={\n                          tabActive == \"Personal\"\n                            ? \"nav-item f-m nav-link active\"\n                            : \"nav-item f-m nav-link\"\n                        }\n                        data-toggle=\"tab\"\n                        role=\"tab\"\n                        onClick={() => {\n                          this.activeTab(\"Personal\"), this.props.profile();\n                        }}\n                      >\n                        Personal\n                      </a>\n                      <a\n                        className={\n                          tabActive == \"Roles\"\n                            ? \"nav-item f-m nav-link active\"\n                            : \"nav-item f-m nav-link\"\n                        }\n                        data-toggle=\"tab\"\n                        role=\"tab\"\n                        onClick={() => this.activeTab(\"Roles\")}\n                      >\n                        Roles & Responsibilities\n                      </a>\n                      <a\n                        className={\n                          tabActive == \"Subscription\"\n                            ? \"nav-item f-m nav-link active\"\n                            : \"nav-item f-m nav-link\"\n                        }\n                        data-toggle=\"tab\"\n                        role=\"tab\"\n                        onClick={() => this.activeTab(\"Subscription\")}\n                      >\n                        Subscription\n                      </a>\n                      <a\n                        className={\n                          tabActive == \"Security\"\n                            ? \"nav-item f-m nav-link active\"\n                            : \"nav-item f-m nav-link\"\n                        }\n                        data-toggle=\"tab\"\n                        role=\"tab\"\n                        onClick={() => this.activeTab(\"Security\")}\n                      >\n                        Security\n                      </a>\n                    </div>\n                  </nav>\n                </div>\n                <hr />\n                <div class=\"offset-lg-2 col-lg-8\">\n                  <div class=\"tab-content\" id=\"nav-tabContent\">\n                    <div\n                      className={\n                        tabActive == \"Personal\"\n                          ? \"tab-pane fade show active\"\n                          : \"tab-pane fade show\"\n                      }\n                      id=\"nav-home\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-home-tab\"\n                    >\n                      <div id=\"profile1\" class=\"wrapper\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 mt-4\">\n                            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                              <h2 class=\"f-b m-0 f-20\">\n                                My Personal Information\n                              </h2>\n                            </div>\n                            <div class=\"\">\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-3\">\n                                  <h4 class=\"f-16 f-b\">First Name</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <input\n                                    type=\"text\"\n                                    className={\n                                      updateBtn\n                                        ? \"w-100 f-16 f-r\"\n                                        : \"w-100 f-16 f-r read\"\n                                    }\n                                    placeholder=\"\"\n                                    value={\n                                      firstName != undefined ? firstName : \"\"\n                                    }\n                                    onChange={(e) =>\n                                      this.handleChange(e, \"firstName\")\n                                    }\n                                  />\n                                </div>\n                              </div>\n                              {error && errorField == \"firstName\" ? (\n                                <div className=\"input-feedback-profile\">\n                                  {errormessage}\n                                </div>\n                              ) : null}\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-3\">\n                                  <h4 class=\"f-16 f-b\">Last Name</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <input\n                                    type=\"text\"\n                                    className={\n                                      updateBtn\n                                        ? \"w-100 f-16 f-r\"\n                                        : \"w-100 f-16 f-r read\"\n                                    }\n                                    placeholder=\"\"\n                                    value={\n                                      lastName != undefined ? lastName : \"\"\n                                    }\n                                    onChange={(e) =>\n                                      this.handleChange(e, \"lastName\")\n                                    }\n                                  />\n                                </div>\n                              </div>\n                              {error && errorField == \"lastName\" ? (\n                                <div className=\"input-feedback-profile\">\n                                  {errormessage}\n                                </div>\n                              ) : null}\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Email Address</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                  <h4 class=\"f-16 f-r \">\n                                    {email != undefined ? email : \"\"}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Phone Number</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                  <h4 class=\"f-16 f-r \">\n                                    {mobileNumber != undefined\n                                      ? mobileNumber\n                                      : \"\"}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Address</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                  <input\n                                    type=\"text\"\n                                    className={\n                                      updateBtn\n                                        ? \"w-100 f-16 f-r\"\n                                        : \"w-100 f-16 f-r read\"\n                                    }\n                                    placeholder=\"\"\n                                    value={address != undefined ? address : \"\"}\n                                    onChange={(e) =>\n                                      this.handleChange(e, \"address\")\n                                    }\n                                  />\n                                </div>\n                              </div>\n                              {error && errorField == \"address\" ? (\n                                <div className=\"input-feedback-profile\">\n                                  {errormessage}\n                                </div>\n                              ) : null}\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Company Name</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                  <input\n                                    type=\"text\"\n                                    className=\"w-100 f-16 f-r read\"\n                                    placeholder=\"\"\n                                    value={\n                                      companyName != undefined\n                                        ? companyName\n                                        : \"\"\n                                    }\n                                    // onChange={(e) => this.handleChange(e,'companyName')}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Designation</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                  <input\n                                    type=\"text\"\n                                    className={\n                                      updateBtn\n                                        ? \"w-100 f-16 f-r\"\n                                        : \"w-100 f-16 f-r read\"\n                                    }\n                                    placeholder=\"\"\n                                    value={\n                                      designation != undefined\n                                        ? designation\n                                        : \"\"\n                                    }\n                                    onChange={(e) =>\n                                      this.handleChange(e, \"designation\")\n                                    }\n                                  />\n                                </div>\n                              </div>\n                              {error && errorField == \"designation\" ? (\n                                <div className=\"input-feedback-profile\">\n                                  {errormessage}\n                                </div>\n                              ) : null}\n                              {this.props.showReferral ? <div class=\"row  mb-2\">\n                                <div class=\"col-lg-3 \">\n                                  <h4 class=\"f-16 f-b \">Referral Code</h4>\n                                </div>\n                                <div class=\"col-lg-6 \">\n                                <CopyToClipboard\n                                    text={invitationCode}\n                                    onCopy={() =>\n                                      toast.success(\"Referral copied\")\n                                    }\n                                  >\n                                  <a\n                                    id=\"copyButton\"\n                                    class=\"d-inline-block bg-muted br-6 copy-mute\"\n                                  >\n                                    <i class=\"fa fa-copy \"></i>\n                                  </a>\n                                  </CopyToClipboard>\n                               \n                                    <span id=\"copyTarget\" class=\"refcode\">\n                                      {invitationCode}\n                                    </span>\n                                  <br />\n                                  <a\n                                    data-toggle=\"modal\"\n                                    data-target=\"#refViews\"\n                                    onClick={this.showReferalPopup}\n                                  >\n                                    <small class=\"text-muted font-italic\">\n                                      <span>\n                                        `{referralDetails.complete}/\n                                        {referralDetails.require}`\n                                      </span>\n                                      Referrals to get bonus\n                                    </small>\n                                  </a>\n                                </div>\n                              </div>:null}\n                            </div>\n                            <div class=\"mt-4 \">\n                              {updateBtn ? null : (\n                                <a\n                                  onClick={this.updateToggle}\n                                  class=\"edit btn btn-default w-50 \"\n                                >\n                                  Edit\n                                </a>\n                              )}\n                              {updateBtn ? (\n                                <a\n                                  onClick={this.handleSubmit}\n                                  class=\"update btn btn-default w-50\"\n                                  data-toggle=\"modal\"\n                                  data-target=\"#updatedProfile\"\n                                >\n                                  {loader ? (\n                                    <i class=\"fa fa-refresh fa-spin\"></i>\n                                  ) : (\n                                    \"Update\"\n                                  )}\n                                </a>\n                              ) : null}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className={\n                        tabActive == \"Roles\"\n                          ? \"tab-pane fade show active\"\n                          : \"tab-pane fade show\"\n                      }\n                      id=\"nav-profile\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-profile-tab\"\n                    >\n                      <div id=\"profile2\" class=\"wrapper\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 mt-4\">\n                            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                              <h2 class=\"f-b m-0 f-20\">\n                                Roles & Responsibilities\n                              </h2>\n                            </div>\n                            <div class=\"\">\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-3\">\n                                  <h4 class=\"f-18 f-r\">Role</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4\n                                    class=\"f-18 f-b\"\n                                    style={{ marginLeft: \"-12px\" }}\n                                  >\n                                    {roleName}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-12 row align-items-center\">\n                                  <label class=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">\n                                    Roles\n                                  </label>\n                                  <div class=\"col-sm-6\">\n                                    <form class=\"d-flex flex-wrap\">\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck112\"\n                                          name=\"example1\"\n                                          checked={\n                                            role != null && rolerole != null\n                                              ? role.create || rolerole.create\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck112\"\n                                        >\n                                          Create\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck1121\"\n                                          name=\"example1\"\n                                          checked={\n                                            role != null && rolerole != null\n                                              ? role.delete || rolerole.delete\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck1121\"\n                                        >\n                                          Delete\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck1123\"\n                                          name=\"example1\"\n                                          checked={\n                                            role != null && rolerole != null\n                                              ? role.update || rolerole.update\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck1123\"\n                                        >\n                                          Edit\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11232\"\n                                          name=\"example1\"\n                                          checked={\n                                            role != null && rolerole != null\n                                              ? role.view || rolerole.view\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11232\"\n                                        >\n                                          View\n                                        </label>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-12 row align-items-center\">\n                                  <label class=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">\n                                    Tik\n                                  </label>\n                                  <div class=\"col-sm-6\">\n                                    <form class=\"d-flex flex-wrap\">\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck1122\"\n                                          name=\"example1\"\n                                          checked={\n                                            document != null &&\n                                            roledocument != null\n                                              ? document.create ||\n                                                roledocument.create\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck1122\"\n                                        >\n                                          Create\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11212\"\n                                          name=\"example1\"\n                                          checked={\n                                            document != null &&\n                                            roledocument != null\n                                              ? document.update ||\n                                                roledocument.update\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11212\"\n                                        >\n                                          Update\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11232\"\n                                          name=\"example1\"\n                                          checked={\n                                            document != null &&\n                                            roledocument != null\n                                              ? document.view ||\n                                                roledocument.view\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11232\"\n                                        >\n                                          View\n                                        </label>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-12 row align-items-center\">\n                                  <label class=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">\n                                    Templates\n                                  </label>\n                                  <div class=\"col-sm-6\">\n                                    <form class=\"d-flex flex-wrap\">\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck1122\"\n                                          name=\"example1\"\n                                          checked={\n                                            template != null &&\n                                            roletemplate != null\n                                              ? template.create ||\n                                                roletemplate.create\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck1122\"\n                                        >\n                                          Create\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11212\"\n                                          name=\"example1\"\n                                          checked={\n                                            template != null &&\n                                            roletemplate != null\n                                              ? template.delete ||\n                                                roletemplate.delete\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11212\"\n                                        >\n                                          Delete\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11232\"\n                                          name=\"example1\"\n                                          checked={\n                                            template != null &&\n                                            roletemplate != null\n                                              ? template.update ||\n                                                roletemplate.update\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11232\"\n                                        >\n                                          Edit\n                                        </label>\n                                      </div>\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck112312\"\n                                          name=\"example1\"\n                                          checked={\n                                            template != null &&\n                                            roletemplate != null\n                                              ? template.view ||\n                                                roletemplate.view\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck112312\"\n                                        >\n                                          View\n                                        </label>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-12 row align-items-center\">\n                                  <label class=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">\n                                    Invoice\n                                  </label>\n                                  <div class=\"col-sm-6\">\n                                    <form class=\"d-flex flex-wrap\">\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheckq1122\"\n                                          name=\"example1\"\n                                          checked={\n                                            invoice != null &&\n                                            roleinvoice != null\n                                              ? invoice.view || roleinvoice.view\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheckq1122\"\n                                        >\n                                          View\n                                        </label>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div class=\"row  mb-2\">\n                                <div class=\"col-lg-12 row align-items-center\">\n                                  <label class=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">\n                                    Payment\n                                  </label>\n                                  <div class=\"col-sm-6\">\n                                    <form class=\"d-flex flex-wrap\">\n                                      <div class=\"form-check-inline custom-control custom-checkbox\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id=\"customCheck11122\"\n                                          name=\"example1\"\n                                          checked={\n                                            payment != null &&\n                                            rolepayment != null\n                                              ? payment.access ||\n                                                rolepayment.access\n                                              : true\n                                          }\n                                        />\n                                        <label\n                                          class=\"custom-control-label\"\n                                          for=\"customCheck11122\"\n                                        >\n                                          Access\n                                        </label>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className={\n                        tabActive == \"Subscription\"\n                          ? \"tab-pane fade show active\"\n                          : \"tab-pane fade show\"\n                      }\n                      id=\"nav-contact\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-contact-tab\"\n                    >\n                      <div id=\"profile3\" class=\"wrapper\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 mt-4\">\n                            <div class=\"\">\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Current Plan</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {myPlan &&\n                                      myPlan.subscriptionPlanDetails.planName}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Total User Limit</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {this.state.isInfinite === true\n                                      ? \"infinite\"\n                                      : this.state.userLimit}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Validity</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {myPlan &&\n                                      myPlan.subscriptionPlanDetails.validity} {myPlan &&\n                                        myPlan.subscriptionPlanDetails.isFreeTirePlan ? \"days\": \"month\"}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Total Tik Limit</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {myPlan &&\n                                      myPlan.subscriptionPlanDetails\n                                        .transactionPerMonth}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Subscribed On</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {myPlan &&\n                                      formatDate(myPlan.startOfSubscription)}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row mb-2\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-18 f-b\">Subscription Till</h4>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                  <h4 class=\"f-18 f-r\">\n                                    {myPlan &&\n                                      formatDate(myPlan.endOfSubscription)}\n                                  </h4>\n                                </div>\n                              </div>\n                              {this.props.showReferral ? <div class=\"row mb-2\">\n                                <div class=\"mt-4 col d-flex\">\n                                 {invoice == null ? <a class=\"w-70 btn btn-default m-1 py-2 f-m\" style={{display: 'flex', alignItems: 'center'}} onClick={() => this.props.transactionDetail({Id: ''})}>\n                                    View Invoice\n                                  </a>: invoice != null && roleinvoice != null ? invoice.view || roleinvoice.view ?  <a class=\"w-70 btn btn-default m-1 py-2 f-m\" style={{display: 'flex', alignItems: 'center'}} onClick={() => this.props.transactionDetail({Id: ''})}>\n                                    View Invoice\n                                  </a>:null:null}\n                                  <a\n                                    onClick={() =>\n                                      this.props.history.push(\"/subscription\")\n                                    }\n                                    class=\"w-70 btn btn-primary m-1 f-m\"\n                                  >\n                                    Upgrade Your Plan\n                                  </a>\n                                </div>\n                                <div class=\"mt-4 col\"></div>\n                              </div>:null}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className={\n                        tabActive == \"Security\"\n                          ? \"tab-pane fade show active\"\n                          : \"tab-pane fade show\"\n                      }\n                      id=\"nav-contact1\"\n                      role=\"tabpanel\"\n                      aria-labelledby=\"nav-contact-tab\"\n                    >\n                      <div id=\"profile3\" class=\"wrapper\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 mt-4\">\n                            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                              <h2 class=\"f-b m-0 f-20\">Security</h2>\n                            </div>\n                            <div class=\"col\">\n                              <div class=\"row mb-2 br-6 p-3 org-border align-items-center txt-blk\">\n                                <div class=\"col-lg-4 col-md-4 col-xs-11\">\n                                  <h4 class=\"f-16 f-m m-1\">Phone Number</h4>\n                                </div>\n                                <div class=\"col-lg-7 col-md-7 col-xs-11\">\n                                  <h4 class=\"f-16 f-b m-1 \">\n                                    {updatedAt != undefined\n                                      ? `Updated on ${date} ${time}`\n                                      : null}\n                                  </h4>\n                                </div>\n                                <a\n                                  class=\"col-xs-1 ml-3 px-2 br-20 border-blk txt-blk right-arrow\"\n                                  onClick={this.mobileUpdateHandler}\n                                  data-target=\"#mobileupdate\"\n                                  data-toggle=\"modal\"\n                                >\n                                  <i class=\"fa fa-chevron-right\"></i>\n                                </a>\n                              </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center my-4\">\n                              <h2 class=\"f-b m-0 f-20\">Card Details</h2>\n                            </div>\n                            <div class=\"col\">\n                              {this.props.cardDetails &&\n                                this.props.cardDetails.map((e, index) => {\n                                  return (\n                                    <div class=\"row mb-2 br-6 p-3 org-border align-items-center txt-blk\">\n                                      <div class=\"col-lg-4 col-md-4 col-xs-11\">\n                                        <h4 class=\"f-16 f-m m-1\">\n                                          {e.card.funding} Card\n                                        </h4>\n                                      </div>\n                                      <div class=\"col-lg-7 col-md-7 col-xs-11\">\n                                        <h4 class=\"f-16 f-b m-1 \">\n                                          XXXX XXXX XXXX {e.card.last4}\n                                        </h4>\n                                      </div>\n                                      <a\n                                        class=\"col-xs-1 ml-3 br-20 border-blk txt-blk right-arrow\"\n                                        onClick={() => this.removeCardPopup(e.id)}\n                                        style={{paddingLeft: '6px'}}\n                                      >\n                                        <i class=\"fa fa-times\"></i>\n                                      </a>\n                                    </div>\n                                  );\n                                })}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n        {mobileNumberUpdate == true ? (\n          <MobileUpdateModal\n            closePopup={this.closePopup}\n            history={this.props.history}\n            confirmMobileUpdate={this.confirmMobileUpdate}\n          />\n        ) : null}\n        {MobileOtpPopup == true ? (\n          <MobileOtpModal\n            closePopup={this.mobileOtpModalClose}\n            history={this.props.history}\n            initialuser={this.state.user}\n            email={this.state.email}\n            password={this.state.password}\n            popupMobileVerifiFlag={this.popupMobileVerifiFlag}\n            //   sentNum={sentNum}\n          />\n        ) : null}\n        {referalPopup ? (\n          <Modal closePopup={this.closeReferalPopup}>\n            <div class=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 class=\"modal-title  f-24 mb-5 f-b\" id=\"forgotTitle\">\n                Referred\n              </h4>\n              {referralDetails.referralUser.length > 0\n                ? referralDetails.referralUser.map((e) => {\n                    return  <h4 class=\"modal-title  f-20 f-m\" id=\"\">\n                        {e.userEmail}\n                      </h4>\n                  })\n                : null}\n              <br />\n              <p class=\"text-muted\">\n                <i class=\"fa fa-exclamation-triangle\"></i>&nbsp;&nbsp;refer{\" \"}\n                <span>\n                  <b>{referralDetails.require - referralDetails.complete}</b>\n                </span>{\" \"}\n                more to get bonus\n              </p>\n            </div>\n          </Modal>\n        ) : null}\n        {isCardRemove ? (\n            <Modal closePopup={this.closeCardPopup}>\n            <div className=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 className=\"modal-title text-center f-20 f-m\" id=\"\">\n                Are you sure you want to remove card?\n              </h4>\n              <div className=\"d-flex logout-buttons\">\n                <Button\n                  type=\"button\"\n                  buttonText=\"No\"\n                  className=\"m-1 clear_button\"\n                  onClick={() => this.closeCardPopup()}\n                />\n                <Button\n                  type=\"button\"\n                  buttonText=\"Yes\"\n                  className=\"m-1\"\n                  onClick={() => this.removeCard()}\n                />\n              </div>\n            </div>\n          </Modal>\n        ):null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  firstName: state.Profile.firstName,\n  lastName: state.Profile.lastName,\n  mobileNumber: state.Profile.mobileNumber,\n  email: state.Profile.email,\n  designation: state.Profile.designation,\n  companyName: state.Profile.companyName,\n  address: state.Profile.address,\n  profileUpdateSuccess: state.Profile.profileUpdateSuccess,\n  document: state.Profile.document,\n  invoice: state.Profile.invoice,\n  payment: state.Profile.payment,\n  role: state.Profile.role,\n  template: state.Profile.template,\n  photoData: state.Profile.photoData,\n  updatedAt: state.Profile.updatedAt,\n  isSuperProvider: state.Auth.isSuperProvider,\n  userFirstname: state.Profile.userFirstname,\n  userLastname: state.Profile.userLastname,\n  roleName: state.Profile.roleName,\n  roledocument: state.Profile.Roledocument,\n  roleinvoice: state.Profile.Roleinvoice,\n  rolepayment: state.Profile.Rolepayment,\n  rolerole: state.Profile.Rolerole,\n  roletemplate: state.Profile.Roletemplate,\n  cardDetails: state.Payment.cardDetails,\n  cardRemoveSuccess: state.Payment.cardRemoveSuccess,\n  myPlan: state.Subscription.myPlan,\n  specialFeatures: state.Subscription.specialFeatures,\n  invitationCode: state.Profile.invitationCode,\n  referralDetails: state.Profile.referralDetails,\n  transactionDetailSuccess: state.Transaction.transactionDetailSuccess,\n  showReferral: state.Profile.showReferral,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  profileEdit: (payload) => dispatch(actions.profileEdit(payload)),\n  profileUpdate: (payload) => dispatch(actions.profileUpdate(payload)),\n  profilePic: (payload) => dispatch(actions.profilePicUpdate(payload)),\n  customerPaymentDetail: () => dispatch(actions.customerPaymentDetail()),\n  cardRemove: (payload) => dispatch(actions.cardRemove(payload)),\n  getMyPlan: () => dispatch(actions.getMyPlan()),\n  transactionDetail: (payload) => dispatch(actions.transactionDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","C:\\react-main\\src\\container\\Subscription\\Subscription.jsx",["1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  HeaderWithoutSearch\n} from \"../../component/index.jsx\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\nimport dollar from \"../../assets/img/dollar.png\";\n\nclass Subscription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAccord: false,\n      sharedModal: false,\n      sharedMeModal: false,\n      index: \"\",\n      initial: \"start\",\n      tab: [],\n      showNotification: false,\n      logout: false,\n      price: [],\n      planType: \"\",\n      showSuccess: false,\n      message: \"\",\n    };\n  }\n  componentDidMount() {\n    const isSuperprovider = JSON.parse(localStorage.getItem('isSuperprovider'));\n    this.props.getSubscription();\n    if(isSuperprovider == ''){\n      this.props.history.push('/dashboard')\n    }\n  }\n  successPopup = () => {\n    this.setState({\n      deleteSuccessFlag: false,\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: true,\n    });\n\n    // this.props.getDocumentListInfo('Drafts');\n  };\n\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.history.push(\"/dashboard\");\n  };\n  showAccord = (i, e) => {\n    this.setState({ tab: this.updateTabs(i) });\n  };\n  updateTabs(id) {\n    let tabs = this.state.tab;\n    let newtabs = tabs.map((tab, index) => {\n      if (index == id) {\n        if (tab.activeAcc == true) {\n          tab.activeAcc = false;\n        } else {\n          tab.activeAcc = true;\n        }\n      } else {\n        tab.activeAcc = false;\n      }\n      return tab;\n    });\n    return newtabs;\n  }\n  sum = (obj) => {\n    let sum = 0;\n    for (let el in obj) {\n      if (obj.hasOwnProperty(el)) {\n        sum += parseFloat(obj[el]);\n      }\n    }\n    return sum;\n  };\n  componentDidUpdate(prevprops) {\n    if (prevprops.subscriptionData != this.props.subscriptionData) {\n      this.props.subscriptionData.map((e, i) => {\n        const priceList = this.state.price;\n        const data = priceList[i];\n        const object = {\n          ...data,\n          ...e.specialFeatures.map((j) => j.price),\n          plan: e.type == 'pay_per_use' ? e.pricePerTransaction * e.transactionPerMonth : e.planPrice,\n        };\n        const objSum = this.sum(object);\n        priceList[i] = objSum;\n        this.setState({ price: priceList });\n      });\n    }\n    if (\n      prevprops.subscriptionSelectionPlan !=\n      this.props.subscriptionSelectionPlan\n    ) {\n      \n      localStorage.setItem('pprou',JSON.stringify(true))\n      if(this.state.planType == 'pay_per_use'){\n        this.setState({\n          showSuccess: true,\n          message: this.props.successMsg,\n        })\n      }else{\n        this.props.history.push('/payment')\n      }\n    }\n    if(prevprops.payableId != this.props.payableId){\n      if(this.props.payableId.data.unpaidPlans.length > 0){\n        this.props.history.push('/payment')\n      }\n    }\n  }\n  closePopup = () => {\n    this.setState({ sharedModal: false, sharedMeModal: false });\n  };\n\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n  planSelection = (id, event) => {\n    this.setState({ planType: \"level_base\" });\n    if (\n      this.props.myPlan &&\n      this.props.myPlan.subscriptionPlanDetails._id != id &&\n      event.target.text != \"Subscribed\" &&\n      !this.props.myPlan.subscriptionPlanDetails.isFreeTirePlan\n    ) {\n      this.props.subscriptionUpdateSelection({ subscriptionId: id });\n      this.props.newSubscriptipn({newSubId: id})\n\n    } else if (event.target.text != \"Subscribed\") {\n      this.props.subscriptionSelection({ subscriptionId: id });\n      this.props.newSubscriptipn({newSubId: id})\n      console.log('selection')\n    }\n  };\n  payPerUse = (id, event) => {\n    console.log(id, event.target.text);\n    this.setState({ planType: \"pay_per_use\" });\n    if (\n      this.props.myPlan &&\n      this.props.myPlan.subscriptionPlanDetails._id != id &&\n      event.target.text != \"Subscribed\" &&\n      !this.props.myPlan.subscriptionPlanDetails.isFreeTirePlan\n    ) {\n      this.props.subscriptionUpdateSelection({ subscriptionId: id });\n      this.props.newSubscriptipn({newSubId: id})\n    } else if (event.target.text != \"Subscribed\") {\n      this.props.subscriptionSelection({ subscriptionId: id });\n      this.props.newSubscriptipn({newSubId: id})\n    }\n  };\n\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n\n  render() {\n    const {\n      state: { showNotification, logout, price, showSuccess, message },\n      props: { subscriptionData, myPlan },\n    } = this;\n    console.log(this.props.payableId)\n    return (\n      <>\n        <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container my-5\">\n          <div class=\"row\">\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n              <h1 class=\"text-center txt-blk mb-2 f-b\">Subscription Plans</h1>\n              <a\n                class=\"txt-org cm-tw-underline mb-5\"\n              >\n              </a>\n            </div>\n            {subscriptionData &&\n              subscriptionData.map((e, i) => {\n                {console.log(e.validity)}\n                return (\n                  <div class=\"col-lg-4\" style={{ marginBottom: \"12px\" }}>\n                    <div class=\"box-shd br-20\">\n                      <div class=\"p-5 metadata\">\n                        <div class=\"top-div d-block text-center\">\n                          <h3 class=\"f-b f-24 minH-50\">{e.planName}</h3>\n                          <img class=\"img-fluid my-3\" src={dollar} />\n                          <div class=\"f-40 f-b\">\n                            <span style={{fontSize: '22px'}}>$</span>{price[i]}\n                            <span style={{fontSize: '22px'}} class=\"text-muted\"> / {e.validity <= 1 ? '': e.validity} {e.validity > 1 ? 'Months':'Month'}</span>\n                          </div>\n                        </div>\n                        <hr />\n                        <div class=\"text-center\">\n                          {e.specialFeatures.map((k) => {\n                            if(e.type == 'pay_per_use'){\n                              return (\n                                <>\n                                  <p>\n                                    {\" \"}\n                                    {k.show_case_name} - ${k.price}\n                                  </p>\n                                </>\n                              );\n                            }else{\n                              return (\n                                <>\n                                  <p>\n                                    {\" \"}\n                                    {k.show_case_name}\n                                  </p>\n                                </>\n                              );\n                            }\n                          })}\n                           <p>Document size per transaction - Max.{e.docSizePerTransaction}</p> \n                           <p>Document per month - Max.{e.transactionPerMonth}</p> \n                           {e.type == 'pay_per_use' ? <p>pricePerTransaction - ${e.pricePerTransaction}</p> : null}\n                        </div>\n                        <div class=\"col-lg-12 d-flex mt-5\">\n                          <a\n                            onClick={(event) => {\n                              e.type === \"pay_per_use\"\n                                ? this.payPerUse(e._id, event)\n                                : this.planSelection(e._id, event);\n                            }}\n                            className={\n                              myPlan &&\n                              myPlan.subscriptionPlanDetails._id == e._id\n                                ? \"btn btn-org m-1 w-100 f-b\"\n                                : \"btn btn-default m-1 w-100 f-b\"\n                            }\n                          >\n                            {myPlan.subscriptionPlanDetails && !myPlan.subscriptionPlanDetails.isFreeTirePlan\n                              ? myPlan.subscriptionPlanDetails._id == e._id\n                                ? \"Subscribed\"\n                                : \"Upgrade\"\n                              : \"Subscribe\"}\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roledocument: state.Profile.Roledocument,\n    document: state.Profile.document,\n    subscriptionData: state.Subscription.subscriptionPlan,\n    subscriptionSelectionPlan: state.Subscription.subscriptionSelectionPlan,\n    myPlan: state.Subscription.myPlan,\n    successMsg: state.Subscription.successMsg,\n    subscriptionPayableData: state.Subscription.subscriptionPayable,\n    payableId: state.Subscription.payableId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubscription: () => dispatch(actions.getSubscription()),\n  subscriptionSelection: (payload) => dispatch(actions.subscriptionSelection(payload)),\n  subscriptionUpdateSelection: (payload) => dispatch(actions.subscriptionUpdateSelection(payload)),\n  getMyPlan: () => dispatch(actions.getMyPlan()),\n  subscriptionPayable: (payload) => dispatch(actions.subscriptionPayable(payload)),\n  newSubscriptipn: (payload) => dispatch(actions.newSubscriptipn(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscription);\n","C:\\react-main\\src\\container\\Payment\\Payments.jsx",["1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441"],"/* eslint-disable array-callback-return */\n/* eslint-disable eqeqeq */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-undef */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  ProfileDropdown,\n  Modal,\n  Button,\n  HeaderWithoutSearch,\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { formatDate } from \"../../helper/utility.js\";\nimport { Link } from \"react-router-dom\";\nimport ExpiryDateInput from \"../../component/ExpiryDateInput.jsx\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport { toast } from \"react-toastify\";\nimport searcho from \"../../assets/img/searcho.png\";\nimport header_logo from \"../../assets/img/logo.png\";\nimport logom from \"../../assets/img/logom.png\";\nimport doc from \"../../assets/img/doc.png\";\n\nclass Payment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAccord: false,\n      index: \"\",\n      initial: \"start\",\n      tab: [\n        {\n          paymentMethod: \"Debit Card\",\n          activeAcc: false,\n          cardType: \"debit\",\n        },\n        {\n          paymentMethod: \"Credit Card\",\n          activeAcc: false,\n          cardType: \"credit\",\n        },\n      ],\n      expiryDate: \"\",\n      cardNum: \"\",\n      errormessage: \"\",\n      error: false,\n      submit: false,\n      errorField: \"\",\n      price: [],\n      cvv0: \"\",\n      isSave0: \"false\",\n      showSuccess: false,\n      saveCard: false,\n      paymentMethodId: \"\",\n      cardType: \"\",\n      expiryDate0: \"\",\n      warning: false,\n      promo: \"\",\n      promoApplied: false,\n      promoSubId: \"\",\n      totalAmount: 0,\n      loader: false,\n      discount: 0,\n    };\n  }\n  componentDidMount() {\n    const { payableId, newSubId } = this.props;\n    this.props.subscriptionPayable({\n      subscriptionList: payableId.data && payableId.data.unpaidPlans,\n      newSubscriptionId: newSubId,\n    });\n    const pprou = JSON.parse(localStorage.getItem(\"pprou\"));\n    const isSuperprovider = JSON.parse(localStorage.getItem(\"isSuperprovider\"));\n    if (pprou === true) {\n      this.props.customerPaymentDetail();\n      this.props.invoiceDetail();\n    } else {\n      // this.props.history.push(\"/dashboard\");\n    }\n    if (isSuperprovider == \"\") {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  successPopup = () => {\n    this.setState({\n      deleteSuccessFlag: false,\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: true,\n    });\n\n    // this.props.getDocumentListInfo('Drafts');\n  };\n\n  successPopupClosePopup = () => {\n    this.props.tikInitialization();\n\n    this.setState({\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: false,\n      deleteSuccessFlag: false,\n    });\n  };\n  showAccord = (i, cardType) => {\n    this.updateTabs(i);\n    this.setState({\n      error: false,\n      errorField: \"\",\n      errormessage: \"\",\n      expiryDate0: \"\",\n      cardNum0: \"\",\n      cardName0: \"\",\n      cvv0: \"\",\n      saveCard: false,\n      isSave0: false,\n      cardType,\n      showAccord: true,\n    });\n  };\n  updateTabs(id) {\n    let tabs = this.state.tab;\n    let newtabs = tabs.map((tab, index) => {\n      if (index == id) {\n        if (tab.activeAcc == true) {\n          tab.activeAcc = false;\n        } else {\n          tab.activeAcc = true;\n        }\n      } else {\n        tab.activeAcc = false;\n      }\n      return tab;\n    });\n    this.setState({ tab: newtabs });\n  }\n  sum = (obj) => {\n    let sum = 0;\n    for (let el in obj) {\n      if (obj.hasOwnProperty(el)) {\n        sum += parseFloat(obj[el]);\n      }\n    }\n    return sum;\n  };\n  componentDidUpdate(prevprops) {\n    let sum = 0;\n    const { invoiceDetailData } = this.props;\n    if (prevprops.invoiceDetailData != this.props.invoiceDetailData) {\n      invoiceDetailData &&\n        invoiceDetailData.subscriptionList.map((e, i) => {\n          const priceList = this.state.price;\n          const data = priceList[i];\n          const object = {\n            ...data,\n            ...e.subscriptionPlanDetails.specialFeatures.map((j) => j.price),\n            plan:\n              e.subscriptionPlanDetails.type == \"pay_per_use\"\n                ? e.subscriptionPlanDetails.pricePerTransaction *\n                  e.subscriptionPlanDetails.transactionPerMonth\n                : e.subscriptionPlanDetails.planPrice,\n          };\n          const objSum = this.sum(object);\n          priceList[i] = objSum;\n          this.setState({ price: priceList });\n        });\n    }\n    if (prevprops.cardPaymentSuccess != this.props.cardPaymentSuccess) {\n      localStorage.setItem(\"pprou\", JSON.stringify(false));\n      this.setState({\n        showSuccess: true,\n        message: \"Payment successfully completed\",\n        loader: false,\n      });\n    }\n    if (prevprops.cardError != this.props.cardError) {\n      localStorage.setItem(\"pprou\", JSON.stringify(false));\n      toast.error(this.props.cardError.msg);\n      this.setState({\n        loader: false,\n      });\n    }\n    if (this.props.promoSuccess != prevprops.promoSuccess) {\n      this.setState({ promoApplied: true, discount: this.props.promoSuccess != '' ? this.props.promoSuccess.data.validationAndPriseFilter.discout : 0});\n      this.props.payableId.data.unpaidPlans.map((e) => {\n        if (this.props.promoSuccess && this.props.promoSuccess.data.subscriptionPlan == e) {\n          this.setState({ promoSubId: e });\n        }\n      });\n      this.props.subscriptionPayableData.requiredToPay.map((e) => {\n        sum =\n          e.subscriptionPlanDetails._id ==\n          this.props.promoSuccess.data.subscriptionPlan\n            ? sum + e.totalCost -\n              e.totalCost *\n                (this.props.promoSuccess != \"\"\n                  ? this.props.promoSuccess.data.discountPercentage / 100\n                  : 1)\n            : e.totalCost + sum;\n      });\n    console.log('SUM',sum)\n      const newSubSum =\n        this.props.promoSuccess != \"\"\n          ? this.props.subscriptionPayableData.newSubscriptionDetails._id ==\n            this.props.promoSuccess.data.subscriptionPlan\n            ? this.props.subscriptionPayableData.newSubscriptionDetails\n                .totalCost -\n              (this.props.promoSuccess &&\n                this.props.subscriptionPayableData.newSubscriptionDetails\n                  .totalCost *\n                  (this.props.promoSuccess != \"\"\n                    ? this.props.promoSuccess.data.discountPercentage / 100\n                    : 1))\n            : this.props.subscriptionPayableData.newSubscriptionDetails\n                .totalCost\n          : this.props.subscriptionPayableData.newSubscriptionDetails.totalCost;\n\n      let total = sum + newSubSum;\n      this.setState({ totalAmount: total });\n      console.log(\"total\", total);\n    }\n    if (\n      this.props.subscriptionPayableData != prevprops.subscriptionPayableData\n    ) {\n      this.props.subscriptionPayableData &&\n        this.props.subscriptionPayableData.requiredToPay.map((e) => {\n          sum = e.totalCost + sum;\n        });\n      let total =\n        sum +\n        this.props.subscriptionPayableData.newSubscriptionDetails.totalCost;\n      console.log(\"total\", sum);\n      this.setState({ totalAmount: total });\n    }\n  }\n\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  handleChange = (e, key) => {\n    const special = /^(\\s*[0-9]+\\s*)+$/;\n    if (this.state.submit) {\n      if (key == \"cardNum0\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"card number is required\",\n          error: true,\n          errorField: \"cardNum0\",\n        });\n      } else if (!special.test(e.target.value) && key == \"cardNum0\") {\n        this.setState({\n          errormessage: \"only number is allowed\",\n          error: true,\n          errorField: \"cardNum0\",\n        });\n      } else if (key == \"cardNum1\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"card number is required\",\n          error: true,\n          errorField: \"cardNum1\",\n        });\n      } else if (!special.test(e.target.value) && key == \"cardNum1\") {\n        this.setState({\n          errormessage: \"only number is allowed\",\n          error: true,\n          errorField: \"cardNum1\",\n        });\n      } else if (key == \"cardName0\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"card name is required\",\n          error: true,\n          errorField: \"cardName0\",\n        });\n      } else if (key == \"cvv0\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"CVV is required\",\n          error: true,\n          errorField: \"cvv0\",\n        });\n      } else {\n        this.setState({\n          errormessage: \"\",\n          error: false,\n          errorField: \"\",\n        });\n      }\n    }\n    if (key == \"cardNum0\") {\n      const cardNumber = e.target.value\n        .replace(/\\W/gi, \"\")\n        .replace(/(.{4})/g, \"$1 \");\n      this.setState({\n        cardNum0: cardNumber,\n        cardNumWitoutSpace: e.target.value,\n      });\n    } else if (e.target.type == \"checkbox\") {\n      this.setState({ [key]: e.target.checked });\n    } else {\n      this.setState({ [key]: e.target.value });\n    }\n  };\n  handleExpiryDate = (e, key) => {\n    if (this.state.submit) {\n      if (key == `expiryDate0` && e == \"\") {\n        this.setState({\n          errormessage: \"Expiry date is required\",\n          error: true,\n          errorField: `expiryDate0`,\n        });\n      } else if (e.length < 5) {\n        this.setState({\n          errormessage: \"Expiry date is required\",\n          error: true,\n          errorField: `expiryDate0`,\n        });\n      } else {\n        this.setState({\n          errormessage: \"\",\n          error: false,\n          errorField: \"\",\n        });\n      }\n    }\n    if (e.length < 6) {\n      this.setState({ [key]: e });\n    }\n  };\n  handleSubmit = () => {\n    const iscardSelected = this.state.tab.some((e) => e.activeAcc == true);\n    const special = /^(\\s*[0-9]+\\s*)+$/;\n    const { price, cvv0 } = this.state;\n    this.setState({\n      submit: true,\n      loader: true,\n    });\n    const date = this.state.expiryDate0.split(\"/\");\n    const month = date[0];\n    const year = `20${date[1]}`;\n\n    if (iscardSelected) {\n      if (this.state.cardNum0 == \"\") {\n        this.setState({\n          errormessage: \"card number is required\",\n          error: true,\n          errorField: \"cardNum0\",\n        });\n      } else if (!special.test(this.state.cardNum0)) {\n        this.setState({\n          errormessage: \"only number is allowed\",\n          error: true,\n          errorField: \"cardNum0\",\n        });\n      } else if (this.state.cardName0 == \"\") {\n        this.setState({\n          errormessage: \"card name is required\",\n          error: true,\n          errorField: \"cardName0\",\n        });\n      } else if (this.state.cvv0 == \"\") {\n        this.setState({\n          errormessage: \"CVV is required\",\n          error: true,\n          errorField: \"cvv0\",\n        });\n      } else {\n        this.setState({\n          errormessage: \"\",\n          error: false,\n          errorField: \"\",\n        });\n\n        this.props.cardPayment({\n          cardNumber: this.state.cardNumWitoutSpace,\n          cvc: cvv0,\n          expiryYear: year,\n          expiryMonth: month,\n          invoiceId: this.props.invoiceDetailData._id,\n          amount: this.state.totalAmount,\n          paymentMethodId: \"\",\n          isSave: this.state.isSave0,\n          cardType: this.state.cardType,\n          promocode: {\n            code: this.state.promoSubId ? this.state.promo : \"\",\n            subscriptionId: this.state.promoSubId,\n          },\n          newSubscriptionId:\n            this.props.newSubId != \"\"\n              ? this.props.newSubId\n              : this.props.subscriptionPayableData.newSubscriptionDetails._id,\n          requiredToPay:\n            this.props.payableId && this.props.payableId.data.unpaidPlans,\n        });\n      }\n    } else if (this.state.saveCard) {\n      this.props.cardPayment({\n        paymentMethodId: this.state.paymentMethodId,\n        invoiceId: this.props.invoiceDetailData._id,\n        amount: this.state.totalAmount,\n        promocode: {\n          code: this.state.promo,\n          subscriptionId: this.state.promoSubId,\n        },\n        newSubscriptionId:\n          this.props.newSubId != \"\"\n            ? this.props.newSubId\n            : this.props.subscriptionPayableData.newSubscriptionDetails._id,\n        requiredToPay:\n          this.props.payableId && this.props.payableId.data.unpaidPlans,\n      });\n    } else {\n      toast.error(\"Please select the card\");\n    }\n  };\n  closeSuccessPopup = () => {\n    this.setState({\n      showSuccess: false,\n    });\n    this.props.history.push(\"/dashboard\");\n  };\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  cardChange = (data) => {\n    this.updateTabs();\n    this.setState({\n      error: false,\n      errorField: \"\",\n      errormessage: \"\",\n      expiryDate0: \"\",\n      cardNum0: \"\",\n      cardName0: \"\",\n      cvv0: \"\",\n      saveCard: true,\n      paymentMethodId: data.id,\n      cardIndex: data.id,\n    });\n  };\n  promoHandler = (e) => {\n    this.setState({ promo: e.target.value });\n  };\n  promoApply = () => {\n    let newReqId =\n      this.props.payableId && this.props.payableId.data.unpaidPlans;\n    newReqId.push(this.props.newSubId);\n    this.props.promo({\n      promoCode: this.state.promo,\n      newSubId: [...new Set(newReqId)],\n    });\n  };\n\n  render() {\n    const {\n      showNotification,\n      logout,\n      error,\n      errorField,\n      errormessage,\n      price,\n      message,\n      showSuccess,\n      loader,\n    } = this.state;\n    const { invoiceDetailData, subscriptionPayableData } = this.props;\n    // subscriptionPayableData != undefined && subscriptionPayableData.map\n    console.log(\n      this.props.payableId,\n      this.props.newSubId,\n      subscriptionPayableData\n    );\n    const date = formatDate(\n      invoiceDetailData &&\n        invoiceDetailData.subscriptionList[\n          invoiceDetailData.subscriptionList.length - 1\n        ].createdAt\n    );\n    console.log(invoiceDetailData);\n    return (\n      <>\n        <HeaderWithoutSearch />\n        <div id=\"payment\" class=\"wrapper\">\n          <div class=\"row\">\n            <div class=\"col-xl-12\">\n              <div\n                class=\"containerBox p-0\"\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n              >\n                <div class=\"row\" style={{ minHeight: \"83vh\" }}>\n                  <div\n                    id=\"createTemplateleft\"\n                    class=\"col-xl-8 col-lg-8 col-sm-12 border-right py-4 pl-5\"\n                  >\n                    {/* <!-- <div class=\"fixHeight\" style=\"min-height: calc(100vh - 280px);position: relative;\"> --> */}\n                    <div>\n                      <div id=\"paymentGateway\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-12\">\n                            <div class=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                              <h2 class=\"f-b m-0\">Your Card</h2>\n                            </div>\n                            <div>\n                              <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                      <h4 class=\"f-16 f-b\">Name</h4>\n                                    </div>\n                                    <div class=\"col-lg-9\">\n                                      <h4 class=\"f-16 f-r\">\n                                        {invoiceDetailData &&\n                                          `${invoiceDetailData.providerDetails.firstName} ${invoiceDetailData.providerDetails.lastName}`}\n                                      </h4>\n                                    </div>\n                                  </div>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                      <h4 class=\"f-16 f-b\">Email Address</h4>\n                                    </div>\n                                    <div class=\"col-lg-9\">\n                                      <h4 class=\"f-16 f-r\">\n                                        {invoiceDetailData &&\n                                          invoiceDetailData.providerDetails\n                                            .email}\n                                      </h4>\n                                    </div>\n                                  </div>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                      <h4 class=\"f-16 f-b\">\n                                        Subscription Date\n                                      </h4>\n                                    </div>\n                                    <div class=\"col-lg-9\">\n                                      <h4 class=\"f-16 f-r\">{date}</h4>\n                                    </div>\n                                  </div>\n                                  <div class=\"row\">\n                                    <div class=\"col-lg-3\">\n                                      <h4 class=\"f-16 f-b\">Validity</h4>\n                                    </div>\n                                    <div class=\"col-lg-9\">\n                                      <h4 class=\"f-16 f-r\">1 month</h4>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                  <div className=\"row\">\n                                    <div\n                                      className=\"col-lg-3\"\n                                      style={{\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                      }}\n                                    >\n                                      <label>Promo</label>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                      <input\n                                        type=\"text\"\n                                        class=\"form-control f-16 px-3 py-2\"\n                                        onChange={this.promoHandler}\n                                      />\n                                      <div\n                                        className=\"mx-auto mt-2\"\n                                        style={{ width: \"50%\" }}\n                                      >\n                                        <a\n                                          onClick={\n                                            this.state.promoApplied\n                                              ? null\n                                              : this.promoApply\n                                          }\n                                          data-toggle=\"modal\"\n                                          data-target=\"#activation\"\n                                          className={\n                                            this.state.promoApplied\n                                              ? \"disabled btn btn-org w-100 text-center mx-auto d-block\"\n                                              : \"btn btn-org w-100 text-center mx-auto d-block\"\n                                          }\n                                        >\n                                          Apply\n                                        </a>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div class=\"row org-border my-2 mx-1 br-6 p-3\">\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-16 f-b\">Product ID</h4>\n                                  <h4 class=\"f-16 f-r\">\n                                    {/* {invoiceDetailData &&\n                                      invoiceDetailData.subscriptionList[\n                                        invoiceDetailData.subscriptionList\n                                          .length - 1\n                                      ].subscriptionPlanDetails._id} */}\n                                    {subscriptionPayableData &&\n                                      subscriptionPayableData\n                                        .newSubscriptionDetails._id}\n                                  </h4>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-16 f-b\">Product Name</h4>\n                                  <h4 class=\"f-16 f-r\">\n                                    {/* {invoiceDetailData &&\n                                      invoiceDetailData.subscriptionList[\n                                        invoiceDetailData.subscriptionList\n                                          .length - 1\n                                      ].subscriptionPlanDetails.planName} */}\n                                    {subscriptionPayableData &&\n                                      subscriptionPayableData\n                                        .newSubscriptionDetails.planName}\n                                  </h4>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                  <h4 class=\"f-16 f-b\">Amount</h4>\n                                  <h4 class=\"f-16 f-r\">\n                                    $\n                                    {/* {subscriptionPayableData &&\n                                      subscriptionPayableData\n                                        .newSubscriptionDetails.totalCost} */}\n                                    {this.props.promoSuccess != \"\"\n                                      ? this.props.subscriptionPayableData\n                                          .newSubscriptionDetails._id ==\n                                        this.props.promoSuccess.data\n                                          .subscriptionPlan\n                                        ? this.props.subscriptionPayableData\n                                            .newSubscriptionDetails.totalCost -\n                                          (this.props.promoSuccess &&\n                                            this.props.subscriptionPayableData\n                                              .newSubscriptionDetails\n                                              .totalCost *\n                                              (this.props.promoSuccess != \"\"\n                                                ? this.props.promoSuccess.data\n                                                    .discountPercentage / 100\n                                                : 1))\n                                        : this.props.subscriptionPayableData &&\n                                          this.props.subscriptionPayableData\n                                            .newSubscriptionDetails.totalCost\n                                      : this.props.subscriptionPayableData &&\n                                        this.props.subscriptionPayableData\n                                          .newSubscriptionDetails.totalCost}\n                                  </h4>\n                                </div>\n                              </div>\n                              {subscriptionPayableData &&\n                                subscriptionPayableData.requiredToPay.map(\n                                  (e) => {\n                                    return (\n                                      <>\n                                        <div class=\"row org-border my-2 mx-1 br-6 p-3\">\n                                          <div class=\"col-lg-4\">\n                                            <h4 class=\"f-16 f-b\">Product ID</h4>\n                                            <h4 class=\"f-16 f-r\">\n                                              {/* {invoiceDetailData &&\n                                    invoiceDetailData.subscriptionList[\n                                      invoiceDetailData.subscriptionList\n                                        .length - 1\n                                    ].subscriptionPlanDetails._id} */}\n                                              {e._id}\n                                            </h4>\n                                          </div>\n                                          <div class=\"col-lg-4\">\n                                            <h4 class=\"f-16 f-b\">\n                                              Product Name\n                                            </h4>\n                                            <h4 class=\"f-16 f-r\">\n                                              {/* {invoiceDetailData &&\n                                    invoiceDetailData.subscriptionList[\n                                      invoiceDetailData.subscriptionList\n                                        .length - 1\n                                    ].subscriptionPlanDetails.planName} */}\n                                              {\n                                                e.subscriptionPlanDetails\n                                                  .planName\n                                              }\n                                            </h4>\n                                          </div>\n                                          <div class=\"col-lg-4\">\n                                            <h4 class=\"f-16 f-b\">Amount</h4>\n                                            <h4 class=\"f-16 f-r\">\n                                              $\n                                              {this.props.promoSuccess != \"\"\n                                                ? e.subscriptionPlanDetails\n                                                    ._id ==\n                                                  this.props.promoSuccess.data\n                                                    .subscriptionPlan\n                                                  ? e.totalCost -\n                                                    (this.props.promoSuccess &&\n                                                      e.totalCost *\n                                                        (this.props\n                                                          .promoSuccess != \"\"\n                                                          ? this.props\n                                                              .promoSuccess.data\n                                                              .discountPercentage /\n                                                            100\n                                                          : 1))\n                                                  : e.totalCost\n                                                : e.totalCost}\n                                            </h4>\n                                          </div>\n                                        </div>\n                                      </>\n                                    );\n                                  }\n                                )}\n                              <div class=\"row\">\n                                <div class=\"col-lg-3\">\n                                  <h4 class=\"f-16 f-b\">Discount</h4>\n                                </div>\n                                <div class=\"col-lg-9\">\n                                  <h4 class=\"f-16 f-r\">\n                                    \n                                    {/* {subscriptionPayableData &&\n                                      subscriptionPayableData.totalCost - (subscriptionPayableData && this.props.promoSuccess &&\n                                      subscriptionPayableData.totalCost * (this.props.promoSuccess != '' ? (this.props.promoSuccess.data.discountPercentage/100):1))} */}\n                                    {`$ ${this.state.discount}`}\n                                  </h4>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"col-lg-3\">\n                                  <h4 class=\"f-16 f-b\">Total Amount</h4>\n                                </div>\n                                <div class=\"col-lg-9\">\n                                  <h4 class=\"f-16 f-r\">\n                                    $\n                                    {/* {subscriptionPayableData &&\n                                      subscriptionPayableData.totalCost - (subscriptionPayableData && this.props.promoSuccess &&\n                                      subscriptionPayableData.totalCost * (this.props.promoSuccess != '' ? (this.props.promoSuccess.data.discountPercentage/100):1))} */}\n                                    {this.state.totalAmount}\n                                  </h4>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    id=\"createTemplateright\"\n                    class=\"col-xl-4 col-lg-4 col-sm-12\"\n                    style={{ paddingLeft: \"33px\" }}\n                  >\n                    <div class=\"table-title d-flex justify-content-between align-items-center mt-3 mb-4\">\n                      <h2 class=\"f-b m-0\">Select Payment Method</h2>\n                    </div>\n                    <div class=\"d-flex justify-content-between flex-column\">\n                      <div\n                        class=\"pr-3 br-6 mr-2 \"\n                        style={{\n                          maxHeight: \"calc(100vh - 230px)\",\n                          overflowY: \"auto\",\n                        }}\n                      >\n                        <h4>Saved Cards</h4>\n                        {this.props.cardDetails &&\n                          this.props.cardDetails.map((e, index) => {\n                            return (\n                              <div class=\"custom-control custom-radio org-border br-6 my-1 p-2\">\n                                <input\n                                  type=\"radio\"\n                                  class=\"custom-control-input\"\n                                  id={e.id}\n                                  name=\"radio-stacked\"\n                                  onChange={() => this.cardChange(e)}\n                                  checked={\n                                    this.state.saveCard &&\n                                    this.state.cardIndex == e.id\n                                      ? true\n                                      : false\n                                  }\n                                />\n                                <label\n                                  class=\"custom-control-label radio-custom\"\n                                  for={e.id}\n                                >\n                                  {e.card.funding} Card &nbsp;&nbsp;&nbsp;&nbsp;\n                                  <b>XXXX XXXX XXXX {e.card.last4}</b>\n                                </label>\n                              </div>\n                            );\n                          })}\n                        <div id=\"accordion1\" class=\"mt-2\">\n                          {/* <!-- <div class=\"middle-line\">\n                                        <div class=\"mCircle mx-auto mb-4\"></div>\n                                    </div> --> */}\n                          {this.state.tab &&\n                            this.state.tab.map((e, i) => {\n                              return (\n                                <div class=\"card\">\n                                  <div class=\"card-header\" id=\"headingOne\">\n                                    <h5\n                                      class=\"m-0 d-flex justify-content-between align-items-center\"\n                                      style={{ fontSize: \"12px\" }}\n                                    >\n                                      <div>\n                                        <h5\n                                          class=\"f-20 f-m\"\n                                          style={{ marginBottom: \"0px\" }}\n                                        >\n                                          {e.paymentMethod}\n                                        </h5>\n                                      </div>\n                                      <a\n                                        onClick={() =>\n                                          this.showAccord(i, e.cardType)\n                                        }\n                                        data-toggle=\"collapse\"\n                                        data-target=\"#collapseOne\"\n                                        aria-expanded=\"true\"\n                                        aria-controls=\"collapseOne\"\n                                      >\n                                        {e.activeAcc ? (\n                                          <i class=\"fa fa-angle-down\"></i>\n                                        ) : (\n                                          <i class=\"fa fa-angle-right\"></i>\n                                        )}\n                                      </a>\n                                    </h5>\n                                  </div>\n\n                                  <div\n                                    id=\"collapseOne\"\n                                    class={\n                                      e.activeAcc ? \"collapse show\" : \"collapse\"\n                                    }\n                                    aria-labelledby=\"headingOne\"\n                                    data-parent=\"#accordion1\"\n                                  >\n                                    <div class=\"card-body\">\n                                      <div class=\"form-group row align-items-center\">\n                                        <label class=\"col-sm-4 col-form-label f-18 f-m\">\n                                          Card Number\n                                        </label>\n                                        <div class=\"col-sm-8\">\n                                          <input\n                                            id=\"cardNum\"\n                                            type=\"text\"\n                                            class=\"form-control f-16\"\n                                            placeholder=\"Enter Card Number\"\n                                            onChange={(e) =>\n                                              this.handleChange(e, `cardNum0`)\n                                            }\n                                            maxlength=\"19\"\n                                            value={this.state.cardNum0}\n                                          />\n                                          {error && errorField == `cardNum0` ? (\n                                            <div style={{ color: \"red\" }}>\n                                              {errormessage}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div class=\"form-group row align-items-center\">\n                                        <label class=\"col-sm-4 col-form-label f-18 f-m\">\n                                          Name on Card\n                                        </label>\n                                        <div class=\"col-sm-8\">\n                                          <input\n                                            type=\"text\"\n                                            class=\"form-control f-16\"\n                                            placeholder=\"Enter Card Name\"\n                                            onChange={(e) =>\n                                              this.handleChange(e, `cardName0`)\n                                            }\n                                            value={this.state.cardName0}\n                                          />\n                                          {error &&\n                                          errorField == `cardName0` ? (\n                                            <div style={{ color: \"red\" }}>\n                                              {errormessage}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group row align-items-center\">\n                                        <label\n                                          for=\"\"\n                                          class=\"col-sm-4 col-form-label f-18 f-m\"\n                                        >\n                                          Expiry Date\n                                        </label>\n                                        <div class=\"col-sm-8\">\n                                          <ExpiryDateInput\n                                            label=\"Expiry Date\"\n                                            onChange={(e) =>\n                                              this.handleExpiryDate(\n                                                e,\n                                                `expiryDate0`\n                                              )\n                                            }\n                                            value={this.state.expiryDate0}\n                                            disabled={false}\n                                            onBlur={(e) =>\n                                              this.handleExpiryDate(\n                                                e,\n                                                `expiryDate0`\n                                              )\n                                            }\n                                          />\n                                          {error &&\n                                          errorField == `expiryDate0` ? (\n                                            <div style={{ color: \"red\" }}>\n                                              {errormessage}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div class=\"form-group row align-items-center\">\n                                        <label\n                                          for=\"\"\n                                          class=\"col-sm-4 col-form-label f-18 f-m\"\n                                        >\n                                          CVV\n                                        </label>\n                                        <div class=\"col-sm-8\">\n                                          <input\n                                            type=\"text\"\n                                            class=\"form-control f-16\"\n                                            id=\"\"\n                                            placeholder=\"Enter CVV Number\"\n                                            onChange={(e) =>\n                                              this.handleChange(e, `cvv0`)\n                                            }\n                                            maxlength=\"3\"\n                                            value={this.state.cvv0}\n                                          />\n                                          {error && errorField == `cvv0` ? (\n                                            <div style={{ color: \"red\" }}>\n                                              {errormessage}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div class=\"custom-control custom-checkbox check-dipend\">\n                                        <input\n                                          type=\"checkbox\"\n                                          class=\"custom-control-input\"\n                                          id={i}\n                                          name=\"example1\"\n                                          onChange={(e) =>\n                                            this.handleChange(e, `isSave0`)\n                                          }\n                                          checked={this.state.isSave0}\n                                        />\n                                        <label\n                                          class=\"custom-control-label f-16 f-m pl-2\"\n                                          for={i}\n                                        >\n                                          Save card for future transactions\n                                        </label>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                        </div>\n                        <div class=\"clearfix\"></div>\n                        <div class=\"col mb-2\">\n                          <a\n                            onClick={this.handleSubmit}\n                            data-toggle=\"modal\"\n                            data-target=\"#activation\"\n                            class=\"btn btn-org w-70 text-center mx-auto d-block\"\n                          >\n                            {loader ? (\n                              <i class=\"fa fa-refresh fa-spin\"></i>\n                            ) : (\n                              \"Pay\"\n                            )}\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roledocument: state.Profile.Roledocument,\n    document: state.Profile.document,\n    invoiceDetailData: state.Subscription.invoiceDetail,\n    cardDetails: state.Payment.cardDetails,\n    cardPaymentSuccess: state.Payment.cardPaymentSuccess,\n    cardError: state.Payment.cardError,\n    subscriptionPayableData: state.Subscription.subscriptionPayableData,\n    payableId: state.Subscription.payableId,\n    newSubId: state.Subscription.newSubId,\n    promoSuccess: state.Subscription.promoSuccess,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  customerPaymentDetail: () => dispatch(actions.customerPaymentDetail()),\n  invoiceDetail: () => dispatch(actions.invoiceDetail()),\n  cardPayment: (payload) => dispatch(actions.cardPayment(payload)),\n  subscriptionPayable: (payload) =>\n    dispatch(actions.subscriptionPayable(payload)),\n  promo: (payload) => dispatch(actions.promo(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payment);\n","C:\\react-main\\src\\container\\reports\\TorReport.jsx",["1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458"],"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Reports, TorReports } from \"../../component/index.jsx\";\nimport { staticLabel } from '../../constants/Constants.js';\nimport TikFilter from './TikFilter.jsx';\nimport * as actions from \"../../actions\";\nimport Loader from \"../../component/Loader.jsx\";\nimport { formateDateMonth } from '../../helper/utility.js';\nimport moment from 'moment';\nimport TorFilter from './TorFilter.jsx';\nimport { CSVLink } from 'react-csv';\n\nclass TorReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: '',\n      reportsData: [],\n      csvData: [],\n      showFilter: false\n    }\n  }\n\n  handleReportTab = (tab) => {\n    this.setState({\n      selectedTab: tab.value\n    });\n\n    let startDate = '';\n    let endDate = moment().format(\"MM-DD-YYYY\");\n\n    switch (tab.value) {\n      case '30day':\n        startDate = moment().subtract(1, 'month').format(\"MM-DD-YYYY\");\n        break;\n      case '90day':\n        startDate = moment().subtract(3, 'month').format(\"MM-DD-YYYY\");\n        break;\n      default:\n        startDate = moment().subtract(1, 'year').format(\"MM-DD-YYYY\");\n    }\n\n    let body = {\n      startDate: startDate,\n      endDate: endDate\n    }\n\n    this.props.torReports(body)\n  }\n\n  componentDidMount() {\n    this.props.torReports(null)\n  }\ncomponentDidUpdate(prevprops){\n if(prevprops.reportsTor != this.props.reportsTor){\n    const { torReportsData } = this.props.reportsTor;\n    torReportsData.report && torReportsData.report.map((e,i) => {\n        let csvList = torReportsData.report;\n        let data = csvList[i]\n        let object = {\n            ...data,\n            provider: e.provider.firstName\n        }\n        csvList[i] = object\n        this.setState({csvData:csvList })\n    })\n }\n}\n  render() {\n    const { reports } = staticLabel;\n    const { title, tikReportsTab, totalNumberTik, averageTik,\n      totalNumberDay,\n      percentageChange, downloadCSV, tikReportsTitle, XAxiosTitle } = reports;\n    const { selectedTab,csvData } = this.state;\n    const { reportsTor } = this.props;\n    const { torReportsData, torReportsLoader } = reportsTor;\n\n    const { totalProviders, totalDocument, highestProvider, leastProvider, report: reportsData } = torReportsData;\n    let sortedReportData = '';\n    console.log(reportsTor)\n    return (\n      <WithLayoutContainer>\n        <div id=\"docreport\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div id=\"changingContent\" className=\"containerBox\" onClick={() => this.setState({showFilter: false})} >\n                <div className=\"tikReport\">\n                  <div className=\"table-title\">\n                    <h2 className=\"f-b mb-4 mt-0\">Tor Report</h2>\n                   \n                        <TorFilter showFilter={() => this.setState({showFilter: true})} filterStatus={this.state.showFilter} />\n                  \n                  </div>\n                  <div className=\"fixHeight p-0\" style={{ maxHeight: 'calc(100vh - 340px)' }}>\n                    <div className=\"tab-content mt-2\">\n                      {/* tab-content-all */}\n                      <div className=\"col tab-pane active\" id=\"30day\">\n                        {/* chart */}\n\n                        {torReportsLoader && <Loader /> ||\n                         \n                          <div id=\"chartdiv\" style={{ height: '65vh', marginTop: '12px',overflowX:'scroll' }} >\n                            {/* <div id=\"chartdiv\" style={{ height: '60vh' }} > */}\n                            <TorReports\n                              reports={reportsData}\n                              YAxisTitle={'Number of Tiks'}\n                              XAxisTitle={'Tor'}\n                            />\n                          </div>\n                          }\n                        {/*end chart */}\n                        <div className=\"row align-items-center mt-4 report-number-wrapper\">\n                          <div className=\"col-lg-8\">\n                            <div className=\"d-flex flex-wrap\">\n                              <div className=\"col-lg-4\">\n                                <h3 className=\"f-b\">Total number of tors</h3>\n                              </div>\n                              <div className=\"col-lg-2\">\n                                <h3 className>{torReportsData && totalProviders}</h3>\n                              </div>\n                              <div className=\"col-lg-4\">\n                                <h3 className=\"f-b\">Highest publishing tor</h3>\n                              </div>\n                              <div className=\"col-lg-2\">\n                                <h3 className>{torReportsData && highestProvider}</h3>\n                              </div>\n                            </div>\n                            <div className=\"d-flex flex-wrap\">\n                              <div className=\" col-lg-4\">\n                                <h3 className=\"f-b \">Total number of tiks</h3>\n                              </div>\n                              <div className=\"col-lg-2 \">\n                                <h3 className=\" \">{torReportsData && totalDocument}</h3>\n                              </div>\n                              <div className=\"col-lg-4 \">\n                                <h3 className=\"f-b \">Least publishing tor</h3>\n                              </div>\n                              <div className=\"col-lg-2 \">\n                                <h3 className=\" \">{torReportsData && leastProvider}</h3>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-lg-4\">\n                            {/* <a href=\"#! \" className=\"btn btn-org px-3 \">{downloadCSV}</a> */}\n                            {csvData && csvData.length > 0\n                                && <CSVLink data={csvData} className=\"btn btn-org px-3 \" filename=\"tikData.csv\">{downloadCSV}</CSVLink>}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"tab-pane\" id=\"90day\">\n                        90 days\n                       </div>\n                      <div className=\"tab-pane \" id=\"1year\">\n                        1 year\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    reportsTor: state.Reports.torReports,\n    torFilterData: state.Reports.torFilterData,\n  };\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  torReports: (data) => dispatch(actions.torReports(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TorReport);\n","C:\\react-main\\src\\container\\reports\\TeamReport.jsx",["1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475"],"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Reports, TorReports } from \"../../component/index.jsx\";\nimport { staticLabel } from '../../constants/Constants.js';\nimport TikFilter from './TikFilter.jsx';\nimport * as actions from \"../../actions\";\nimport Loader from \"../../component/Loader.jsx\";\nimport { formateDateMonth } from '../../helper/utility.js';\nimport moment from 'moment';\nimport TorFilter from './TorFilter.jsx';\nimport { CSVLink } from 'react-csv';\n\nclass TeamReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: '',\n      reportsData: [],\n      csvData: [],\n      showFilter: false\n    }\n  }\n\n  handleReportTab = (tab) => {\n    this.setState({\n      selectedTab: tab.value\n    });\n\n    let startDate = '';\n    let endDate = moment().format(\"MM-DD-YYYY\");\n\n    switch (tab.value) {\n      case '30day':\n        startDate = moment().subtract(1, 'month').format(\"MM-DD-YYYY\");\n        break;\n      case '90day':\n        startDate = moment().subtract(3, 'month').format(\"MM-DD-YYYY\");\n        break;\n      default:\n        startDate = moment().subtract(1, 'year').format(\"MM-DD-YYYY\");\n    }\n\n    let body = {\n      startDate: startDate,\n      endDate: endDate\n    }\n\n    this.props.teamReports(body)\n  }\n\n  componentDidMount() {\n    this.props.teamReports(null)\n  }\ncomponentDidUpdate(prevprops){\n if(prevprops.reportsTor != this.props.reportsTor){\n    const { torReportsData } = this.props.reportsTor;\n    torReportsData.report && torReportsData.report.map((e,i) => {\n        let csvList = torReportsData.report;\n        let data = csvList[i]\n        let object = {\n            ...data,\n            provider: e._id.name\n        }\n        csvList[i] = object\n        this.setState({csvData:csvList })\n    })\n }\n}\n  render() {\n    const { reports } = staticLabel;\n    const { title, tikReportsTab, totalNumberTik, averageTik,\n      totalNumberDay,\n      percentageChange, downloadCSV, tikReportsTitle, XAxiosTitle } = reports;\n    const { selectedTab,csvData } = this.state;\n    const { reportsTor } = this.props;\n    const { torReportsData, torReportsLoader } = reportsTor;\n\n    const { totalTeams, totalDocument, highestTeams, leastTeams, report: reportsData } = torReportsData;\n    let sortedReportData = '';\n    console.log(reportsTor)\n    return (\n      <WithLayoutContainer>\n        <div id=\"docreport\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div id=\"changingContent\" className=\"containerBox\" onClick={() => this.setState({showFilter: false})} >\n                <div className=\"tikReport\">\n                  <div className=\"table-title\">\n                    <h2 className=\"f-b mb-4 mt-0\">Team Report</h2>\n                   \n                        <TorFilter showFilter={() => this.setState({showFilter: true})} filterStatus={this.state.showFilter} />\n                  \n                  </div>\n                  <div className=\"fixHeight p-0\" style={{ maxHeight: 'calc(100vh - 340px)' }}>\n                    <div className=\"tab-content mt-2\">\n                      {/* tab-content-all */}\n                      <div className=\"col tab-pane active\" id=\"30day\">\n                        {/* chart */}\n\n                        {torReportsLoader && <Loader /> ||\n                         \n                          <div id=\"chartdiv\" style={{ height: '65vh', marginTop: '12px',overflowX:'scroll' }} >\n                            {/* <div id=\"chartdiv\" style={{ height: '60vh' }} > */}\n                            <TorReports\n                              reports={reportsData}\n                              YAxisTitle={'Number of Tiks'}\n                              XAxisTitle={'Tor'}\n                            />\n                          </div>\n                          }\n                        {/*end chart */}\n                        <div className=\"row align-items-center mt-4 report-number-wrapper\">\n                          <div className=\"col-lg-8\">\n                            <div className=\"d-flex flex-wrap\">\n                              <div className=\"col-lg-4\">\n                                <h3 className=\"f-b\">Total number of teams</h3>\n                              </div>\n                              <div className=\"col-lg-2\">\n                                <h3 className>{torReportsData && totalTeams}</h3>\n                              </div>\n                              <div className=\"col-lg-4\">\n                                <h3 className=\"f-b\">Highest publishing team</h3>\n                              </div>\n                              <div className=\"col-lg-2\">\n                                <h3 className>{torReportsData && highestTeams}</h3>\n                              </div>\n                            </div>\n                            <div className=\"d-flex flex-wrap\">\n                              <div className=\" col-lg-4\">\n                                <h3 className=\"f-b \">Total number of tiks</h3>\n                              </div>\n                              <div className=\"col-lg-2 \">\n                                <h3 className=\" \">{torReportsData && totalDocument}</h3>\n                              </div>\n                              <div className=\"col-lg-4 \">\n                                <h3 className=\"f-b \">Least publishing team</h3>\n                              </div>\n                              <div className=\"col-lg-2 \">\n                                <h3 className=\" \">{torReportsData && leastTeams}</h3>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-lg-4\">\n                            {/* <a href=\"#! \" className=\"btn btn-org px-3 \">{downloadCSV}</a> */}\n                            {csvData && csvData.length > 0\n                                && <CSVLink data={csvData} className=\"btn btn-org px-3 \" filename=\"tikData.csv\">{downloadCSV}</CSVLink>}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"tab-pane\" id=\"90day\">\n                        90 days\n                       </div>\n                      <div className=\"tab-pane \" id=\"1year\">\n                        1 year\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    reportsTor: state.Reports.torReports,\n    torFilterData: state.Reports.torFilterData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  teamReports: (payload) => dispatch(actions.teamReports(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamReport);\n","C:\\react-main\\src\\container\\transaction_history\\transactionDetail.jsx",["1476","1477","1478","1479","1480","1481"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Table, SuccessPopup } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { TransactionHistory } from '../../constants/Mapper.js';\nimport { formatTime, formatDate, } from \"../../helper/utility.js\"\nimport moment from 'moment';\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\nclass TransactionDetail extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dataTable: {\n        titles: TransactionHistory,\n        data: []\n      }\n    }\n  }\n  componentDidMount(){\n      const transId = JSON.parse(localStorage.getItem('transId'))\n    this.props.transactionDetail({Id: transId})\n  }\n \n  render() {\n    const { transactionDetailSuccess } = this.props;\n    const Subdate = formatDate(transactionDetailSuccess.startOfSubscription)\n    const expdate = formatDate(transactionDetailSuccess.endOfSubscription)\n    const a = moment(transactionDetailSuccess.endOfSubscription);\n    const b = moment(transactionDetailSuccess.startOfSubscription);\n    const Validity = a.diff(b, 'month');\n    return (\n      <WithLayoutContainer>\n         <div id=\"api\" class=\"wrapper wrapper-content\">\n          <div class=\"row\">\n            <div class=\"col-xl-12\">\n              <div class=\"containerBox\">\n                <div class=\" \">\n                  <div class=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                    <h2 class=\"f-b m-0\">Invoice Details</h2>\n                  </div>\n                  <div class=\"apiContent fixHeight\">\n                    <div class=\"row\">\n                      <div class=\"col-md-8\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Tor Name</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{`${transactionDetailSuccess && transactionDetailSuccess.providerId.firstName} ${transactionDetailSuccess && transactionDetailSuccess.providerId.lastName}`}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Email Address</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess.providerId.email}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Subscription Date</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                             <h4 class=\"f-16 f-r\">{Subdate}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Validity</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess.subscriptionPlanDetails.validity}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Expiration Date</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{expdate}</h4>\n                          </div>\n                        </div>\n                        {/* <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Auto Subscribe</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">Yes</h4>\n                          </div>\n                        </div> */}\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Payment Mode</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess.paymentMethod == 'Free' ? '-': transactionDetailSuccess.paymentMethod}</h4>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-lg-3\">\n                            <h4 class=\"f-16 f-b\">Payment ID</h4>\n                          </div>\n                          <div class=\"col-lg-9\">\n                            <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess._id}</h4>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row org-border my-2 mx-1 br-6 p-3\">\n                      <div class=\"col-lg-4\">\n                        <h4 class=\"f-16 f-b\">Product ID</h4>\n                        <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess._id}</h4>\n                      </div>\n                      <div class=\"col-lg-4\">\n                        <h4 class=\"f-16 f-b\">Product Name</h4>\n                        <h4 class=\"f-16 f-r\">{transactionDetailSuccess && transactionDetailSuccess.subscriptionPlanDetails.planName}</h4>\n                      </div>\n                      <div class=\"col-lg-4\">\n                        <h4 class=\"f-16 f-b\">Amount</h4>\n                        <h4 class=\"f-16 f-r\">${transactionDetailSuccess && transactionDetailSuccess.totalCost}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      {/* <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Tax</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">$2</h4>\n                      </div> */}\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b txt-org\">Total Amount</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-b txt-org\">${transactionDetailSuccess && transactionDetailSuccess.totalCost}</h4>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    transactionList: state.Transaction.transactionList,\n    transactionDetailSuccess: state.Transaction.transactionDetailSuccess,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  transactionreq: () => dispatch(actions.transactionList()),\n  transactionDetail: (payload) => dispatch(actions.transactionDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDetail);","C:\\react-main\\src\\container\\Analytics\\Analytics.jsx",[],"C:\\react-main\\src\\container\\Faq\\Faq.jsx",["1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  HeaderWithoutSearch\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { Images } from \"../../assets/images\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport Loader from \"../../component/Loader.jsx\";\nimport { toast } from \"react-toastify\";\nimport search from '../../assets/img/search.png'\nclass Faq extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAccord: false,\n      sharedModal: false,\n      sharedMeModal: false,\n      index: \"\",\n      initial: \"start\",\n      tab: [],\n      showNotification: false,\n      logout: false,\n      price: [],\n      planType: \"\",\n      showSuccess: false,\n      message: \"\",\n      tabList: [],\n      loader: false,\n      keyword: \"\",\n    };\n  }\n  componentDidMount() {\n    this.props.faq();\n  }\n  successPopup = () => {\n    this.setState({\n      deleteSuccessFlag: false,\n      deleteDraftFlag: false,\n      deleteDraftData: {},\n      SuccessPopupFlag: true,\n    });\n\n    // this.props.getDocumentListInfo('Drafts');\n  };\n\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.history.push(\"/dashboard\");\n  };\n  showAccord = (i, e) => {\n    this.setState({ tab: this.updateTabs(i) });\n  };\n  updateTabs(id) {\n    let tabs = this.state.tab;\n    let newtabs = tabs.map((tab, index) => {\n      if (index == id) {\n        if (tab.activeAcc == true) {\n          tab.activeAcc = false;\n        } else {\n          tab.activeAcc = true;\n        }\n      }\n      // else {\n      //   tab.activeAcc = false;\n      // }\n      return tab;\n    });\n    return newtabs;\n  }\n  sum = (obj) => {\n    let sum = 0;\n    for (let el in obj) {\n      if (obj.hasOwnProperty(el)) {\n        sum += parseFloat(obj[el]);\n      }\n    }\n    return sum;\n  };\n  componentDidUpdate(prevprops) {\n    console.log(prevprops.faqSuccess.length > 0);\n    if (prevprops.faqSuccess != this.props.faqSuccess) {\n      this.setState({ loader: false });\n      console.log(this.props.faqSuccess);\n      this.props.faqSuccess.length > 0\n        ? this.props.faqSuccess.map((o, l) => {\n            console.log(o);\n            console.log(this.state.tab);\n            const u = this.state.tab;\n            const v = u[l];\n            const obj = {\n              ...v,\n              activeAcc: false,\n              at: o.createdAt,\n              question: o.question,\n              answer: o.answer,\n            };\n            u[l] = obj;\n            this.setState({ tab: u });\n          })\n        : this.setState({ tab: [] });\n    }\n  }\n  closePopup = () => {\n    this.setState({ sharedModal: false, sharedMeModal: false });\n  };\n\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n\n  search = (e) => {\n    console.log(e.target.value);\n    this.setState({ keyword: e.target.value });\n    const iChars = \"%^`~\\\\/{}|\\\":''\";\n    const special = /[*|\\\":<>[\\]{}`\\\\'^%]/;\n    console.log(!iChars.includes(this.state.keyword), this.state.keyword);\n    if (!special.test(e.target.value) || e.target.value == \"\") {\n      this.props.faqSearch({ keyword: e.target.value });\n      this.setState({ tab: [], loader: true });\n    } else {\n      toast.error(\"Special characters are not allowed\");\n    }\n  };\n  render() {\n    const {\n      state: { showNotification, logout, price, showSuccess, message, loader },\n      props: { subscriptionData, myPlan },\n    } = this;\n    console.log(this.state.tab);\n    return (\n      <>\n      <HeaderWithoutSearch/>\n        <div id=\"content\" class=\"container my-5 selectTemp\">\n          <div class=\"row\">\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m mt-5\">\n              <h1 class=\"text-center txt-blk mb-4 f-b\">FAQs</h1>\n              <form\n                role=\"search\"\n                class=\"search navbar-form-custom form-inline\"\n                onSubmit={(e) => e.preventDefault()}\n              >\n                <div class=\"form-group dropdown\">\n                  <img\n                    className=\"searchImg\"\n                    src={Images.search}\n                    style={{ zIndex: \"9999\" }}\n                    src={search}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search FAQs...\"\n                    class=\"form-control pl-5\"\n                    name=\"top-search\"\n                    id=\"top-search\"\n                    onChange={this.search}\n                  />\n                </div>\n                {/* <a type=\"submit\" class=\"btn btn-primary f-18 ml-2 f-m px-4\">\n                  Search\n                </a> */}\n              </form>\n            </div>\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 box-shd br-20 mt-5 mb-5\">\n              <div\n                class=\"col my-5 selectTemplate fixHeight\"\n                style={{ minHeight: \"450px\" }}\n              >\n                <div id=\"accordion1\" class=\"mt-2\">\n                  {!loader ? (\n                    this.state.tab.length > 0 ? (\n                      this.state.tab.map((e, i) => {\n                        return (\n                          <div class=\"card\">\n                            <div class=\"card-header\" id=\"headingOne\">\n                              <h5\n                                class=\"m-0 d-flex justify-content-between align-items-center\"\n                                style={{ fontSize: \"12px\" }}\n                              >\n                                <div>\n                                  <h5 class=\"f-20 f-m\">{e.question}?</h5>\n                                </div>\n                                <a\n                                  onClick={() => this.showAccord(i)}\n                                  data-toggle=\"collapse\"\n                                  data-target=\"#collapseOne\"\n                                  aria-expanded=\"true\"\n                                  aria-controls=\"collapseOne\"\n                                >\n                                  {e.activeAcc ? (\n                                    <i class=\"fa fa-angle-down\"></i>\n                                  ) : (\n                                    <i class=\"fa fa-angle-right\"></i>\n                                  )}\n                                </a>\n                              </h5>\n                            </div>\n\n                            <div\n                              id=\"collapseOne\"\n                              class={e.activeAcc ? \"collapse show\" : \"collapse\"}\n                              aria-labelledby=\"headingOne\"\n                              data-parent=\"#accordion1\"\n                            >\n                              <div class=\"card-body\">{e.answer}</div>\n                            </div>\n                          </div>\n                        );\n                      })\n                    ) : (\n                      <div style={{ textAlign: \"center\" }}>No data found</div>\n                    )\n                  ) : (\n                    <Loader />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    faqSuccess: state.User.faqSuccess,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  faq: () => dispatch(actions.faq()),\n  faqSearch: (payload) => dispatch(actions.faqSearch(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Faq);\n","C:\\react-main\\src\\container\\Help\\Help.jsx",["1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport Select from \"react-select\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport Zendesk from \"react-zendesk\";\nconst ZENDESK_KEY = \"65b14d0c-22c8-4442-91db-9ce4323055aa\";\n\nconst setting = {\n  color: {\n    theme: \"#F27136\"\n  },\n  launcher: {\n    chatLabel: {\n      \"en-US\": \"Need Help\"\n    },\n  },\n  chat: {\n    mobile: {\n      disable: true,\n    },\n  },\n};\n\nclass Help extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issueType: [],\n      issue: \"\",\n      email: \"\",\n      subject: \"\",\n      description: \"\",\n      issueId: \"\",\n      errormessage: \"\",\n      error: false,\n      errorField: \"\",\n      submit: false,\n      showSuccess: false,\n      message: ''\n    };\n  }\n  componentDidMount() {\n    this.props.ticketList();\n  }\n  componentDidUpdate(prevprops) {\n    if (prevprops.ticketListData != this.props.ticketListData) {\n      this.props.ticketListData.map((e) => {\n        if (e.type == \"tagger\") {\n          {\n            let ObjectList = [];\n            let ArrayList = [];\n            e.custom_field_options.map((j) => {\n              // console.log(e);\n              const teeObject = {\n                ...ArrayList,\n                value: j.value,\n                label: j.name,\n              };\n              // console.log(teeObject);\n              ObjectList.push(teeObject);\n            });\n            this.setState({ issueType: ObjectList });\n          }\n        }\n      });\n    }\n    if (prevprops.ticketSubmitData != this.props.ticketSubmitData) {\n      this.setState({\n        showSuccess: true,\n        message: `Sorry for the Inconvenience Our support executive will get back to to you on ${this.props.ticketSubmitData.data.audit.via.source.to.address}`,\n      })\n    }\n  }\n  changeHandler = (e, key) => {\n    const validEmailRegex = RegExp(\n      /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n    );\n    if (this.state.submit) {\n      if (key == \"issueType\" && e.value == \"\") {\n        this.setState({\n          errormessage: \"Please select issue\",\n          error: true,\n          errorField: \"issueType\",\n        });\n      } else if (key == \"email\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Please enter email address\",\n          error: true,\n          errorField: \"email\",\n        });\n      } else if (key == \"email\" && !validEmailRegex.test(e.target.value)) {\n        this.setState({\n          errormessage: \"Please enter valid email address\",\n          error: true,\n          errorField: \"email\",\n        });\n      } else if (key == \"subject\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Please enter subject\",\n          error: true,\n          errorField: \"subject\",\n        });\n      } else if (key == \"description\" && e.target.value == \"\") {\n        this.setState({\n          errormessage: \"Please enter description\",\n          error: true,\n          errorField: \"description\",\n        });\n      } else {\n        this.setState({\n          errormessage: \"\",\n          error: false,\n          errorField: \"\",\n        });\n      }\n    }\n    if (key == \"issueType\") {\n      this.setState({ issue: e.value });\n    } else {\n      this.setState({ [key]: e.target.value });\n    }\n  };\n  handleSubmit = () => {\n    const { email, subject, description, issue } = this.state;\n    this.setState({ submit: true });\n    if (this.state.issue == \"\") {\n      this.setState({\n        errormessage: \"Please select issue\",\n        error: true,\n        errorField: \"issueType\",\n      });\n    } else if (this.state.email == \"\") {\n      this.setState({\n        errormessage: \"Please enter email\",\n        error: true,\n        errorField: \"email\",\n      });\n    } else if (this.state.subject == \"\") {\n      this.setState({\n        errormessage: \"Please enter subject\",\n        error: true,\n        errorField: \"subject\",\n      });\n    } else if (this.state.description == \"\") {\n      this.setState({\n        errormessage: \"Please enter description\",\n        error: true,\n        errorField: \"description\",\n      });\n    } else {\n      this.setState({\n        errormessage: \"\",\n        error: false,\n        errorField: \"\",\n      });\n      this.props.ticketSubmit({ email, subject, description, issue });\n    }\n  };\n  closeSuccessPopup = () => {\n    this.setState({ showSuccess: false });\n    this.props.history.push(\"/dashboard\");\n  };\n  render() {\n    const { error, errormessage, errorField, showSuccess, message } = this.state;\n    console.log(this.props.ticketSubmitData);\n\n    return (\n      <>\n        {/* <Helmet>\n          <script\n            id=\"ze-snippet\"\n            src=\"https://static.zdassets.com/ekr/snippet.js?key=65b14d0c-22c8-4442-91db-9ce4323055aa\"\n          >\n            {\" \"}\n          </script>\n        </Helmet> */}\n        <Zendesk zendeskKey={ZENDESK_KEY} {...setting} onLoaded={() => console.log('is loaded')} />\n        <div id=\"content\" class=\"container my-5\">\n          <div id=\"help\" class=\"row\">\n            <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n              <h1 class=\"text-center txt-blk mb-5 f-b\">Help</h1>\n            </div>\n            <div class=\"offset-lg-2 col-lg-8 box-shd br-20\">\n              <form class=\"p-5 metadata\">\n                <div class=\"form-group row align-items-center\">\n                  <label for=\"meta1\" class=\"col-sm-3 col-form-label f-18 f-m\">\n                    Issue Type\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <div class=\"input-group\">\n                      <Select\n                        className=\"help\"\n                        options={this.state.issueType}\n                        placeholder=\"Select Issue Type\"\n                        onChange={(e) => this.changeHandler(e, \"issueType\")}\n                      />\n                    </div>\n                    {error && errorField == \"issueType\" ? (\n                      <div style={{ color: \"red\" }}>{errormessage}</div>\n                    ) : null}\n                  </div>\n                </div>\n                <div class=\"form-group row align-items-center\">\n                  <label for=\"meta1\" class=\"col-sm-3 col-form-label f-18 f-m\">\n                    Email Address\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control f-16\"\n                      id=\"meta1\"\n                      placeholder=\"Enter Email Address\"\n                      onChange={(e) => this.changeHandler(e, \"email\")}\n                    />\n                    {error && errorField == \"email\" ? (\n                      <div style={{ color: \"red\" }}>{errormessage}</div>\n                    ) : null}\n                  </div>\n                </div>\n                <div class=\"form-group row align-items-center\">\n                  <label for=\"meta1\" class=\"col-sm-3 col-form-label f-18 f-m\">\n                    Subject\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control f-16\"\n                      id=\"meta1\"\n                      placeholder=\"Enter Subject\"\n                      onChange={(e) => this.changeHandler(e, \"subject\")}\n                    />\n                    {error && errorField == \"subject\" ? (\n                      <div style={{ color: \"red\" }}>{errormessage}</div>\n                    ) : null}\n                  </div>\n                </div>\n                <div class=\"form-group row align-items-center\">\n                  <label for=\"meta1\" class=\"col-sm-3 col-form-label f-18 f-m\">\n                    Description\n                  </label>\n                  <div class=\"col-sm-9\">\n                    <textarea\n                      class=\"form-control\"\n                      rows=\"5\"\n                      placeholder=\"Type here...\"\n                      onChange={(e) => this.changeHandler(e, \"description\")}\n                    ></textarea>\n                    {error && errorField == \"description\" ? (\n                      <div style={{ color: \"red\" }}>{errormessage}</div>\n                    ) : null}\n                  </div>\n                </div>\n                {/* <div class=\"form-group row align-items-center\">\n                <label for=\"meta1\" class=\"col-sm-3 col-form-label f-18 f-m\">\n                  Question About\n                </label>\n                <div class=\"col-sm-9\">\n                  <div class=\"input-group\">\n                    <select class=\"custom-select f-16 f-m \">\n                      <option selected=\"\">Select Question About</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </select>\n                  </div>\n                </div>\n              </div> */}\n\n                <div class=\"col-lg-12 d-flex mt-5\">\n                  <a\n                    href=\"dashboard.html\"\n                    class=\"btn btn-default m-1 w-100 f-b\"\n                  >\n                    Cancel\n                  </a>\n                  <a\n                    onClick={this.handleSubmit}\n                    class=\"btn btn-org m-1 w-100 f-b\"\n                    data-toggle=\"modal\"\n                    data-target=\"#successPublished\"\n                  >\n                    Submit\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        {showSuccess == true ? (\n          <SuccessModal\n            closePopup={this.closeSuccessPopup}\n            history={this.props.history}\n            message={message}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    myPlan: state.Subscription.myPlan,\n    ticketListData: state.Help.ticketListData,\n    ticketSubmitData: state.Help.ticketSubmitData,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n  ticketList: () => dispatch(actions.ticketList()),\n  ticketSubmit: (payload) => dispatch(actions.ticketSubmit(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);\n","C:\\react-main\\src\\container\\Analytics\\ApiDetail.jsx",["1545","1546","1547","1548","1549","1550","1551","1552"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  WithLayoutContainer,\n  Table,\n  SuccessPopup,\n} from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { AnalystListingTitle } from \"../../constants/Mapper.js\";\nimport { formatTime, formatDate } from \"../../helper/utility.js\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport { toast } from \"react-toastify\";\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\n\nclass ApiDetail extends Component {\n  state = {\n    editFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    deleteData: {},\n    addPopupSuccess: false,\n    viewFlag: false,\n    viewData: {},\n    showSuccess: false,\n    successFlag: true,\n    SuccessPopupFlag: true,\n    // addPopupLoader: false,\n    // editData={}\n  };\n\n  componentDidMount() {\n    const apiId = JSON.parse(localStorage.getItem(\"apiId\"));\n    this.props.logListDetail({ id: apiId });\n  }\n\n  successPopup = () => {\n    this.setState({\n      successFlag: true,\n      SuccessPopupFlag: true,\n    });\n  };\n\n  render() {\n    const { logListDetailData } = this.props;\n    const date = formatDate(logListDetailData.requestTime);\n    const time = formatTime(logListDetailData.requestTime);\n    return (\n      <WithLayoutContainer>\n        <div id=\"api\" class=\"wrapper wrapper-content\">\n          <div class=\"row\">\n            <div class=\"col-xl-12\">\n              <div class=\"containerBox\">\n                <div class=\" \">\n                  <div class=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                    <h2 class=\"f-b m-0\">API Requests Details</h2>\n                  </div>\n                  <div class=\"apiContent fixHeight\" style={{overflowX:'scroll'}}>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Method</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.method}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Path</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">\n                          {`${logListDetailData.method}${logListDetailData.requestPath}`}\n                        </h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Status</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{`${logListDetailData.statusCode}(${logListDetailData.status})`}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Client IP Address</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.clientIp}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">User Agent</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.userAgent}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Date/Time</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{`${date}${time}`}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Get Parameter</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.params && (logListDetailData.params.msg == undefined ? logListDetailData.params : logListDetailData.params.msg) }</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Files</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.files && (logListDetailData.files.msg == undefined ? logListDetailData.files : logListDetailData.files.msg) }</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Content Type</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">\n                          Application/x-222-form-urlencoded\n                        </h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Request Body</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.requestBody && (JSON.stringify(logListDetailData.requestBody))}</h4>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-3\">\n                        <h4 class=\"f-16 f-b\">Response Body</h4>\n                      </div>\n                      <div class=\"col-lg-9\">\n                        <h4 class=\"f-16 f-r\">{logListDetailData.responseBody && (JSON.stringify(logListDetailData.responseBody))}</h4>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logListDetailData: state.Analytics.logListDetail,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  logListDetail: (payload) => dispatch(actions.logListDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApiDetail);\n","C:\\react-main\\src\\container\\Notification\\Notification.jsx",["1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Table, SuccessPopup } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { TransactionHistory } from '../../constants/Mapper.js';\nimport { formatTime, formatDate, } from \"../../helper/utility.js\"\nimport moment from 'moment';\nimport ndoc from \"../../assets/img/ndoc.png\";\nimport io from \"socket.io-client\";\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\nlet socket = io(\"https://provider-backend.doctrace.com:3001\", {\n  path: \"/provider/socket\",\n});\nclass Notification extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dataTable: {\n        titles: TransactionHistory,\n        data: []\n      }\n    }\n  }\n  componentDidMount(){\n    this.props.notification()\n  }\n  notificationRoute = (item) => {\n    console.log(item);\n    if (item.itemType == \"document\") {\n      this.props.viewTik({ Id: item.itemId });\n      localStorage.setItem(\"docId\", JSON.stringify(item.itemId));\n    } else if (item.itemType == \"user\") {\n      this.props.history.push(\"/userMgnt\");\n    } else if (item.itemType == \"role\") {\n      this.props.history.push(\"/roleMgnt\");\n    } else if (item.itemType == \"team\") {\n      this.props.history.push(\"/teamMgnt\");\n    } else if (item.itemType == \"subscription\") {\n      this.props.history.push(\"/subscription\");\n    }\n  };\n  markAllRead = () => {\n    socket.emit(\"mark-all-read\", { providerId: this.props.providerId });\n    this.props.socketNotificationSuccess({\n      data: { ...this.props.notificationSocketData, count: 0 },\n    });\n  };\n  render() {\n    const { notificationListData } = this.props;\n    console.log(notificationListData)\n    // const Subdate = formatDate(transactionDetailSuccess.startOfSubscription)\n    // const expdate = formatDate(transactionDetailSuccess.endOfSubscription)\n    // const a = moment(transactionDetailSuccess.endOfSubscription);\n    // const b = moment(transactionDetailSuccess.startOfSubscription);\n    // const Validity = a.diff(b, 'month');\n    return (\n      <WithLayoutContainer>\n           <div id=\"notification\" class=\"wrapper wrapper-content\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12\">\n                        <div id=\"changingContent\" class=\"containerBox\">\n                            <div>\n                                <div class=\"table-title d-flex justify-content-between flex-wrap\">\n                                    <h2 class=\"f-b mb-4 mt-0\">Your Notifications</h2>\n                                    <a href=\"#!\" class=\"txt-org\"><u>Mark All As Read</u></a>\n                                </div>\n                                <div class=\"fixHeight\">\n                                    <ul class=\"pl-0\">\n                                        {notificationListData && notificationListData.map(e => {\n                                           return <><li class=\"mt-3\">\n                                            <a onClick={() => this.notificationRoute(e)}>\n                                                <div class=\"f-16 f-m txt-blk d-flex align-items-start justify-content-between\">\n                                                    <img class=\"mr-3\" src={ndoc}/>\n                                                    <span class=\"w-100\">{e.description}</span>\n                                                    <span class=\"text-muted f-14\">{moment(e.at).fromNow()}</span>\n                                                </div>\n                                            </a>\n                                        </li>\n                                        \n                                        <li class=\"dropdown-divider my-3\"></li>\n                                        </>\n                                        })}\n                \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n      </WithLayoutContainer>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    notificationListData: state.Notification.notificationListData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  notification: () => dispatch(actions.notification()),\n  socketNotificationSuccess: (payload) =>\n  dispatch(actions.socketNotificationSuccess(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);","C:\\react-main\\src\\container\\Terms\\Terms.jsx",["1565","1566","1567","1568"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  HeaderWithoutSearch,\n} from \"../../component/index.jsx\";\n\n\nclass Terms extends Component {\n \n  render() {\n    return (\n      <>\n      <HeaderWithoutSearch/>\n      <div id=\"content\" class=\"container-fluid my-5\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"offset-lg-2 col-lg-8 col-md-12 d-flex align-items-center justify-content-center flex-column f-m\">\n                    <h1 class=\"text-center txt-blk mb-5 f-b\">Terms & Conditions</h1>\n                </div>\n                <div class=\"containerBox p-4\" id=\"print\">\n                    <p>What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled\n                        it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\n                        Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Why do we use it? It is a long established fact that a reader will be distracted by the readable content\n                        of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop\n                        publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes\n                        by accident, sometimes on purpose (injected humour and the like). Where does it come from? Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making\n                        it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word\n                        in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise\n                        on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32. The standard chunk of Lorem Ipsum used since the 1500s is reproduced\n                        below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n                        Where can I get some? There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If\n                        you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making\n                        this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore\n                        always free from repetition, injected humour, or non-characteristic words etc.</p>\n                    <br/>\n                    <p>What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled\n                        it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\n                        Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Why do we use it? It is a long established fact that a reader will be distracted by the readable content\n                        of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop\n                        publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes\n                        by accident, sometimes on purpose (injected humour and the like). Where does it come from? Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making\n                        it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word\n                        in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise\n                        on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32. The standard chunk of Lorem Ipsum used since the 1500s is reproduced\n                        below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n                        Where can I get some? There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If\n                        you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making\n                        this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore\n                        always free from repetition, injected humour, or non-characteristic words etc.</p>\n                    <br/>\n                    <p>What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled\n                        it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\n                        Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Why do we use it? It is a long established fact that a reader will be distracted by the readable content\n                        of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop\n                        publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes\n                        by accident, sometimes on purpose (injected humour and the like). Where does it come from? Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making\n                        it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word\n                        in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise\n                        on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32. The standard chunk of Lorem Ipsum used since the 1500s is reproduced\n                        below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n                        Where can I get some? There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If\n                        you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making\n                        this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore\n                        always free from repetition, injected humour, or non-characteristic words etc.</p>\n                </div>\n                <br/>\n            </div>\n        </div>\n    </div>\n      </>\n    );\n  }\n}\n\nexport default Terms;\n","C:\\react-main\\src\\container\\Analytics\\ApiUsage.jsx",["1569","1570","1571","1572"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WithLayoutContainer, Table, SuccessPopup } from \"../../component/index.jsx\";\nimport * as actions from \"../../actions\";\nimport { AnalystListingTitle } from '../../constants/Mapper.js';\nimport { formatTime, formatDate, } from \"../../helper/utility.js\"\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport { toast } from \"react-toastify\";\n\nconst actionsData = {\n  edit: true,\n  delete: true,\n};\n\n\nclass ApiUsage extends Component {\n  state = {\n    editFlag: false,\n    deleteFlag: false,\n    addFlag: false,\n    editData: {},\n    deleteData: {},\n    addPopupSuccess: false,\n    viewFlag: false,\n    viewData: {},\n    showSuccess: false,\n    successFlag: true,\n    SuccessPopupFlag: true,\n    // addPopupLoader: false,\n    // editData={}\n  }\n\n  componentDidMount() {\n    this.props.logList();\n  }\n  componentDidUpdate(prevprops){\n   if(prevprops.logListDetailData != this.props.logListDetailData){\n       this.props.history.push('/api-detail')\n   }\n  }\n  viewPopup = (data) => {\n this.props.logListDetail({id: data._id})\n localStorage.setItem('apiId',JSON.stringify(data._id))\n  }\n  render() {\n    const {logListData } = this.props;\n    // const { successPopup } = role;\n    const dataTable = {\n      titles: AnalystListingTitle,\n      data: [],\n    };\n\n    if (logListData.length > 0) {\n      dataTable.data = logListData.map((role, key) => {\n        const { requestTime } = role;\n        return {\n          ...role,\n          ...{\n            sr_no: key + 1,\n            date: formatDate(requestTime),\n            time: formatTime(requestTime),\n            request: `${role.method}${role.requestPath}`,\n          }\n        };\n      })\n    }\n\n    return (\n      <WithLayoutContainer>\n        <div id=\"teamMgnt\" className=\"wrapper wrapper-content\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className=\"containerBox\">\n                <div className=\"table-title d-flex justify-content-between align-items-center mb-4\">\n                  <h2 className=\"f-b m-0\">API Requests</h2>\n                </div>\n                <div className=\"table-responsive fixHeight\">\n                  <Table\n                    dataTable={dataTable}\n                    actions={actionsData}\n                    defaultSort={'sr_no'}\n                    editButtonOnClick={this.editButtonOnClick}\n                    deleteButtonOnClick={this.deleteButtonOnClick}\n                    loader={this.props.loader}\n                    viewPopup={this.viewPopup}\n                  />\n                </div>\n              </div>\n            </div>\n           \n         \n          </div>\n        </div>\n       \n      </WithLayoutContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    logListData: state.Analytics.logList,\n    logListDetailData: state.Analytics.logListDetail,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  logList: () => dispatch(actions.logList()),\n  logListDetail: (payload) => dispatch(actions.logListDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApiUsage);\n","C:\\react-main\\src\\store\\index.js",[],"C:\\react-main\\src\\component\\SuccessModal.jsx",["1573","1574"],"import React, { Component } from \"react\";\nimport close from \"../assets/img/close.png\";\nimport success from \"../assets/img/success.png\";\n\nclass SuccessModal extends Component {\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <>\n        <div>\n          <div\n            className=\"modal fade show\"\n            id=\"twoFactor\"\n            tabIndex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"twoFactorTitle\"\n            aria-hidden=\"true\"\n            style={{ zIndex: 1 }}\n          >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header \">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={closePopup}\n                  >\n                    <img src={close} />\n                  </button>\n                </div>\n                <div className=\"modal-body pt-0 plr-100 pb-5\">\n                  <h4\n                    className=\"modal-title text-center f-24 mb-4 f-b\"\n                    id=\"successTitle\"\n                  >\n                    {this.props.message}\n                  </h4>\n                  {this.props.warning ? null : <img className=\"mx-auto my-0 d-block \" src={success} />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n      </>\n    );\n  }\n}\n\nexport default SuccessModal;\n","C:\\react-main\\src\\helper\\utility.js",[],"C:\\react-main\\src\\component\\index.jsx",[],"C:\\react-main\\src\\constants\\Mapper.js",[],"C:\\react-main\\src\\assets\\images.js",[],"C:\\react-main\\src\\actions\\index.js",[],"C:\\react-main\\src\\reducers\\index.js",[],"C:\\react-main\\src\\container\\reports\\TorFilter.jsx",[],"C:\\react-main\\src\\container\\reports\\TikFilter.jsx",["1575","1576"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { staticLabel } from \"../../constants/Constants.js\";\nimport moment from \"moment\";\nimport * as actions from \"../../actions\";\nimport { formateDateMonth } from \"../../helper/utility.js\";\nimport DateFilter from \"./DateFilter.jsx\";\n\nclass TikFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: \"all\",\n      startDateTab: new Date(),\n      endDateTab: new Date(),\n      flag: false,\n    };\n  }\n\n  componentDidMount() {\n    const { sortedReportData } = this.props;\n    if (sortedReportData.length > 0) {\n      this.setState({\n        startDateTab: new Date(sortedReportData[0]._id),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { sortedReportData } = this.props;\n    if (\n      this.props.sortedReportData !== prevProps.sortedReportData &&\n      this.state.flag === false\n    ) {\n      if (sortedReportData.length > 0) {\n        this.setState({\n          flag: true,\n          startDateTab: new Date(sortedReportData[0]._id),\n        });\n      }\n    }\n  }\n  handleChanges = (startDate, endDate) => {\n    this.setState({\n      selectedTab: \"\",\n      startDateTab: startDate,\n      endDateTab: endDate,\n    });\n    let body = {\n      startDate: formateDateMonth(startDate),\n      endDate: formateDateMonth(endDate),\n    };\n    this.props.tikReports(body);\n  };\n\n  handleReportTab = (tab) => {\n    if (tab.value == \"all\") {\n      const { sortedReportData } = this.props;\n      if (sortedReportData.length > 0) {\n        this.setState({\n          selectedTab: tab.value,\n          startDateTab: new Date(sortedReportData[0]._id),\n        });\n      }\n      this.props.tikReports(null);\n    } else {\n      let startDate = \"\";\n      let endDate = moment().format(\"MM-DD-YYYY\");\n\n      switch (tab.value) {\n        case \"30day\":\n          startDate = moment().subtract(30, \"days\").format(\"MM-DD-YYYY\");\n          break;\n        case \"90day\":\n          startDate = moment().subtract(90, \"days\").format(\"MM-DD-YYYY\");\n          break;\n        default:\n          startDate = moment().subtract(365, \"days\").format(\"MM-DD-YYYY\");\n      }\n      let finalDate = new Date(startDate);\n\n      this.setState({\n        selectedTab: tab.value,\n        startDateTab: finalDate,\n        endDateTab: new Date(),\n      });\n      let body = {\n        startDate: startDate,\n        endDate: endDate\n      }\n      this.props.getTikTabData(tab.value);\n      this.props.tikReports(body);\n\n    }\n  }\n  render() {\n    const { reports } = staticLabel;\n    const { tikReportsTab } = reports;\n    const { startDateTab, endDateTab, selectedTab } = this.state;\n    return (\n      <ul className=\"nav nav-pills\">\n        {tikReportsTab.map((tab) => {\n          return (\n            <li className=\"nav-item\">\n              <a\n                className={`nav-link ${\n                  selectedTab === tab.value ? \"active\" : \"\"\n                  }`}\n                onClick={() => this.handleReportTab(tab)}\n              >\n                {tab.label}\n              </a>\n            </li>\n          );\n        })}\n        <li className=\"nav-item w-50 d-flex align-items-center\">\n          <DateFilter\n            startDateTab={startDateTab}\n            endDateTab={endDateTab}\n            handleChanges={this.handleChanges}\n          />\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  tikReports: (data) => dispatch(actions.tikReports(data)),\n  getTikTabData: (data) => dispatch(actions.getTikTabData(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TikFilter);\n","C:\\react-main\\src\\constants\\Constants.js",[],"C:\\react-main\\src\\component\\ExpiryDateInput.jsx",["1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nexport const FormItemLabel = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 14px;\n  margin-bottom: 7px;\n  color: #333333;\n`;\n\nconst FakeInput = styled.div`\n  position: relative;\n  height: 40px;\n  border: 1px solid ${props => (props.error ? \"#DE4848\" : \"#ccc\")};\n  display: block;\n  border-radius: 8px;\n  width: 100%;\n  cursor: text;\n  ${props =>\n    props.disabled &&\n    `\n    background-color: #eaeaea;\n    cursor: not-allowed;\n  `}\n  ${props =>\n    props.isFocused &&\n    `\n  border: 1px solid ${props.color};\n    outline: none;\n  `}\n`;\n\nconst DateInput = styled.input`\n  width: 42px;\n  outline: 0;\n  border: 0;\n  background: transparent;\n  padding: 11px 13px;\n  font-size: 14px;\n  &::placeholder {\n    font-size: 14px;\n    line-height: 16px;\n    color: #ccc;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nconst MonthInput = styled(DateInput)`\n  padding-right: 5px;\n  ${props =>\n    props.isFilled &&\n    `\n    width: 34px;\n  `}\n  ${props =>\n    props.value == '' ?\n    `\n    width: 42px;\n  `: `width: 34px`}\n`;\n\nconst YearInput = styled(DateInput)`\n  padding-left: 5px;\n  ${props =>\n    props.isFilled &&\n    `\n    &::placeholder {\n      color: transparent;\n    }\n  `}\n`;\n\nconst Separator = styled.span`\n  left: 25%;\n  color: #ccc;\n`;\n\nconst ExpiryDateInput = props => {\n  // State\n  const [isFocused, setIsFocused] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  const [monthFocus, setMonthFocus] = useState(null);\n  const [yearFocus, setYearFocus] = useState(null);\n  const [showSeparator, setShowSeparator] = useState(true);\n  const [isOutside, setIsOutside] = useState(false);\n  const monthRef = useRef(null);\n  const yearRef = useRef(null);\n  const fakeInputRef = useRef(null);\n  const [month, setMonth] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const { onChange, disabled, onFocus, onBlur, value, hasError } = props;\n\n  // --- Date handling methods\n  useEffect(() => {\n    let expiryDate = \"\";\n    if (month) {\n      expiryDate = month.concat(`/${year}`);\n    }\n    onChange(expiryDate);\n    // Faking the placeholder for separator\n    if (!month) {\n      setShowSeparator(true);\n    }\n  }, [month, year]);\n\n  const handleMonth = e => {\n    const target = e.target;\n    const validatedValue = validateMonth(target.value, month);\n    setMonth(validatedValue);\n    if (validatedValue) {\n      if (validatedValue.length >= 2) {\n        setShowSeparator(true);\n        yearRef.current.focus();\n      } else {\n        setShowSeparator(false);\n        monthRef.current.focus();\n      }\n    }\n    if (yearRef.current.value) {\n      setShowSeparator(true);\n    }\n  };\n\n  const handleYear = e => {\n    const target = e.target;\n    const validatedValue = validateYear(target.value, year);\n    setYear(validatedValue);\n  };\n\n  const validateMonth = (value, oldValue) => {\n    const validator =\n      value.length <= 2 &&\n      /^\\d*$/.test(value) &&\n      (value === \"\" || (parseInt(value) >= 0 && parseInt(value) <= 12));\n    if (validator) {\n      console.log(validator, value, oldValue);\n      return value;\n    }\n    console.log(validator, value, oldValue);\n    monthRef.current.value = oldValue;\n    return oldValue;\n  };\n\n  const validateYear = (value, oldValue) => {\n    const validator =\n      value.length <= 2 &&\n      /^\\d*$/.test(value) &&\n      (value === \"\" || (parseInt(value) >= 0 && parseInt(value) <= 99));\n    if (validator) {\n      return value;\n    }\n    yearRef.current.value = oldValue;\n    return oldValue;\n  };\n  // --- Event handling methods (Focus and Blur)\n  const handleFocus = e => {\n    e.stopPropagation();\n    setIsFocused(true);\n    onFocus && onFocus(e, value);\n    // This two IF will make FakeInput act like a real <input />\n    if (e.target) {\n      console.log(yearRef.current.value);\n      if (e.target.name === \"month\" && yearRef.current.value) {\n        return yearRef.current.focus();\n      } else if (e.target.name === \"year\" && !monthRef.current.value) {\n        return monthRef.current.focus();\n      }\n    }\n    if(value == ''){\n      setMonth('');\n      setYear('')\n    }\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    setIsFocused(true);\n    setIsClicked(true);\n    // This two IF will make FakeInput act like a real <input />\n    if (showSeparator) {\n      return yearRef.current.focus();\n    }\n    if(value == ''){\n      setMonth('');\n      setYear('')\n    }\n    return monthRef.current.focus();\n  };\n\n  const handleBlur = e => {\n    e.stopPropagation();\n    setIsFocused(false);\n    if(value == ''){\n      setMonth('');\n      setYear('')\n    }\n  };\n\n  const handleMonthYearBlurred = () => {\n    onBlur && onBlur(value);\n    if(value == ''){\n      setMonth('');\n      setYear('')\n    }\n  };\n\n  useEffect(() => {\n    // To check if both month & year blurred\n    if (isClicked && isOutside && monthFocus === false && yearFocus === false) {\n      handleMonthYearBlurred();\n    }\n  }, [monthFocus, yearFocus, isOutside, isClicked]);\n\n  useEffect(() => {\n    if (isClicked) {\n      global.window.addEventListener(\"click\", handleOutsideClick);\n      return () => {\n        global.window.removeEventListener(\"click\", handleOutsideClick);\n      };\n    }\n  }, [isClicked]);\n\n  const handleOutsideClick = e => {\n    const fakeInput = fakeInputRef.current;\n    if (!fakeInput.contains(e.target)) {\n      setIsOutside(true);\n    } else {\n      setIsOutside(false);\n      if(value == '') {\n        setMonth('');\n        setYear('');\n      }\n    }\n  };\n\n  // --- Backspace handling method\n  useEffect(() => {\n    const fakeInput = fakeInputRef.current;\n    if (fakeInput) {\n      fakeInput.addEventListener(\"keydown\", handleOnKeyDown);\n    }\n    return () => {\n      fakeInput.removeEventListener(\"keydown\", handleOnKeyDown);\n    };\n  }, [fakeInputRef]);\n\n  const handleOnKeyDown = e => {\n    const BACKSPACE_CODE = 8;\n    if (e.keyCode === BACKSPACE_CODE && yearRef.current.value === \"\") {\n      monthRef.current.focus();\n    }\n  };\n\n  return (\n    <FakeInput\n      onClick={e => !disabled && handleClick(e)}\n      isFocused={isFocused}\n      error={hasError}\n      disabled={disabled}\n      ref={fakeInputRef}\n      {...props}\n    >\n      <MonthInput\n        data-id=\"month-input\"\n        ref={monthRef}\n        radix=\".\"\n        value={value == '' ? '' : month}\n        placeholder=\"MM\"\n        autoComplete=\"off\"\n        name=\"month\"\n        disabled={disabled}\n        onChange={e => handleMonth(e)}\n        onFocus={e => {\n          handleFocus(e);\n          setMonthFocus(true);\n          setYearFocus(false);\n        }}\n        onBlur={e => {\n          handleBlur(e);\n          setMonthFocus(false);\n          setYearFocus(false);\n        }}\n        isFilled={!!month}\n      />\n      {showSeparator && <Separator data-id=\"seperator\">/</Separator>}\n      <YearInput\n        data-id=\"year-input\"\n        ref={yearRef}\n        autoComplete=\"off\"\n        value={value == '' ? '':year}\n        placeholder=\"YY\"\n        name=\"year\"\n        disabled={disabled}\n        onChange={e => handleYear(e)}\n        onFocus={e => {\n          handleFocus(e);\n          setYearFocus(true);\n          setMonthFocus(false);\n        }}\n        onBlur={e => {\n          handleBlur(e);\n          setYearFocus(false);\n          setMonthFocus(false);\n        }}\n        isFilled={!!month}\n      />\n    </FakeInput>\n  );\n};\n\nexport default ExpiryDateInput;\n","C:\\react-main\\src\\component\\HeaderWithoutSearch.jsx",["1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport { ProfileDropdown, Notification, Modal, Button } from \"./index.jsx\";\nimport header_logo from \"../assets/img/logo.png\";\nimport logom from \"../assets/img/logom.png\";\nimport doc from \"../assets/img/doc.png\";\nimport searcho from \"../assets/img/searcho.png\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { withRouter } from \"react-router\";\nimport * as actions from \"../actions\";\n\nlet socket = io(\"https://provider-backend.doctrace.com:3001\", {\n  path: \"/provider/socket\",\n});\nclass HeaderWithoutSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNotification: false,\n      logout: false,\n    };\n  }\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  notificationRoute = (item) => {\n    console.log(item);\n    if (item.itemType == \"document\") {\n      this.props.viewTik({ Id: item.itemId });\n      localStorage.setItem(\"docId\", JSON.stringify(item.itemId));\n    } else if (item.itemType == \"user\") {\n      this.props.history.push(\"/userMgnt\");\n    } else if (item.itemType == \"role\") {\n      this.props.history.push(\"/roleMgnt\");\n    } else if (item.itemType == \"team\") {\n      this.props.history.push(\"/teamMgnt\");\n    } else if (item.itemType == \"subscription\") {\n      this.props.history.push(\"/subscription\");\n    }\n  };\n  markAllRead = () => {\n    socket.emit(\"mark-all-read\", { providerId: this.props.providerId });\n    this.props.socketNotificationSuccess({\n      data: { ...this.props.notificationSocketData, count: 0 },\n    });\n  };\n  markRead = (id) => {\n    socket.emit(\"mark-read\", { notificationId: id });\n    this.props.socketNotificationSuccess({\n      data: { ...this.props.notificationSocketData },\n    });\n  };\n  seeAll = () => {\n    this.props.history.push(\"/notification\");\n  };\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n  render() {\n    const { showNotification, logout } = this.state;\n    const { notificationSocketData } = this.props;\n    return (\n      <>\n        <nav className=\"navbar beforel navbar-expand-md py-1\">\n          <Link to=\"/dashboard\" class=\"navbar-brand\" href=\"dashboard.html\">\n            <img class=\"big img-fluid\" src={header_logo} />\n            <img class=\"mini img-fluid\" src={logom} />\n          </Link>\n         {this.props.history.location.pathname == '/add-metadata' ? <div>\n            <h2 class=\"f-b\" style={{fontWeight:'100',fontSize:'24px'}}>\n              <b>Create Tik</b>\n            </h2>\n          </div>:null}\n          <ul className=\"nav navbar-top-links navbar-right\">\n            <li className=\"ml-2 mr-2\">\n              <a\n                href\n                className=\"btn p-0\"\n                data-toggle=\"modal\"\n                data-target=\"#searchmodal\"\n              >\n                <img className src={searcho} />\n                {/* <i className=\"fas fa-search\"></i> */}\n              </a>\n            </li>\n\n            {this.props.document == null && this.props.history.location.pathname != '/add-metadata' ? (\n              <li className=\"ml-2 mr-2\">\n                <a\n                  onClick={() => {\n                    this.props.history.push(\"/add-metadata\");\n                    localStorage.setItem(\n                      \"prevroute\",\n                      JSON.stringify(\"create-tik\")\n                    );\n                  }}\n                  className=\"btn-border org-border br-6 d-flex p-2\"\n                >\n                  <img className src={doc} />\n                  <h4\n                    style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                    className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                  >\n                    Create New Tik\n                  </h4>\n                </a>\n              </li>\n            ) : this.props.roledocument != undefined ? (\n              this.props.document.create || this.props.roledocument.create ? (\n                <a\n                  onClick={() => {\n                    this.props.history.push(\"/add-metadata\");\n                    localStorage.setItem(\n                      \"prevroute\",\n                      JSON.stringify(\"create-tik\")\n                    );\n                  }}\n                  className=\"btn-border org-border br-6 d-flex p-2\"\n                >\n                  <img className src={doc} />\n                  <h4\n                    style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                    className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                  >\n                    Create New Tik\n                  </h4>\n                </a>\n              ) : null\n            ) : null}\n            <li className=\"dropdown mx-2\">\n              <a\n                className=\"dropdown-toggle count-info px-0\"\n                data-toggle=\"dropdown\"\n                onClick={() => this.showNotification()}\n              >\n                <i className=\"fa fa-bell f-26\"></i>{\" \"}\n                <span className=\"label label-primary\">\n                  {notificationSocketData && notificationSocketData.count}\n                </span>\n              </a>\n              {showNotification === true ? (\n                <Notification\n                  markAllRead={this.markAllRead}\n                  notification={notificationSocketData}\n                  notificationRoute={this.notificationRoute}\n                  seeAll={this.seeAll}\n                  markRead={this.markRead}\n                />\n              ) : null}\n            </li>\n\n            <li className=\"ml-2\">\n              <ProfileDropdown logout={this.logoutHandler} />\n            </li>\n          </ul>\n        </nav>\n        {logout ? (\n          <Modal closePopup={this.closeLogoutPopup}>\n            <div class=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 class=\"modal-title text-center f-20 f-m\" id=\"\">\n                Are you sure you want to log out?\n              </h4>\n              <div class=\"d-flex logout-buttons\">\n                <Button\n                  type=\"button\"\n                  buttonText=\"No\"\n                  className=\"m-1 clear_button\"\n                  onClick={() => this.closeLogoutPopup()}\n                />\n                <Button\n                  type=\"button\"\n                  buttonText={\"Yes\"}\n                  className=\"m-1\"\n                  onClick={() => this.logout()}\n                />\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  document: state.Profile.document,\n  notificationSocketData: state.Notification.notificationSocketData,\n  roledocument: state.Profile.Roledocument,\n  providerId: state.Profile.providerId,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dashboard: () => dispatch(actions.getDashboardCount()),\n  viewTik: (payload) => dispatch(actions.viewTik(payload)),\n  getMyPlan: () => dispatch(actions.getMyPlan()),\n  socketNotificationSuccess: (payload) =>\n    dispatch(actions.socketNotificationSuccess(payload)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(HeaderWithoutSearch)\n);\n","C:\\react-main\\src\\component\\AddTagForm.jsx",["1599","1600"],"import React, { useRef } from 'react';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\nconst AddTagForm = React.forwardRef((props, ref) => {\n  const { onChangeTag, tags, advanceSearchValue } = props;\n  const inputProps = {\n    className: 'react-tagsinput-input',\n    placeholder: 'Enter Tags',\n  };\n  const handleChange = (tags) => {\n    onChangeTag(tags);\n  };\n  return (\n    <>\n      <TagsInput ref={ref} value={tags} onChange={handleChange} inputProps={inputProps} />\n    </>\n  );\n});\n\nexport default AddTagForm;\n","C:\\react-main\\src\\component\\SearchForm.jsx",["1601","1602","1603","1604","1605","1606","1607","1608","1609","1610"],"/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport {\n  DropDown, AddTagForm,\n} from './index.jsx';\nimport { Formik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { staticLabel } from '../constants/Constants.js';\nimport 'react-tagsinput/react-tagsinput.css';\nimport cal from \"../assets/img/cal.png\";\n\nlet initialValues = {};\nconst style = {\n  inputField: {\n    borderColor: 'black',\n    borderWidth: '1px',\n    border: '1px solid #fff',\n    borderRadius: '6px',\n  },\n  chips: {\n    background: '#9f9a9a',\n    boxShadow: '1px 1px 6px #ddd',\n  },\n  optionContainer: {\n    background: '##f5f0f0',\n  },\n  option: {\n    background: 'none',\n    color: 'black',\n    borderBottomWidth: '1px',\n    borderColor: 'black',\n  },\n};\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n    };\n\n    this.multiFromSearch = React.createRef();\n    this.multiToSearch = React.createRef();\n    this.addTag = React.createRef();\n  }\n\n  clearForm = (resetForm) => {\n    resetForm();\n    this.multiFromSearch.current.resetSelectedValues();\n    this.multiToSearch.current.resetSelectedValues();\n\n    const data = this.multiFromSearch.current;\n    const data1 = this.multiToSearch.current;\n    const data2 = this.addTag.current;\n    data.state.inputValue = '';\n    data1.state.inputValue = '';\n    data2.state.tag = '';\n\n    document.getElementsByClassName('react-tagsinput-input')[0].value = '';\n    document.getElementsByClassName('react-tagsinput-input')[0].defaultValue = '';\n    this.props.clearAdvanceSearchValue();\n  };\n\n  handleSubmit = (values) => {\n    const { advanceSearch } = this.props;\n    const {\n      status, category, createDateFrom, createDateTo, template, from, to, tags,\n    } = values;\n\n    if (status !== '' || category !== '' || createDateFrom !== '' || createDateTo !== '' || template !== '' || from.length > 0 || to.length > 0 || tags.length > 0) {\n      const fromData = [];\n      const toData = [];\n\n      from && from.map((item) => fromData.push(item.id));\n      to && to.map((item) => toData.push(item.id));\n\n      const finalObj = {};\n\n      finalObj.status = status || '';\n      finalObj.category = category || '';\n      finalObj.createDateFrom = createDateFrom && moment(createDateFrom).format('MM-DD-YYYY') || '';\n      finalObj.createDateTo = createDateTo && moment(createDateTo).format('MM-DD-YYYY') || '';\n      finalObj.template = template || '';\n      finalObj.form = fromData || '';\n      finalObj.to = toData || '';\n      finalObj.tag = tags || '';\n      advanceSearch(finalObj, values);\n    } else {\n      toast.error('at least one field required!');\n    }\n  };\n\n  render() {\n    const { search } = staticLabel;\n    const {\n      toReceiverData, templateList, fromProviderData, advanceSearchValue,\n    } = this.props;\n    const {\n      labelStatus, labelTags, labelFrom, labelTo, labelCreationDate, labelTemplate, status, category, labelCategory,\n    } = search;\n    const templateData = templateList.length > 0 && templateList.map((item) => ({ label: item.template_name, value: item._id }));\n\n    const fromData = [];\n    const toData = [];\n    if (advanceSearchValue !== '') {\n      const { form, to } = advanceSearchValue;\n      if (form !== '' && form.length > 0) {\n        fromProviderData.map((item) => {\n          form.map((id) => {\n            if (item._id === id) {\n              fromData.push({ name: item.email, id: item._id });\n            }\n          });\n        });\n      }\n      if (to !== '' && to.length > 0) {\n        toReceiverData.map((item) => {\n          to.map((id) => {\n            if (item._id === id) {\n              toData.push({ name: item.email, id: item._id });\n            }\n          });\n        });\n      }\n\n      initialValues = {\n        status: advanceSearchValue.status !== '' ? advanceSearchValue.status : '',\n        category: advanceSearchValue.category !== '' ? advanceSearchValue.category : '',\n        from: advanceSearchValue.form.length > 0 ? fromData : '',\n        to: advanceSearchValue.to.length > 0 ? toData : '',\n        createDateFrom: advanceSearchValue.createDateFrom !== '' ? new Date(advanceSearchValue.createDateFrom) : '',\n        createDateTo: advanceSearchValue.createDateTo !== '' ? new Date(advanceSearchValue.createDateTo) : '',\n        template: advanceSearchValue.template !== '' ? advanceSearchValue.template : '',\n        tags: advanceSearchValue.tag.length > 0 ? advanceSearchValue.tag : [],\n      };\n\n    } else {\n      initialValues = {\n        status: '',\n        category: '',\n        from: '',\n        to: '',\n        createDateFrom: '',\n        createDateTo: '',\n        template: '',\n        tags: [],\n      };\n    }\n    console.log(toReceiverData,fromProviderData)\n    return (\n      <div className=\"searchDrop dropdown-menu p-3 show\" aria-labelledby=\"searchDrop\">\n        <Formik\n          initialValues={initialValues}\n          enableReinitialize\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n            resetForm,\n          }) => (\n              <>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelStatus}</label>\n                  <div className=\"col-sm-9\">\n                    <DropDown\n                      options={status}\n                      onChange={(value) => setFieldValue('status', value)}\n                      placeholder\n                      placeholderText=\"Select Status / Type\"\n                      error={errors.status}\n                      value={values.status}\n                      showError={\n                        touched.status && errors.status\n                      }\n                      onBlur={() => !touched.status\n                        && setFieldTouched('status', true, true)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelCategory}</label>\n                  <div className=\"col-sm-9\">\n                    <DropDown\n                      options={category}\n                      onChange={(value) => setFieldValue('category', value)}\n                      placeholder\n                      error={errors.category}\n                      value={values.category}\n                      showError={\n                        touched.category && errors.category\n                      }\n                      onBlur={() => !touched.category\n                        && setFieldTouched('category', true, true)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelTags}</label>\n                  <div className=\"col-sm-9\">\n                    <AddTagForm\n                      ref={this.addTag}\n                      advanceSearchValue={advanceSearchValue}\n                      onChangeTag={(tags) => {\n                        setFieldValue('tags', tags);\n                      }}\n                      tags={values.tags}\n                      addTagLabel=\"Add Tag\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"from\" className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelFrom}</label>\n                  <div className=\"col-sm-9\">\n                    <div className=\"input-group\">\n                      <Multiselect\n                        options={fromProviderData && fromProviderData.map((e, i) => ({ name: e.email, id: e._id }))}\n                        // options={toReceiverData && toReceiverData.map((e, i) => ({ name: e.email, id: e._id }))}\n\n                        selectedValues={values.from}\n                        onSelect={(selectedList) => {\n                          setFieldValue('from', selectedList);\n                        }}\n                        onRemove={(selectedList) => {\n                          setFieldValue('from', selectedList);\n                        }}\n                        displayValue=\"name\"\n                        placeholder=\"Enter From\"\n                        style={style}\n                        error={errors.from}\n                        closeIcon=\"cancel\"\n                        ref={this.multiFromSearch}\n                      />\n                      <div className=\"formError\">\n                        {' '}\n                        {errors.from ? errors.from : null}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"to\" className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelTo}</label>\n                  <div className=\"col-sm-9\">\n                    <div className=\"input-group\">\n                      <Multiselect\n                        options={toReceiverData && toReceiverData.map((e, i) => ({ name: e.email, id: e._id }))}\n                        selectedValues={values.to}\n                        onSelect={(selectedList) => {\n                          setFieldValue('to', selectedList);\n                        }}\n                        onRemove={(selectedList) => {\n                          setFieldValue('to', selectedList);\n                        }}\n                        displayValue=\"name\"\n                        placeholder=\"Enter To\"\n                        style={style}\n                        error={errors.to}\n                        closeIcon=\"cancel\"\n                        ref={this.multiToSearch}\n                      />\n                      <div className=\"formError\">\n                        {' '}\n                        {errors.to ? errors.to : null}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor className=\"col-sm-3 col-form-labe justify-content-start f-18 f-m\">{labelCreationDate}</label>\n                  <div className=\"col-sm-9 dateinput d-flex align-items-center\">\n                    <DatePicker\n                      value={values.createDateFrom}\n                      onChange={(value) => {\n                        setFieldValue('createDateFrom', value);\n                        setFieldValue('createDateTo', new Date());\n                      }}\n                      dateFormat=\"dd-MM-yyyy\"\n                      className=\"text-center dull py-1 px-2 f-14 f-m form-control w-100 datetimepicker2\"\n                      selected={values.createDateFrom}\n                      maxDate={new Date()}\n                      placeholderText=\"DD/MM/YYYY\"\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                    />\n                    <label>\n                      <button className=\"border-0 mr-1 event-none\" disabled>\n                        <img src={cal} />\n                      </button>\n                    </label>\n                    <h3 className=\"mr-2 ml-2\">To</h3>\n                    <DatePicker\n                      value={values.createDateTo}\n                      onChange={(value) => setFieldValue('createDateTo', value)}\n                      placeholderText=\"DD/MM/YYYY\"\n                      dateFormat=\"dd-MM-yyyy\"\n                      className=\"text-center dull py-1 px-2 f-14 f-m form-control w-100 datetimepicker2\"\n                      selected={values.createDateTo}\n                      minDate={values.createDateFrom}\n                      maxDate={new Date()}\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                    />\n                    <label>\n                      <button className=\"border-0 mr-1 event-none\" disabled>\n                        <img src={cal} />\n                      </button>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"Template\" className=\"col-sm-3 col-form-label justify-content-start f-18 f-m\">{labelTemplate}</label>\n                  <div className=\"col-sm-9\">\n                    <DropDown\n                      options={templateData && templateData}\n                      onChange={(value) => setFieldValue('template', value)}\n                      placeholder\n                      error={errors.template}\n                      value={values.template}\n                      showError={\n                        touched.template && errors.template\n                      }\n                      onBlur={() => !touched.template\n                        && setFieldTouched('template', true, true)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <button\n                    type=\"button\"\n                    onClick={() => this.clearForm(resetForm)}\n                    className=\"btn btn-border ml-3 mr-2 flex-fill f-18 f-b \"\n                  >\n                    Clear\n                </button>\n                  <button\n                    type=\"button\"\n                    onClick={handleSubmit}\n                    className=\"btn btn-org mr-3 ml-2 flex-fill f-18 f-b \"\n                  >\n                    Search\n                </button>\n                </div>\n              </>\n            )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","C:\\react-main\\src\\component\\Search.jsx",[],"C:\\react-main\\src\\component\\TorReport.jsx",[],"C:\\react-main\\src\\container\\reports\\DateFilter.jsx",["1611","1612","1613"],"import React, {useState} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { staticLabel } from '../../constants/Constants.js';\nimport cal from \"../../assets/img/cal.png\";\n\nconst DateFilter = (props) => {\n  const [disable, setDisable] = useState(true)\n  const { startDateTab, endDateTab, handleChanges } = props;\n  const { reports } = staticLabel;\n  const { reportFrom, reportTo } = reports;\n  console.log(startDateTab)\n  return (\n    <div className=\"pl-5 dateinput d-flex align-items-center date-filter-wrapper\">\n      <h3 className=\"mx-2\">{reportFrom}</h3>\n      <div style={{ minWidth: '150px' }}>\n        <DatePicker\n          value={startDateTab}\n          onChange={(date) => {\n            {handleChanges(date, endDateTab);setDisable(false)}\n          }\n          }\n          dateFormat=\"dd-MM-yyyy\"\n          className={\n            \"text-center dull py-1 px-2 f-14 f-m form-control w-100 datetimepicker1\"\n          }\n          selected={startDateTab}\n          maxDate={new Date()}\n          showMonthDropdown\n          showYearDropdown\n          dropdownMode=\"select\"\n          placeholderText=\"MM/DD/YYYY\"\n          selectsStart\n        />\n      </div>\n      <button\n        class=\"border-0 mr-1 event-none\"\n        disabled\n      >\n        <img src={cal} />\n      </button>\n      <h3 className=\"mr-2 ml-4\">{reportTo}</h3>\n      <div style={{ minWidth: '150px' }}>\n        <DatePicker\n          value={endDateTab}\n          onChange={(date) => {\n            handleChanges(startDateTab, date)\n          }}\n          dateFormat=\"dd-MM-yyyy\"\n          className={\n            \"text-center dull py-1 px-2 f-14 f-m form-control w-100 datetimepicker2\"\n          }\n          selected={endDateTab}\n          minDate={startDateTab}\n          maxDate={new Date()}\n          showMonthDropdown\n          showYearDropdown\n          dropdownMode=\"select\"\n          placeholderText=\"DD/MM/YYYY\"\n          selectsEnd\n          disabled={disable}\n          \n        />\n      </div>\n      <button className=\"border-0 mr-1 event-none\" disabled>\n        <img src={cal} />\n      </button>\n    </div >\n  );\n};\n\nexport default DateFilter;","C:\\react-main\\src\\sagas\\index.js",[],"C:\\react-main\\src\\helper\\rounderChart.js",[],"C:\\react-main\\src\\actions\\Notification.js",[],"C:\\react-main\\src\\actions\\Transaction.js",[],"C:\\react-main\\src\\actions\\Help.js",[],"C:\\react-main\\src\\reducers\\Notification.js",["1614"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from \"../constants/ActionTypes\";\n\nexport const INITIAL_STATE = {\n  notificationListData: \"\",\n  notificationSocketData: \"\",\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.NOTIFICATION_SUCCESS:\n      return {\n        ...state,\n        notificationListData: action.payload.data,\n      };\n    case actionTypes.SOCKET_NOTIFICATION_SUCCESS:\n      return {\n        ...state,\n        notificationSocketData: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Transaction.js",["1615"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  transactionList: '',\n  transactionDetailSuccess: '',\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.TRANSACTION_LIST_SUBMIT:\n      return {\n        ...state,\n        transactionList: action.payload.data,\n      };\n    case actionTypes.TRANSACTION_DETAIL_SUCCESS:\n      return {\n        ...state,\n        transactionDetailSuccess: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Analytics.js",["1616"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  apiKey: '',\n  logList: '',\n  logListDetail: '',\n  logReportSuccess: '',\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.GENERATE_KEY_SUCCESS:\n      return {\n        ...state,\n        apiKey: action.payload.data,\n      };\n    case actionTypes.LOG_LIST_SUCCESS:\n      return {\n        ...state,\n        logList: action.payload.data,\n      };\n    case actionTypes.LOG_LIST_DETAIL_SUCCESS:\n      return {\n        ...state,\n        logListDetail: action.payload.data,\n      };\n    case actionTypes.LOG_REPORT_SUCCESS:\n      return {\n        ...state,\n        logReportSuccess: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Help.js",["1617"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  ticketListData: '',\n  ticketSubmitData: '',\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.TICKET_LIST_SUCCESS:\n      return {\n        ...state,\n        ticketListData: action.payload.data,\n      };\n    case actionTypes.TICKET_SUBMIT_SUCCESS:\n      return {\n        ...state,\n        ticketSubmitData: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Payment.js",["1618"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  customerDetail: '',\n  cardDetails: '',\n  cardPaymentSuccess: '',\n  cardRemoveSuccess: '',\n  cardError: '',\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROFILE_EDIT:\n      return {\n        ...state,\n        customerDetail: action.payload.data,\n      };\n    case actionTypes.CUSTOMER_PAYMENT_DETAIL_SUCCESS:\n      return {\n        ...state,\n        cardDetails: action.payload.data.data.cards.data,\n      };\n    case actionTypes.CARD_PAYMENT_SUCCESS:\n      return {\n        ...state,\n        cardPaymentSuccess: action.payload.data,\n      };\n    case actionTypes.CARD_REMOVE_SUCCESS:\n      return {\n        ...state,\n        cardRemoveSuccess: action.payload.data,\n      };\n    case actionTypes.CARD_ERROR:\n      return {\n        ...state,\n        cardError: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Search.js",["1619"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  toReceiverData: [],\n  toProviderData: [],\n  advanceSearchValue: '',\n  advanceSearchValueData: '',\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.TO_RECEIVER_API_SUCCESS:\n      return {\n        ...state,\n        toReceiverData: action.payload.data,\n      };\n    case actionTypes.TO_RECEIVER_API_ERROR:\n      return {\n        ...state,\n        toReceiverData: [],\n      };\n    case actionTypes.FROM_PROVIDER_API_SUCCESS:\n      return {\n        ...state,\n        toProviderData: action.payload.data,\n      };\n    case actionTypes.FROM_PROVIDER_API_ERROR:\n      return {\n        ...state,\n        toProviderData: [],\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_ADVANCESEARCH:\n      return {\n        ...state,\n        searchData: [],\n        searchLoader: true,\n      };\n    case actionTypes.PROVIDER_ADVANCESEARCH_SUCCESS:\n      return {\n        ...state,\n        searchData: action.payload.data,\n        searchLoader: false,\n        advanceSearchValueData: action.payload.advanceSearchValueData,\n      };\n    case actionTypes.PROVIDER_ADVANCESEARCH_ERROR:\n      return {\n        ...state,\n        searchData: [],\n        searchLoader: false,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_SIMPLESEARCH:\n      return {\n        ...state,\n        searchData: [],\n        searchLoader: true,\n      };\n    case actionTypes.ADVANCE_SEARCH_VALUES:\n      return {\n        ...state,\n        advanceSearchValue: action.payload,\n      };\n    case actionTypes.SIMPLE_SEARCH_VALUES:\n      return {\n        ...state,\n        simpleSearchValues: action.payload,\n      };\n    case actionTypes.CLEAR_SEARCH_VALUES:\n      return {\n        ...state,\n        simpleSearchValues: '',\n        advanceSearchValue: '',\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Subscription.js",["1620"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from \"../constants/ActionTypes\";\n\nexport const INITIAL_STATE = {\n  subscriptionPlan: \"\",\n  subscriptionSelectionPlan: \"\",\n  myPlan: \"\",\n  specialFeatures: \"\",\n  successMsg: \"\",\n  invoiceDetail: \"\",\n  subscriptionError: false,\n  isfree: \"\",\n  subscriptionPayable: \"\",\n  payableId: \"\",\n  newSubId: \"\",\n  subscriptionPayableData: \"\",\n  promoSuccess: '',\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.GET_SUBSCRIPTION_SUCCESS:\n      return {\n        ...state,\n        subscriptionPlan: action.payload.data,\n        promoSuccess: ''\n      };\n    case actionTypes.SUBSCRIPTION_SELECTION_SUCCESS:\n      return {\n        ...state,\n        subscriptionSelectionPlan: action.payload.data.data,\n        successMsg: action.payload.data.msg,\n      };\n    case actionTypes.GET_MYPLAN_SUCCESS:\n      return {\n        ...state,\n        myPlan: action.payload.data,\n        specialFeatures:\n          action.payload.data.subscriptionPlanDetails.specialFeatures,\n      };\n    case actionTypes.GET_INVOICE_DETAIL_SUCCESS:\n      return {\n        ...state,\n        invoiceDetail: action.payload.data,\n      };\n    case actionTypes.SUBSCRIPTION_ERROR:\n      return {\n        ...state,\n        subscriptionError: true,\n        myPlan: \"\",\n        isfree: action.payload.error,\n      };\n    case actionTypes.SUBSCRIPTION_ERROR_FALSE:\n      return {\n        ...state,\n        subscriptionError: false,\n      };\n    case actionTypes.SUBSCRIPTION_SELECTION_SUCCESS:\n      return {\n        ...state,\n        subscriptionPayable: action.payload.data,\n\n      };\n    case actionTypes.PAYABLE_AMOUNT:\n      return {\n        ...state,\n        payableId: action.payload.data,\n      };\n    case actionTypes.NEW_SUBSCRIPTION:\n      return {\n        ...state,\n        newSubId: action.payload.newSubId,\n      };\n    case actionTypes.SUBSCRIPTION_PAYABLE_SUCCESS:\n      return {\n        ...state,\n        subscriptionPayableData: action.payload.data.data,\n      };\n    case actionTypes.PROMO_SUCCESS:\n      return {\n        ...state,\n        promoSuccess: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Reports.js",["1621"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  tikReports: {\n    tikReportsData: {},\n    tikReportsLoader: false,\n  },\n  torReports: {\n    torReportsData: {},\n    torReportsLoader: false,\n  },\n  torFilterData: '',\n  tabData: 'all',\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_INITIALIZATION_TIK_REPORTS_MANAGEMENT_LIST:\n      return {\n        ...state,\n        tikReports: {\n          tikReportsData: {},\n          tikReportsLoader: true,\n        },\n      };\n    case actionTypes.PROVIDER_TIK_REPORTS_SUCCESS_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        tikReports: {\n          tikReportsData: action.payload.data,\n          tikReportsLoader: false,\n        },\n      };\n    case actionTypes.TIK_REPORTS_ERROR:\n      return {\n        ...state,\n        tikReports: {\n          tikReportsData: {},\n          tikReportsLoader: false,\n        },\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_TOR_REPORTS_MANAGEMENT_LIST:\n      return {\n        ...state,\n        torReports: {\n          torReportsData: {},\n          torReportsLoader: true,\n        },\n      };\n    case actionTypes.PROVIDER_TOR_REPORTS_SUCCESS_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        torReports: {\n          torReportsData: action.payload.data,\n          torReportsLoader: false,\n        },\n      };\n    case actionTypes.TOR_REPORTS_ERROR:\n      return {\n        ...state,\n        torReports: {\n          torReportsData: {},\n          torReportsLoader: false,\n        },\n      };\n    case actionTypes.GET_TIK_TAB_DATA_TIK:\n      return {\n        ...state,\n        tabData: action.payload,\n      };\n    case actionTypes.TOR_REPORTS_ROLE_SUCCESS:\n      return {\n        ...state,\n        torFilterData: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Profile.js",["1622"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  firstName: '',\n  lastName: '',\n  mobileNumber: '',\n  email: '',\n  designation: '',\n  companyName: '',\n  address: '',\n  profileUpdateSuccess: '',\n  document: '',\n  invoice: '',\n  payment: '',\n  role: '',\n  template: '',\n  photoData: '',\n  mobileNumUpdate: '',\n  updatedAt: '',\n  userFirstname: '',\n  userLastname: '',\n  roleName: '',\n  dashboard: '',\n  userkey: '',\n  invitationCode: '',\n  referralDetails: '',\n  showReferral: '',\n  providerId: '',\n};\n/*---------------------------------------------------------------------\n               Profile\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROFILE_INFO_SUCCESS:\n      return {\n        ...state,\n        firstName: action.payload.data.data.firstName,\n        lastName: action.payload.data.data.lastName,\n        mobileNumber: action.payload.data.data.mobileNumber,\n        email: action.payload.data.data.email,\n        designation: action.payload.data.data.designation,\n        companyName: action.payload.data.data.companyName,\n        address: action.payload.data.data.address,\n        document: action.payload.data.data.otherResponsibilities != null ? action.payload.data.data.otherResponsibilities.document : null,\n        invoice: action.payload.data.data.otherResponsibilities != null ? action.payload.data.data.otherResponsibilities.invoice : null,\n        payment: action.payload.data.data.otherResponsibilities != null ? action.payload.data.data.otherResponsibilities.payment : null,\n        role: action.payload.data.data.otherResponsibilities != null ? action.payload.data.data.otherResponsibilities.role : null,\n        template: action.payload.data.data.otherResponsibilities != null ? action.payload.data.data.otherResponsibilities.template : null,\n        Roledocument: action.payload.data.data.role != null && action.payload.data.data.role != undefined ? action.payload.data.data.role.document : null,\n        Roleinvoice: action.payload.data.data.role != null ? action.payload.data.data.role.invoice : null,\n        Rolepayment: action.payload.data.data.role != null ? action.payload.data.data.role.payment : null,\n        Rolerole: action.payload.data.data.role != null ? action.payload.data.data.role.role : null,\n        Roletemplate: action.payload.data.data.role != null ? action.payload.data.data.role.template : null,\n        photoData: action.payload.data.data.photo,\n        updatedAt: action.payload.data.data.updatedAt,\n        userFirstname: action.payload.data.data.firstName,\n        userLastname: action.payload.data.data.lastName,\n        roleName: action.payload.data.data.role != undefined ? action.payload.data.data.role.roleName : 'Super Provider',\n        userkey: action.payload.data.data,\n        invitationCode: action.payload.data.data.invitationCode,\n        referralDetails: action.payload.data.data.referralDetails,\n        showReferral: action.payload.data.data.isSuperProvide,\n        providerId: action.payload.data.data.providerId,\n      };\n    case actionTypes.PROFILE_EDIT:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.e.target.value,\n      };\n    case actionTypes.PROFILE_UPDATE_SUCCESS:\n      return {\n        ...state,\n        profileUpdateSuccess: action.payload.data,\n      };\n    case actionTypes.MOBILE_NUMBER_UPDATE_SUCCESS:\n      return {\n        ...state,\n        mobileNumUpdate: action.payload.data,\n      };\n    case actionTypes.DASHBOARD_SUCCESS:\n      return {\n        ...state,\n        dashboard: action.payload.data.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Tik.js",["1623"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  loader: false,\n  documentList: [],\n  metaList: [],\n  metaData: [],\n  metaDataList: '',\n  reciverData: '',\n  createTikSuccess: '',\n  successPopup: '',\n  successLoader: false,\n  saveDraftSuccess: '',\n  draftDetailSuccess: '',\n  imgList: [],\n  image: [],\n  imgListData: [],\n  reciverList: [],\n  reciverDraftList: [],\n  tikDetailSuccess: '',\n  tikListData: [],\n  existingTags: [],\n  deleteFlagSuccess: false,\n  viewTik: '',\n  archiveSuccess: '',\n  tikLimit: false,\n};\n/*---------------------------------------------------------------------\n               Tik\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.TIK_INITIALIZATION:\n      return {\n        ...state,\n        loader: false,\n        successPopup: '',\n        successLoader: false,\n      };\n\n    case actionTypes.TIK_EDIT:\n      return {\n        ...state,\n        metaData: action.payload.metaData,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: true,\n        documentList: []\n      };\n    case actionTypes.PROVIDER_GET_DOCUMENT_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        loader: false,\n        documentList: action.payload.data,\n      };\n    case actionTypes.PROVIDER_ERROR_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: false,\n        documentList: [],\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_META_DATA_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        metaList: [],\n      };\n    case actionTypes.PROVIDER_GET_META_DATA_DOCUMENT_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        // loader: false,\n        metaList: action.payload.data,\n      };\n    case actionTypes.PROVIDER_ERROR_META_DATA_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        metaList: [],\n      };\n    case actionTypes.GET_META_DATA_SUCCESS:\n      return {\n        ...state,\n        metaDataList: action.payload.data,\n        tikLimit: false,\n      };\n    case actionTypes.RECIVER_LIST_SUCCESS:\n      return {\n        ...state,\n        reciverData: action.payload.data,\n      };\n    case actionTypes.CREATE_TIK_SUCCESS:\n      return {\n        ...state,\n        createTikSuccess: action.payload.data,\n      };\n    case actionTypes.PROVIDER_DELETE_DRAFT_INITIALIZATION_DATA_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n\n      };\n    case actionTypes.PROVIDER__DRAFT_SUCCESS_DOCUMENT_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n        deleteFlag: true,\n      };\n\n    case actionTypes.PROVIDER_DRAFT_ERROR_DOCUMENT_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: false,\n      };\n    case actionTypes.SAVE_DRAFT_SUCCESS:\n      return {\n        ...state,\n        saveDraftSuccess: action.payload.data,\n      };\n    case actionTypes.DRAFT_DETAIL_SUCCESS:\n      return {\n        ...state,\n        draftDetailSuccess: action.payload.data,\n        // imgList: action.payload.data.draftData.attributeList,\n        imgListData: action.payload.data.draftData.attributeList,\n        reciverDraftList: action.payload.data.draftData.receiverList,\n      };\n    case actionTypes.IMG_LIST_EDIT:\n      return {\n        ...state,\n        imgList: [...action.payload.previousdata],\n        // attrVal: [...action.payload.previousdata]\n      };\n    case actionTypes.IMAGE_EDIT:\n      return {\n        ...state,\n        image: [...action.payload.previousdata2],\n        // attrVal: [...action.payload.previousdata]\n      };\n    case actionTypes.RECIVER_DRAFT:\n      return {\n        ...state,\n        reciverList: action.payload.teeDetail,\n        // attrVal: [...action.payload.previousdata]\n      };\n    case actionTypes.RECIVER_DRAFT_EDIT:\n      return {\n        ...state,\n        reciverDraftList: action.payload.reciverList == null ? null : action.payload.reciverList,\n        // attrVal: [...action.payload.previousdata]\n      };\n    case actionTypes.CLEAR_DRAFT:\n      return {\n        ...state,\n        reciverDraftList: [],\n        reciverList: [],\n        image: [],\n        imgListData: [],\n        imgList: [],\n      };\n    case actionTypes.TIK_DETAIL_SUCCESS:\n      return {\n        ...state,\n        tikDetailSuccess: action.payload.data,\n        tikListData: action.payload.data.blockchainDocData.DocumentObject.Attributes,\n      };\n    case actionTypes.UPDATE_TIK_SUCCESS:\n      return {\n        ...state,\n        updateTikSuccess: action.payload.data,\n      };\n    case actionTypes.ADD_META_DATA:\n      return {\n        ...state,\n        metaData: action.payload.metaData,\n      };\n    case actionTypes.ADD_TAG_DATA_TIK_INITIALIZATION:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n      };\n    case actionTypes.ADD_TAG_DATA_TIK_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n      };\n    case actionTypes.ADD_TAG_DATA_IN_TIK_ERROR:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: '',\n      };\n    case actionTypes.DELETE_TAG_DATA_TIK_SUCCESS:\n      return {\n        ...state,\n        deleteFlagSuccess: true,\n      };\n    case actionTypes.DELETE_TAG_DATA_IN_TIK_ERROR:\n      return {\n        ...state,\n        deleteFlagSuccess: false,\n      };\n    case actionTypes.ADD_EXISTING_TAG_DATA_TIK_INITIALIZATION:\n      return {\n        ...state,\n        existingTagsLoader: true,\n        existingTags: [],\n        deleteFlagSuccess: false,\n      };\n    case actionTypes.ADD_EXISTING_TAG_DATA_TIK_SUCCESS:\n      return {\n        ...state,\n        existingTagsLoader: false,\n        existingTags: action.payload.data,\n      };\n    case actionTypes.ADD_EXISTING_TAG_DATA_TIK_ERROR:\n      return {\n        ...state,\n        existingTagsLoader: false,\n        existingTags: [],\n      };\n    case actionTypes.VIEW_TIK_SUCCESS:\n      return {\n        ...state,\n        viewTik: action.payload.data,\n      };\n    case actionTypes.ARCHIVE_SUCCESS:\n      return {\n        ...state,\n        archiveSuccess: action.payload.data,\n        successPopup: action.payload.data,\n      };\n    case actionTypes.TIK_LIMIT:\n      return {\n        ...state,\n        tikLimit: true,\n        metaDataList: [],\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Template.js",["1624"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  templateList: [],\n  addPopupLoader: false,\n  loader: false,\n  userSuccess: '',\n  deleteSuccess: '',\n  EditSuccess: '',\n  templateDetail: '',\n  recentAttributeLoader: false,\n  recentAttribute: [],\n  createTemplateFlag: false,\n  templateUpdate: false,\n  templateDetailsInfo: null,\n  selectedTemplate: [],\n  selectedTemplateLoader: false,\n  successPopup: '',\n  successLoader: false,\n  detailsLoader: false,\n  autoSaveSuccess: false,\n  autoSaveData: null,\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_TEMPLATE_INITIALIZATION:\n      return {\n        ...state,\n        loader: false,\n        successPopup: '',\n        successLoader: false,\n        templateUpdate: false,\n        detailsLoader: false,\n        autoSaveSuccess: false,\n        templateDetailsInfo: null,\n        autoSaveData: null,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: true,\n      };\n    case actionTypes.PROVIDER_GET_TEMPLATE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        templateList: action.payload.data,\n        loader: false,\n      };\n    case actionTypes.PROVIDER_DELETE_TEMPLATE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        deleteSuccess: action.payload.data,\n      };\n    case actionTypes.PROVIDER_TEMPLATE_DETAIL_SUCCESS:\n      return {\n        ...state,\n        templateDetail: action.payload.data,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_RECENT_TEMPLATE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        recentAttribute: [],\n        recentAttributeLoader: true,\n      };\n    case actionTypes.PROVIDER_GET_RECENT_TEMPLATE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        recentAttribute: action.payload.data,\n        recentAttributeLoader: false,\n      };\n    case actionTypes.PROVIDER_GET_RECENT_TEMPLATE_MANAGEMENT_LIST_ERROR:\n      return {\n        ...state,\n        recentAttribute: [],\n        recentAttributeLoader: false,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_CREATE_TEMPLATE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successPopup: '',\n        successLoader: true,\n        templateUpdate: false,\n      };\n    case actionTypes.PROVIDER_CREATE_TEMPLATE_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        successPopup: action.payload.data,\n        successLoader: false,\n        templateUpdate: true,\n        autoSaveData: null,\n        autoSaveSuccess: null,\n      };\n    case actionTypes.PROVIDER_CREATE_TEMPLATE_MANAGEMENT_ERROR:\n      return {\n        ...state,\n        successPopup: '',\n        successLoader: false,\n        templateUpdate: false,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_DETAILS_TEMPLATE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        detailsLoader: true,\n        // templateDetailsInfo: {},\n      };\n    case actionTypes.PROVIDER_DETAILS_TEMPLATE_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        detailsLoader: false,\n        templateDetailsInfo: action.payload.data.data,\n      };\n    case actionTypes.PROVIDER_DETAILS_TEMPLATE_MANAGEMENT_ERROR:\n      return {\n        ...state,\n        detailsLoader: false,\n        templateDetailsInfo: {},\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_SELECT_ACCEPTANCE_TEMPLATE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        selectedTemplateLoader: true,\n      };\n    case actionTypes.PROVIDER_GET_SELECT_ACCEPTANCE_TEMPLATE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        selectedTemplate: action.payload.data,\n        selectedTemplateLoader: false,\n      };\n    case actionTypes.PROVIDER_GET_SELECT_ACCEPTANCE_TEMPLATE_MANAGEMENT_LIST_ERROR:\n      return {\n        ...state,\n        selectedTemplate: [],\n        selectedTemplateLoader: false,\n      };\n    case actionTypes.PROVIDER_EDIT_AUTO_SAVE_TEMPLATE_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        // autoSaveSuccess: true,\n        autoSaveData: action.payload.data,\n        autoSaveSuccess: false,\n      };\n    case actionTypes.PROVIDER_EDIT_AUTO_SAVE_TEMPLATE_MANAGEMENT_ERROR:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Role.js",["1625"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  roleList: [],\n  loader: false,\n  successPopup: '',\n  successLoader: false,\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_INITIALIZATION_ROLE:\n      return {\n        ...state,\n        loader: false,\n        successPopup: '',\n        successLoader: false,\n      };\n\n    case actionTypes.PROVIDER_INITIALIZATION_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: true,\n      };\n    case actionTypes.PROVIDER_GET_ROLE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        roleList: action.payload.data,\n        loader: false,\n      };\n\n    case actionTypes.PROVIDER_ERROR_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        roleList: [],\n        loader: false,\n      };\n    case actionTypes.PROVIDER_DELETE_INITIALIZATION_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n      };\n    case actionTypes.PROVIDER_DELETE_ROLE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n      };\n\n    case actionTypes.PROVIDER_DELETE_ERROR_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: false,\n      };\n    case actionTypes.PROVIDER_ADD_INITIALIZATION_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n      };\n    case actionTypes.PROVIDER_ADD_ROLE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n\n      };\n    case actionTypes.PROVIDER_ADD_ERROR_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: '',\n      };\n\n    case actionTypes.PROVIDER_EDIT_INITIALIZATION_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n      };\n    case actionTypes.PROVIDER_EDIT_ROLE_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n\n      };\n    case actionTypes.PROVIDER_EDIT_ERROR_ROLE_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: '',\n      };\n\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\User.js",["1626"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  userList: [],\n  addPopupLoader: false,\n  loader: false,\n  userSuccess: '',\n  deleteSuccess: '',\n  EditSuccess: '',\n  faqSuccess: '',\n  isActive: ''\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_INITIALIZATION_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: true,\n      };\n    case actionTypes.PROVIDER_GET_USER_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        userList: action.payload.data,\n        loader: false,\n      };\n\n    case actionTypes.PROVIDER_ERROR_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        roleList: [],\n        loader: false,\n      };\n    case actionTypes.PROVIDER_DELETE_USER_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        deleteSuccess: action.payload.data,\n      };\n    case actionTypes.PROVIDER_ADD_INITIALIZATION_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        addPopupLoader: true,\n      };\n    case actionTypes.PROVIDER_ADD_USER_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        addPopupLoader: false,\n        userSuccess: action.payload.data,\n      };\n    case actionTypes.PROVIDER_EDIT_USER_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        addPopupLoader: false,\n        EditSuccess: action.payload.data,\n      };\n    case actionTypes.PROVIDER_ADD_ERROR_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        addPopupLoader: false,\n      };\n    case actionTypes.PROVIDER_ADD_ERROR_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        addPopupLoader: false,\n      };\n    case actionTypes.FAQ_SUCCESS:\n      return {\n        ...state,\n        faqSuccess: action.payload.data,\n      };\n    case actionTypes.FAQ_SEARCH_SUCCESS:\n      return {\n        ...state,\n        faqSuccess: action.payload.data,\n      };\n      case actionTypes.IS_ACTIVE:\n      return {\n        ...state,\n        isActive: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Team.js",["1627"],"/* eslint-disable no-console */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  teamList: [],\n  successPopup: '',\n  successLoader: false,\n  loader: false,\n  userList: [],\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_INITIALIZATION_TEAM:\n      return {\n        ...state,\n        loader: false,\n        successPopup: '',\n        successLoader: false,\n      };\n    case actionTypes.PROVIDER_INITIALIZATION_TEAM_MANAGEMENT_LIST:\n      return {\n        ...state,\n        loader: true,\n      };\n    case actionTypes.PROVIDER_GET_TEAM_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        teamList: action.payload.data,\n        loader: false,\n      };\n    case actionTypes.PROVIDER_ERROR_TEAM_MANAGEMENT_LIST:\n      return {\n        ...state,\n        teamList: [],\n        loader: false,\n      };\n    case actionTypes.PROVIDER_GET_TEAM_USER_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        userList: action.payload.data,\n        loader: false,\n      };\n    case actionTypes.PROVIDER_ERROR_TEAM_USER_MANAGEMENT_LIST:\n      return {\n        ...state,\n        userList: [],\n        loader: false,\n      };\n    case actionTypes.PROVIDER_DELETE_INITIALIZATION_TEAM_MANAGEMENT_LIST:\n    case actionTypes.PROVIDER_INITIALIZATION_ADD_TEAM_MANAGEMENT_LIST:\n    case actionTypes.PROVIDER_INITIALIZATION_EDIT_TEAM_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: true,\n        successPopup: '',\n      };\n    case actionTypes.PROVIDER_DELETE_TEAM_MANAGEMENT_LIST_SUCCESS:\n    case actionTypes.PROVIDER_ADD_TEAM_MANAGEMENT_LIST_SUCCESS:\n    case actionTypes.PROVIDER_EDIT_TEAM_MANAGEMENT_LIST_SUCCESS:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: action.payload.data,\n      };\n    case actionTypes.PROVIDER_ERROR_DELETE_TEAM_MANAGEMENT_LIST_SUCCESS:\n    case actionTypes.PROVIDER_ERROR_ADD_TEAM_MANAGEMENT_LIST:\n    case actionTypes.PROVIDER_ERROR_EDIT_TEAM_MANAGEMENT_LIST:\n      return {\n        ...state,\n        successLoader: false,\n        successPopup: '',\n      };\n\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\reducers\\Auth.js",["1628"],"/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable max-len */\n/*----------------------------------------------------------------------------------------------------------------\n       This is the Auth reducer where all auth related state managed like signin,signup,forgotpassword,etc\n-------------------------------------------------------------------------------------------------------------------*/\n\nimport * as actionTypes from '../constants/ActionTypes';\n\nexport const INITIAL_STATE = {\n  info: '',\n  documentVerification: '',\n  checkUser: '',\n  error: '',\n  isSuperProvider: '',\n  document: '',\n  checkUserData: '',\n  isVerified: '',\n  tokenError: '',\n  signupSuccess: '',\n  isFirstTimeLogin: '',\n};\n/*---------------------------------------------------------------------\n               User signup success feedback  message\n ----------------------------------------------------------------------*/\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PROVIDER_INFO_SUCCESS:\n      return {\n        ...state,\n        info: action.payload.data,\n      };\n    case actionTypes.PROVIDER_DOCUMENT_VERIFICATION_SUCCESS:\n      return {\n        ...state,\n        documentVerification: action.payload.data,\n      };\n    case actionTypes.PROVIDER_CHECK_USER_SUCCESS:\n      return {\n        ...state,\n        checkUser: action.payload.data,\n        checkUserData: action.payload.checkUser,\n      };\n    case actionTypes.ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    case actionTypes.ERROR_CLEAR:\n      return {\n        ...state,\n        error: '',\n        checkUser: '',\n      };\n    case actionTypes.LOGIN_SUCCESS:\n      const {\n        isSuperProvider,\n        document,\n        isVerified,\n      } = action.payload.data.data;\n      return {\n        ...state,\n        isSuperProvider: isSuperProvider ? isSuperProvider : '',\n        document: document ? document : '',\n        isVerified: isVerified ? isVerified : '',\n        isFirstTimeLogin: action.payload.data.data.isFirstTimeLogin == undefined ? action.payload.data.data.isFirstTimeLogin : null\n      };\n    case actionTypes.TOKEN_ERROR:\n      return {\n        ...state,\n        tokenError: action.payload.error,\n      };\n    case actionTypes.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupSuccess: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\react-main\\src\\sagas\\Notification.js",[],"C:\\react-main\\src\\sagas\\Transaction.js",[],"C:\\react-main\\src\\constants\\ActionTypes.js",[],"C:\\react-main\\src\\services\\index.js",[],"C:\\react-main\\src\\sagas\\Analytics.js",[],"C:\\react-main\\src\\sagas\\Help.js",[],"C:\\react-main\\src\\sagas\\Subscriptions.js",[],"C:\\react-main\\src\\sagas\\Payment.js",[],"C:\\react-main\\src\\sagas\\Search.js",[],"C:\\react-main\\src\\sagas\\Reports.js",[],"C:\\react-main\\src\\sagas\\Tik.js",[],"C:\\react-main\\src\\sagas\\Profile.js",[],"C:\\react-main\\src\\sagas\\Template.js",[],"C:\\react-main\\src\\sagas\\User.js",[],"C:\\react-main\\src\\sagas\\Auth.js",[],"C:\\react-main\\src\\sagas\\Role.js",[],"C:\\react-main\\src\\sagas\\Team.js",[],"C:\\react-main\\src\\actions\\Payment.js",[],"C:\\react-main\\src\\actions\\Analytics.js",[],"C:\\react-main\\src\\actions\\Subscriptions.js",[],"C:\\react-main\\src\\actions\\Search.js",[],"C:\\react-main\\src\\actions\\Reports.js",[],"C:\\react-main\\src\\actions\\Tik.js",[],"C:\\react-main\\src\\actions\\Profile.js",[],"C:\\react-main\\src\\actions\\User.js",[],"C:\\react-main\\src\\actions\\Template.js",[],"C:\\react-main\\src\\actions\\Role.js",[],"C:\\react-main\\src\\actions\\Team.js",[],"C:\\react-main\\src\\actions\\Auth.js",[],"C:\\react-main\\src\\component\\DocDropdown.jsx",["1629","1630","1631","1632","1633","1634","1635"],"import React, { useEffect } from 'react';\nimport {\n  Formik, FieldArray,\n} from 'formik';\nimport { Checkbox } from \"../component/index.jsx\";\n\nconst DocDropdown = (props) => {\n  let initialValues = []\n  const { metaList, handleChange, dropdownFlag, titleObject } = props;\n\n  const getIndexofMetaFiled = () => {\n    let finalMetaList = []\n    titleObject.map((data) => {\n      metaList.filter((item) => {\n        if (data.id == item.name) {\n          finalMetaList.push(data.isDropdownShow)\n        }\n      })\n    });\n    return finalMetaList\n  }\n\n  initialValues = getIndexofMetaFiled();\n  return (\n    <div>\n      <div class=\"dropdown-menu f-r show\"\n        aria-labelledby=\"metaDrop\">\n        <Formik\n          enableReinitialize\n          initialValues={{ metaFiled: initialValues }}>\n          {({\n            values,\n            setFieldValue,\n          }) => (\n              <>\n                <FieldArray\n                  name=\"metaFiled\"\n                  render={arrayHelpers => (\n                    <div>\n                      {metaList.map((meta, index) => {\n                        return (\n                          <div key={index}>\n                            <Checkbox\n                              type=\"checkbox\"\n                              name={`metaFiled[${index}]`}\n                              id={`metaFiled[${index}]`}\n                              label={meta.name}\n                              checked={values.metaFiled[index]}\n                              disabled={values.metaFiled.filter((item) => item == true).length == 1 && values.metaFiled[index]}\n                              onChange={(value) => {\n                                let a = values.metaFiled;\n                                a[index] = !values.metaFiled[index]\n                                setFieldValue('metaFiled', a)\n                                handleChange(meta, values.metaFiled)\n\n\n                              }}\n                            />\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )}\n                />\n              </>\n            )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default DocDropdown;","C:\\react-main\\src\\component\\Reports.jsx",["1636"],"import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\n\nclass Reports extends Component {\n  render() {\n    const { reports, XAxisTitle, YAxisTitle } = this.props;\n\n    const xData = [];\n    const rData = [];\n    reports && reports.length > 0 && reports.map((item) => {\n      const { _id, total } = item;\n      xData.push(moment(_id).format('MMM-YYYY'));\n      rData.push(total);\n    });\n\n    const data = {\n      labels: xData,\n      datasets: [\n        {\n          label: YAxisTitle,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: '#f27136',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: '#f27136',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: '#f27136',\n          pointHoverBorderColor: '#f27136',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: rData,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        {reports && reports.length > 0\n          ? (\n            <Line\n              ref=\"chart\"\n              data={data}\n              options={{\n                scales: {\n                  yAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: YAxisTitle,\n                      fontSize: 16,\n                      fontColor: '#fd7e14',\n                    },\n                  }],\n                  xAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: XAxisTitle,\n                      fontSize: 16,\n                      fontColor: '#fd7e14',\n                    },\n                  }],\n                },\n              }}\n            />\n          )\n          : <div className=\"no-reports\">No Data Found</div>}\n      </div>\n    );\n  }\n}\n\nexport default Reports;\n","C:\\react-main\\src\\component\\TikHistoryTable.jsx",["1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673"],"import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Loader from \"./Loader.jsx\";\nimport {\n  documentFilterColorMapper,\n  documentFilter,\n} from \"../constants/Mapper.js\";\nimport arch from \"../assets/img/arc.png\";\nimport sort_both from \"../assets/img/sort_both.png\";\nimport sort_asc from \"../assets/img/sort_asc.png\";\nimport sort_desc from \"../assets/img/sort_desc.png\";\nimport tag from \"../assets/img/tag.png\";\nimport unarch from \"../assets/img/unarch.png\";\nimport minus from \"../assets/img/minus.svg\";\nimport plus from \"../assets/img/plus.svg\";\nimport refresh from \"../assets/img/refresh.png\";\nimport edit from \"../assets/img/edit.png\";\nimport dlt from \"../assets/img/dlt.png\";\n\nexport default class TikHistoryTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: props.defaultSort,\n      sortType: \"asc\",\n      defaultIcon: sort_both,\n      dropdownFlag: false,\n      dropdownData: [],\n    };\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleSorting = (titleObject) => {\n    this.setState(\n      {\n        sort: titleObject.id,\n      },\n      () => {\n        const { sort, sortType } = this.state;\n        if (sort === titleObject.id) {\n          if (sortType === \"asc\") {\n            this.setState({\n              sortType: \"desc\",\n              defaultIcon: sort_desc,\n            });\n          } else {\n            this.setState({\n              sortType: \"asc\",\n              defaultIcon: sort_asc,\n            });\n          }\n        } else {\n          this.setState({\n            sort: titleObject.id,\n            sortType: \"asc\",\n            defaultIcon: sort_both,\n          });\n        }\n      }\n    );\n  };\n\n  plusIcon = (titleObject) => {\n    this.props.addMetaFiled(titleObject, \"plus\");\n  };\n\n  minusIcon = (titleObject) => {\n    this.props.addMetaFiled(titleObject, \"minus\");\n  };\n\n  render() {\n    const {\n      dataTable,\n      addButtonOnClick,\n      editButtonOnClick,\n      updateButtonOnClick,\n      deleteButtonOnClick,\n      loader,\n      metaList,\n      selectedFilter,\n      deleteDraftOnClick,\n      viewDraft,\n      metaFieldData,\n      action,\n      editPermission,\n      search,\n      archive,\n      unarchive,\n      isAddTag\n    } = this.props;\n    const { sort, sortType, defaultIcon } = this.state;\n    let sortedDataTable = [];\n    if (dataTable.data.length > 0) {\n      if (sort == \"date\" || sort == \"time\") {\n        sortedDataTable = _.sortBy(\n          dataTable.data,\n          (dateObj) => new Date(dateObj.createdAt)\n        );\n      } else {\n        sortedDataTable = _.sortBy(dataTable.data, sort);\n      }\n      if (sortType === \"desc\") {\n        sortedDataTable.reverse();\n      }\n    }\n    return (\n      <>\n        {(loader && <Loader />) || (\n          <div className=\"table-responsive fixHeight\">\n            {dataTable.titles.length > 0 && dataTable.data.length > 0 ? (\n              <table className=\"table apit table-hover  dataTable no-footer\">\n                <thead>\n                  <tr className=\"txt-blk\">\n                    {dataTable.titles.map((titleObject, index) => {\n                      const metaData = metaFieldData.filter(\n                        (item) => item.id === titleObject.id\n                      );\n                      return (\n                        <>\n                          {titleObject.isDropdownShow && (\n                            <th\n                              key={index}\n                              className={`tik-meta-field ${\n                                search ? \"\" : \"tik-meta-field-table\"\n                              }`}\n                            >\n                              <div>\n                                <a\n                                  key={index}\n                                  onClick={() =>\n                                    titleObject.isSort\n                                      ? this.handleSorting(titleObject)\n                                      : \"\"\n                                  }\n                                >\n                                  {titleObject.isSort && (\n                                    <img\n                                      className=\"table_sorting\"\n                                      src={\n                                        sort === titleObject.id\n                                          ? defaultIcon\n                                          : sort_both\n                                      }\n                                    />\n                                  )}\n\n                                  {titleObject.text}\n                                </a>\n                                {metaData.length > 0 &&\n                                metaData[0].id === titleObject.id ? (\n                                  metaFieldData.length === metaList.length ? (\n                                    <img\n                                      src={minus}\n                                      className=\"plus-image\"\n                                      onClick={() =>\n                                        this.minusIcon(titleObject)\n                                      }\n                                    />\n                                  ) : (\n                                    <>\n                                      {dataTable.titles[1].id ===\n                                        titleObject.id ||\n                                      metaFieldData[0].id === titleObject.id ? (\n                                        <img\n                                          src={plus}\n                                          className=\"plus-image\"\n                                          onClick={() =>\n                                            this.plusIcon(titleObject)\n                                          }\n                                        />\n                                      ) : (\n                                        <img\n                                          src={minus}\n                                          className=\"plus-image\"\n                                          onClick={() =>\n                                            this.minusIcon(titleObject)\n                                          }\n                                        />\n                                      )}\n                                    </>\n                                  )\n                                ) : (\n                                  \"\"\n                                )}\n                              </div>\n                            </th>\n                          )}\n                        </>\n                      );\n                    })}\n                    {action && <th> Action </th>}\n                  </tr>\n                </thead>\n                <tbody className=\"txt-blk\">\n                  {sortedDataTable.map((data, index) => (\n                    <tr key={index}>\n                      {dataTable.titles.map((column, index) => (\n                        <>\n                          {column.isDropdownShow && (\n                            <td\n                              key={index}\n                              onClick={() => viewDraft(data, selectedFilter)}\n                              className={\n                                documentFilterColorMapper[data[column.id]]\n                              }\n                            >\n                              {data[column.id]\n                                ? data[column.id] === \"Update_Required\"\n                                  ? documentFilter[data[column.id]]\n                                  : data[column.id]\n                                : \"-\"}\n                            </td>\n                          )}\n                        </>\n                      ))}\n                      {action && (\n                        <td>\n                          {selectedFilter &&\n                          selectedFilter == \"Shared with me\" ? (\n                            <>\n                              {isAddTag ? <a\n                                onClick={() => addButtonOnClick(data)}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"tagi  img-fluid\"\n                                  src={tag}\n                                />\n                              </a>:null}\n                          \n                            </>\n                          ) : selectedFilter && selectedFilter == \"Drafts\" ? (\n                            <>\n                              <a\n                                onClick={(e) => {\n                                  editButtonOnClick(data);\n                                  e.stopPropagation();\n                                }}\n                                className=\"mx-1\"\n                              >\n                                <img className=\"edit\" src={edit} />\n                              </a>\n                              <a\n                                onClick={(e) => {\n                                  deleteDraftOnClick(data);\n                                  e.stopPropagation();\n                                }}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"dlt tagi img-fluid\"\n                                  src={dlt}\n                                />\n                              </a>\n                            </>\n                          ) :selectedFilter && selectedFilter == \"Rejected\" ? (\n                            <>\n                              <a\n                                onClick={(e) => {\n                                  archive(data);\n                                  e.stopPropagation();\n                                }}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"dlt tagi img-fluid\"\n                                  src={arch}\n                                />\n                              </a>\n                              {isAddTag ? <a\n                                onClick={() => addButtonOnClick(data)}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"tagi img-fluid\"\n                                  src={tag}\n                                />\n                              </a>:null}\n                            </>\n                          ): selectedFilter && selectedFilter == \"Accepted\" ? (\n                            <>\n                              <a\n                                onClick={(e) => {\n                                  archive(data);\n                                  e.stopPropagation();\n                                }}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"dlt tagi img-fluid\"\n                                  src={arch}\n                                />\n                              </a>\n                              {isAddTag ? <a\n                                onClick={() => addButtonOnClick(data)}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"tagi img-fluid\"\n                                  src={tag}\n                                />\n                              </a>:null}\n                            </>\n                          ) : selectedFilter &&\n                            selectedFilter == \"archive-list\" ? (\n                            <>\n                              <a\n                                onClick={(e) => {\n                                  unarchive(data);\n                                  e.stopPropagation();\n                                }}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"dlt tagi img-fluid\"\n                                  src={unarch}\n                                />\n                              </a>\n                            </>\n                          ) : (\n                            <>\n                               {isAddTag ?<a\n                                onClick={() => addButtonOnClick(data)}\n                                className=\"mx-1\"\n                              >\n                                <img\n                                  className=\"tagi img-fluid\"\n                                  src={tag}\n                                />\n                              </a>:null}\n                              <a onClick={() => archive(data)} className=\"mx-1\">\n                                <img className=\"tagi img-fluid\" src={arch} />\n                              </a>\n                              {editPermission && (\n                                data.documentStatus != 'Rejected' && data.documentStatus != 'Accepted' ? <a\n                                  onClick={() => updateButtonOnClick(data)}\n                                  className=\"mx-1\"\n                                >\n                                  <img\n                                    className=\"refresh tagi img-fluid\"\n                                    src={refresh}\n                                  />\n                                </a>:null\n                              )}\n                            </>\n                          )}\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <p className=\"no-data\">No Data Found</p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","C:\\react-main\\src\\component\\errorMessage.jsx",[],"C:\\react-main\\src\\component\\multiSelectDropDown.jsx",["1674","1675","1676"],"import React, { Component } from \"react\";\n\nexport default class MultiSelectDropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    }\n  };\n\n  handleChange(event) {\n    const { onChange } = this.props;\n    onChange(event.target.value)\n  }\n\n  render() {\n    const { options, error, value, showError, onBlur, disabled, placeholder, name } = this.props\n    return (\n      <div className=\"input-group\">\n        <select className=\"custom-select f-16 f-m p-2\"\n          multiple\n          searchable=\"Search here..\"\n          onBlur={onBlur}\n          onChange={(e) => this.handleChange(e)}\n          disabled={disabled == true ? true : false}\n          name={name}\n        >\n          {placeholder ? <option value=\"\" disabled selected={value == ''}>Select your option</option> : null}\n          {options.map((data, key) => {\n            return (\n              <option value={data.value} selected={data.value == value ? true : false} key={key}>{data.label}</option>\n            )\n          })}\n        </select>\n        {showError && <div className=\"formError\">{error}</div>}\n      </div>\n    );\n  }\n}\n","C:\\react-main\\src\\component\\textArea.jsx",["1677","1678"],"import React, { Component } from \"react\";\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    }\n\n  };\n  handleChange(event) {\n    const { onChange } = this.props;\n    onChange(event.target.value)\n  }\n\n  render() {\n    const { showError, error, row, name, id, disabled, onBlur, value, placeholder, className } = this.props\n    return (\n      <div>\n        <textarea class=\"form-control f-16 f-m\"\n          rows={row}\n          name={name}\n          id={id}\n          className={['form-control f-16 f-m' + \" \" + className]}\n          value={value}\n          disabled={disabled}\n          onChange={(e) => this.handleChange(e)}\n          onBlur={onBlur}\n          placeholder={placeholder}>\n        </textarea>\n        {/* <input\n          type={type}\n          name={name}\n          id={id}\n          className={['form-control' + \" \" + className]}\n          value={value}\n          disabled={disabled}\n          onChange={(e) => this.handleChange(e)}\n          onBlur={onBlur}\n          placeholder={placeholder}\n        /> */}\n\n        {showError && <div className=\"formError\">{error}</div>}\n      </div>\n    );\n  }\n}\n\n{/* <textarea class=\"form-control f-16 f-m\" rows=\"3\">adams@dayrep.com\n                                \n                                </textarea> */}","C:\\react-main\\src\\component\\successPopup.jsx",["1679","1680"],"import React from \"react\";\nimport { Modal } from './index.jsx';\nimport success from \"../assets/img/success.png\";\n\nconst SuccessPopup = (props) => {\n  const { closePopup, msg, history } = props;\n  console.log(msg, \"msgmsgv\")\n\n  return (\n    <>\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={success} />\n          <h4 class=\"modal-title text-center f-20 f-m\" id=\"\">{msg}</h4>\n        </div>\n      </Modal>\n    </>\n  );\n\n}\n\nexport default SuccessPopup;\n","C:\\react-main\\src\\component\\table.jsx",["1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697"],"import React, { Component } from \"react\";\nimport _ from 'lodash'\nimport Loader from \"../component/Loader.jsx\";\nimport sort_both from \"../assets/img/sort_both.png\";\nimport sort_asc from \"../assets/img/sort_asc.png\";\nimport sort_desc from \"../assets/img/sort_desc.png\";\nimport refresh from \"../assets/img/refresh.png\";\nimport edit from \"../assets/img/edit.png\";\nimport tag from \"../assets/img/tag.png\";\nimport dlt from \"../assets/img/dlt.png\";\n\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: props.defaultSort,\n      sortType: 'asc',\n      defaultIcon: sort_both\n    }\n  };\n\n  handleSorting = (titleObject) => {\n    this.setState({\n      sort: titleObject.id\n    }, () => {\n\n      const { sort, sortType } = this.state;\n      if (sort === titleObject.id) {\n        if (sortType === 'asc') {\n          this.setState({\n            sortType: 'desc',\n            defaultIcon: sort_desc\n          })\n        } else {\n          this.setState({\n            sortType: 'asc',\n            defaultIcon: sort_asc\n          })\n        }\n      } else {\n        this.setState({\n          sort: titleObject.id,\n          sortType: 'asc',\n          defaultIcon: sort_both\n\n        })\n      }\n    })\n\n  }\n\n  render() {\n\n    const { dataTable, actions, addButtonOnClick, editButtonOnClick, updateButtonOnClick, deleteButtonOnClick, viewPopup, loader, updatePermission, deletePermission } = this.props;\n    const { sort, sortType, defaultIcon } = this.state;\n    let sortedDataTable = [];\n\n    if (dataTable.data.length > 0) {\n      if (sort == 'date' || sort == 'time') {\n        sortedDataTable = _.sortBy(dataTable.data, function (dateObj) {\n          return new Date(dateObj.createdAt);\n        });\n      } else {\n        sortedDataTable = _.sortBy(dataTable.data, sort)\n      }\n\n      if (sortType === 'desc') {\n        sortedDataTable.reverse()\n      }\n    }\n    return (\n      <div className=\"table-responsive fixHeight\">\n        {loader &&\n          <Loader />\n          ||\n          (dataTable.titles.length > 0 && dataTable.data.length > 0) ?\n          <table className=\"table apit table-hover  dataTable no-footer\">\n            <thead>\n              <tr className=\"txt-blk\">\n                {dataTable.titles.map((titleObject, index) =>\n                  <th className=\"sorting\"\n                    key={index}\n                    onClick={() => titleObject.isSort ? this.handleSorting(titleObject) : ''}>\n                    {titleObject.isSort &&\n                      <img className=\"table_sorting\"\n                        src={sort === titleObject.id ? defaultIcon : sort_both} />}\n                    {titleObject.text}\n                  </th>)}\n                {actions && (actions.edit && updatePermission || actions.delete && deletePermission) && <th> Action </th>}\n              </tr>\n            </thead>\n            <tbody className=\"txt-blk\">\n              {sortedDataTable.map((data, index) =>\n                <tr key={index}>\n                  {dataTable.titles.map((column, index) =>\n                    <td key={index} onClick={() => viewPopup(data)}>{data[column.id]}</td>\n                  )}\n                  <td className=\"action-data\">\n                    {actions && <>\n                      {actions.update &&\n                        <a onClick={updateButtonOnClick}\n                          className=\"mx-1\">\n                          <img className=\"refresh\" src={refresh} />\n                        </a>}\n                      {actions.edit && updatePermission &&\n                        <a onClick={(e) => {\n                          editButtonOnClick(data);\n                          e.stopPropagation()\n                        }}\n                          className=\"mx-1\">\n                          <img className=\"edit\" src={edit} />\n                        </a>}\n                    </>\n                    }\n                    {actions && actions.add ? <a onClick={addButtonOnClick} className=\"mx-1\"><img className=\"tagi\" src={tag} /></a> : null}\n                    {actions && actions.delete && deletePermission ? <a onClick={(e) => { deleteButtonOnClick(data); e.stopPropagation() }} className=\"mx-1\"><img className=\"dlt\" src={dlt} /></a> : null}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n          : <p className=\"no-data\">No Data Found</p>\n        }\n      </div>\n\n    );\n  }\n}","C:\\react-main\\src\\component\\dropDown.jsx",["1698","1699","1700","1701"],"import React, { Component } from \"react\";\n\nexport default class DropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    }\n  };\n\n  handleChange(event) {\n    const { onChange } = this.props;\n    onChange(event.target.value)\n  }\n\n  render() {\n    const { options, error, value, showError, onBlur, disabled, placeholder, placeholderText, name, className } = this.props\n\n    return (\n      <div\n        className={[\"input-group\" + \" \" + className]}\n      >\n        <select\n          className='custom-select f-16 f-m h-40 border-0 box-shd'\n          onBlur={onBlur}\n          onChange={(e) => this.handleChange(e)}\n          disabled={disabled == true ? true : false}\n          name={name}\n        >\n          {placeholder ? <option value=\"\" disabled selected={value == ''}>{placeholderText ? placeholderText : 'Select your option'}</option> : null}\n          {options && options.map((data, key) => {\n            return (\n              <option value={data.value} selected={data.value == value ? true : false} key={key}>{data.label}</option>\n            )\n\n          })}\n        </select>\n        {showError && <div className=\"formError\">{error}</div>}\n      </div>\n    );\n  }\n}\n","C:\\react-main\\src\\component\\Notification.jsx",["1702","1703","1704","1705"],"import React, { Component } from \"react\";\nimport ndoc from \"../assets/img/ndoc.png\";\nimport moment from \"moment\";\n\nclass Notification extends Component {\n  render() {\n   console.log(this.props.notification)\n   const {notification, notificationRoute, seeAll, markAllRead, markRead} = this.props;\n    return (\n      <>\n        <ul className=\"dropdown-menu dropdown-alerts notification show\" style={{maxHeight: '400px',overflow: 'auto'}}>\n          <li>\n                                  \n            <a className=\"dropdown-item txt-org text-right f-14 f-m mt-3 float-right\" onClick={(e) => {markAllRead();e.stopPropagation()}} style={{width: 'auto'}}><u>Mark\n              All As Read</u></a>\n          </li>\n          {notification.list && notification.list.map(e => {\n        return <li onClick={() => {notificationRoute(e);markRead(e._id)}}>\n         <a className=\"dropdown-item\" style={e.isRead ? {width: 'auto',background: '#eee'}:{width: 'auto',background: '#fff'}}>\n           <div className=\"d-flex\">\n             <img className=\"mr-3 nimg\" src={ndoc} />\n             <div className=\"f-16 f-m \">\n               <span>{e.description}</span><br />\n               <span className=\"text-muted f-14\">{moment(e.at).fromNow()}</span>\n             </div>\n           </div>\n         </a>\n       </li>\n          })}\n          <li>\n            <div className=\"text-center link-block\">\n              <a className=\"dropdown-item\" onClick={seeAll}>\n                <strong className=\"f-16 txt-org\"><u>See All</u> </strong>\n                {/* <i className=\"fa fa-angle-right\"></i> */}\n              </a>\n            </div>\n          </li>\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Notification;\n","C:\\react-main\\src\\component\\footer.jsx",["1706","1707","1708","1709","1710","1711"],"import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport fb from \"../assets/img/fb.png\";\nimport insta from \"../assets/img/insta.png\";\nimport twit from \"../assets/img/twit.png\";\nimport { connect } from \"react-redux\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <>\n        <div style={{bottom: this.props.style}} className=\"footer d-flex justify-content-between align-items-center flex-wrap\">\n          <div className=\"my-2\">\n            {this.props.isProvider ? <Link to='/subscription' className=\"mr-4 f-16 txt-blk f-m\">Pricing</Link>:null}\n            <Link to='/fine-print' className=\"mr-4 f-16 txt-blk f-m\">Fine Print</Link>\n            <Link to='/faq' className=\"mr-4 f-16 txt-blk f-m\">FAQ</Link>\n            <Link to='/help' className=\"mr-4 f-16 txt-blk f-m\">Help</Link>\n          </div>\n          <div className=\"my-2\">\n            <a className=\"mr-2\"><img src={fb} /> </a>\n            <a className=\"mr-2\"><img src={insta} /> </a>\n            <a className=\"mr-2\"><img src={twit} /> </a>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isProvider : state.Profile.showReferral,\n});\n\nexport default connect(mapStateToProps, null)(Footer);\n","C:\\react-main\\src\\component\\loginHeader.jsx",["1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727"],"import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport {\n  ProfileDropdown,\n  Notification,\n  Modal,\n  Button,\n  AdvanceSearch,\n} from \"./index.jsx\";\nimport * as actions from \"../actions\";\nimport cal from \"../assets/img/cal.png\";\nimport searcho from \"../assets/img/searcho.png\";\nimport doc from \"../assets/img/doc.png\";\nimport \"../assets/css/structure.css\";\nimport io from \"socket.io-client\";\n\nlet socket = io(\"https://provider-backend.doctrace.com:3001/\", {\n  path: \"/provider/socket\",\n});\n\nclass LoginHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      showNotification: false,\n      logout: false,\n      notificationData: \"\",\n    };\n    this.wrapperRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  logoutHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    this.setState({\n      logout: true,\n    });\n  };\n  handleClickOutside(event) {\n    if (\n      this.wrapperRef &&\n      this.wrapperRef.current &&\n      !this.wrapperRef.current.contains(event.target)\n    ) {\n      this.setState({\n        showNotification: false,\n      });\n    }\n  }\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push(\"/signin\");\n  };\n\n  handleMenu = () => {\n    document.body.classList.toggle(\"mini-navbar\");\n  };\n\n  handleResize() {\n    if (window.innerWidth < 768) {\n      document.body.classList.add(\"body-small\");\n    }\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize.bind(this));\n    this.props.getMyPlan();\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.viewTikData != this.props.viewTikData) {\n      this.props.history.push(\"/view-tik\");\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize.bind(this));\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  closeLogoutPopup = () => {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({\n      logout: false,\n    });\n  };\n\n  showNotification = () => {\n    this.setState({\n      showNotification: !this.state.showNotification,\n    });\n  };\n  notificationRoute = (item) => {\n    console.log(item);\n    if (item.itemType == \"document\") {\n      this.props.viewTik({ Id: item.itemId });\n      localStorage.setItem(\"docId\", JSON.stringify(item.itemId));\n    } else if (item.itemType == \"user\") {\n      this.props.history.push(\"/userMgnt\");\n    } else if (item.itemType == \"role\") {\n      this.props.history.push(\"/roleMgnt\");\n    } else if (item.itemType == \"team\") {\n      this.props.history.push(\"/teamMgnt\");\n    } else if (item.itemType == \"subscription\") {\n      this.props.history.push(\"/subscription\");\n    }\n  };\n  seeAll = () => {\n    this.props.history.push(\"/notification\");\n  };\n  markAllRead = () => {\n    socket.emit(\"mark-all-read\", { providerId: this.props.providerId });\n    this.props.socketNotificationSuccess({\n      data: { ...this.props.notificationSocketData, count: 0 },\n    });\n  };\n  markRead = (id) => {\n    socket.emit(\"mark-read\", { notificationId: id });\n    this.props.socketNotificationSuccess({\n      data: { ...this.props.notificationSocketData, count: 0 },\n    });\n  }\n  render() {\n    const { showNotification, logout, notificationData } = this.state;\n    const { notificationSocketData } = this.props;\n    return (\n      <>\n        <nav\n          className=\"navbar navbar-static-top white-bg p-1\"\n          role=\"navigation\"\n        >\n          <div className=\"navbar-header\">\n            <a\n              className=\"navbar-minimalize minimalize-styl-2 btn \"\n              onClick={() => this.handleMenu()}\n            >\n              <i className=\"fa fa-bars\" />{\" \"}\n            </a>\n            <AdvanceSearch />\n          </div>\n          <ul className=\"nav navbar-top-links navbar-right\">\n            <li className=\"ml-2 mr-2\">\n              <a\n                href\n                className=\"btn p-0\"\n                data-toggle=\"modal\"\n                data-target=\"#searchmodal\"\n              >\n                <img className src={searcho} />\n                {/* <i className=\"fa fa-search\"></i> */}\n              </a>\n            </li>\n            {this.props.document == null ? (\n              <li className=\"ml-2 mr-2\">\n                <a\n                  onClick={() => {\n                    this.props.history.push(\"/add-metadata\");\n                    localStorage.setItem(\n                      \"prevroute\",\n                      JSON.stringify(\"create-tik\")\n                    );\n                  }}\n                  className=\"btn-border org-border br-6 d-flex p-2\"\n                >\n                  <img className src={doc} />\n                  <h4\n                    style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                    className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                  >\n                    Create New Tik\n                  </h4>\n                </a>\n              </li>\n            ) : this.props.roledocument != undefined ? (\n              this.props.document.create || this.props.roledocument.create ? (\n                <li className=\"ml-2 mr-2\">\n                  {\" \"}\n                  <a\n                    onClick={() => {\n                      this.props.history.push(\"/add-metadata\");\n                      localStorage.setItem(\n                        \"prevroute\",\n                        JSON.stringify(\"create-tik\")\n                      );\n                    }}\n                    className=\"btn-border org-border br-6 d-flex p-2\"\n                  >\n                    <img className src={doc} />\n                    <h4\n                      style={{ fontSize: \"14px\", marginTop: \"5px\" }}\n                      className=\"txt-org f-m ml-2 mb-0 newDoc\"\n                    >\n                      Create New Tik\n                    </h4>\n                  </a>\n                </li>\n              ) : null\n            ) : null}\n            <li className=\"dropdown mx-2\" ref={this.wrapperRef}>\n              <a\n                className=\"dropdown-toggle count-info px-0\"\n                data-toggle=\"dropdown\"\n                onClick={() => this.showNotification()}\n              >\n                <i className=\"fa fa-bell f-26\" />{\" \"}\n                <span className=\"label label-primary\">\n                  {notificationSocketData ? notificationSocketData.count : 0}\n                </span>\n              </a>\n              {showNotification === true ? (\n                <Notification\n                  markAllRead={this.markAllRead}\n                  notification={\n                    notificationSocketData && notificationSocketData\n                  }\n                  notificationRoute={this.notificationRoute}\n                  seeAll={this.seeAll}\n                  markRead={this.markRead}\n                />\n              ) : null}\n            </li>\n\n            <li className=\"ml-2\">\n              <ProfileDropdown\n                history={this.props.history}\n                logout={this.logoutHandler}\n              />\n            </li>\n          </ul>\n        </nav>\n        {logout ? (\n          <Modal closePopup={this.closeLogoutPopup}>\n            <div className=\"modal-body pt-0 plr-100 pb-5\">\n              <h4 className=\"modal-title text-center f-20 f-m\" id=\"\">\n                Are you sure you want to log out?\n              </h4>\n              <div className=\"d-flex logout-buttons\">\n                <Button\n                  type=\"button\"\n                  buttonText=\"No\"\n                  className=\"m-1 clear_button\"\n                  onClick={() => this.closeLogoutPopup()}\n                />\n                <Button\n                  type=\"button\"\n                  buttonText=\"Yes\"\n                  className=\"m-1\"\n                  onClick={() => this.logout()}\n                />\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  document: state.Profile.document,\n  roledocument: state.Profile.Roledocument,\n  notificationSocketData: state.Notification.notificationSocketData,\n  viewTikData: state.Tik.viewTik,\n  providerId: state.Profile.providerId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dashboard: () => dispatch(actions.getDashboardCount()),\n  viewTik: (payload) => dispatch(actions.viewTik(payload)),\n  getMyPlan: () => dispatch(actions.getMyPlan()),\n  socketNotificationSuccess: (payload) =>\n    dispatch(actions.socketNotificationSuccess(payload)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(LoginHeader)\n);\n","C:\\react-main\\src\\component\\withLayoutContainer.jsx",["1728"],"import React, { Component } from \"react\";\nimport { SideMenu, LoginHeader, Footer } from \"./index.jsx\";\nimport { withRouter } from \"react-router\";\n\nclass WithLayoutContainer extends Component {\n  render() {\n    const { subUserAccess, otherResponsibilities } = this.props;\n    return (\n      <>\n        <div id=\"wrapper\">\n          <SideMenu subUserAccess={subUserAccess} otherResponsibilities={otherResponsibilities} />\n          <div id=\"page-wrapper\" className={this.props.location.pathname == '/dashboard' ? \"\" : \"oh\"}>\n            <LoginHeader />\n            {this.props.children}\n            <Footer style={this.props.style} />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(WithLayoutContainer);\n","C:\\react-main\\src\\component\\sideMenu.jsx",["1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785"],"/* eslint-disable no-undef */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { navigationMapper } from \"../constants/Mapper\";\nimport { Html5Entities } from 'html-entities';\nimport dhistory from \"../assets/img/dhistory.png\";\nimport history from \"../assets/img/history.png\";\nimport team from \"../assets/img/team.png\";\nimport dteam from \"../assets/img/dteam.png\";\nimport integration from \"../assets/img/integration.png\";\nimport dintegration from \"../assets/img/dintegration.png\";\nimport template from \"../assets/img/template.png\";\nimport dtemplate from \"../assets/img/dtemplate.png\";\nimport reports from \"../assets/img/reports.png\";\nimport dreports from \"../assets/img/dreports.png\";\nimport dthistory from \"../assets/img/dthistory.png\";\nimport thistory from \"../assets/img/thistory.png\";\nimport header_logo from \"../assets/img/logo.png\";\nimport logom from \"../assets/img/logom.png\";\n\nlet collapseValue = window.location.pathname;\nlet htmlEntities = new Html5Entities();\nconst obj = [\n  // {\n  //   name: 'dashboard',\n  //   label: 'Dashboard',\n  //   img: Images.header_logo,\n  //   hoverImage: Images.logom,\n  // },\n  {\n    name: \"docHistory\",\n    label: \"Tik History\",\n    img: dhistory,\n    hoverImage: history,\n    flag: false,\n    id: 0,\n    path: \"docHistory\",\n  },\n  {\n    name: \"team\",\n    label: \"Team\",\n    img: dteam,\n    hoverImage: team,\n    flag: false,\n    id: 1,\n    items: [\n      {\n        name: \"teamM\",\n        label: \"Team Management\",\n        img: null,\n        hoverImage: null,\n        path: \"/\",\n      },\n      {\n        name: \"roleM\",\n        label: \"Role Management\",\n        img: null,\n        hoverImage: null,\n        path: \"roleM\",\n      },\n      {\n        name: \"userM\",\n        label: \"Associated Users\",\n        img: null,\n        hoverImage: null,\n        path: \"userM\",\n      },\n    ],\n  },\n  {\n    name: \"template\",\n    label: \"Template\",\n    img: dtemplate,\n    hoverImage: template,\n    flag: false,\n    id: 2,\n    path: \"template\",\n  },\n  {\n    name: \"integration\",\n    label: \"Integration\",\n    img: dintegration,\n    hoverImage: integration,\n    flag: false,\n    id: 3,\n    path: \"/\",\n    items: [\n      {\n        name: \"analytics\",\n        label: htmlEntities.decode('Analytics &amp; Usage'),\n        img: null,\n        hoverImage: null,\n        path: \"analytics\",\n      },\n      {\n        name: \"api-usage\",\n        label: \"API Requests\",\n        img: null,\n        hoverImage: null,\n        path: \"api-usage\",\n      },\n    ],\n  },\n  {\n    name: \"reports\",\n    label: \"Reports\",\n    img: dreports,\n    hoverImage: reports,\n    flag: false,\n    id: 4,\n    path: \"/\",\n    items: [\n      {\n        name: \"docReport\",\n        label: \"Tik Report\",\n        img: null,\n        hoverImage: null,\n        path: \"docReport\",\n      },\n      {\n        name: \"tor_reports\",\n        label: \"Tor Reports\",\n        img: null,\n        hoverImage: null,\n        path: \"tor_reports\",\n      },\n      {\n        name: \"team_reports\",\n        label: \"Team Reports\",\n        img: null,\n        hoverImage: null,\n        path: \"team_reports\",\n      },\n    ],\n  },\n  {\n    name: \"transaction\",\n    label: \"Transaction History\",\n    img: dthistory,\n    hoverImage: thistory,\n    flag: false,\n    id: 5,\n    path: \"transaction\",\n  },\n];\nclass SideMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      report: false,\n      role: false,\n      team: false,\n      user: false,\n      transaction: false,\n      integration: false,\n    };\n  }\n  handleNavigation = (nav) => {\n    if (nav.name && (nav.name == \"team\" || nav.name == \"reports\" || nav.name == 'integration')) {\n      console.log(window.location.pathname);\n      this.props.history.push(window.location.pathname);\n      const index = obj.findIndex((x) => x.name === nav.name);\n      if (obj[index]) {\n        obj[index].flag = !obj[index].flag;\n      }\n    } else {\n      this.props.history.push(navigationMapper[nav.name]);\n    }\n    collapseValue = navigationMapper[nav.name];\n  };\n  componentDidUpdate(prevprops) {\n    if (prevprops.specialFeatures != this.props.specialFeatures) {\n      this.props.specialFeatures &&\n        this.props.specialFeatures.map((e) => {\n          if (e.featureName == \"reports\") {\n            this.setState({ report: true });\n          }\n          if (e.featureName == \"role_management\") {\n            this.setState({ role: true });\n          }\n          if (e.featureName == \"team_management\") {\n            this.setState({ team: true });\n          }\n          if (e.featureName == \"user_management\") {\n            this.setState({ user: true });\n          }\n          if (e.featureName == \"transaction_history\") {\n            this.setState({ transaction: true });\n          }\n          if (e.featureName == \"api_analytics\") {\n            this.setState({ integration: true });\n          }\n        });\n    }\n  }\n  render() {\n    const {\n      subUserAccess,\n      otherResponsibilities,\n      profile,\n      isSuperProvider,\n      templateRole,\n      Roletemplate,\n      specialFeatures,\n      payment,\n      rolepayment\n    } = this.props;\n    const { report, role, team, user, transaction, integration } = this.state;\n    console.log(rolepayment, payment)\n    const subUserAccessData =\n      subUserAccess &&\n      Object.values(subUserAccess).filter((item) => item === true);\n    const otherResponsibilitiesData =\n      otherResponsibilities &&\n      Object.values(otherResponsibilities).filter((item) => item == true);\n    const templateRoleData =\n      templateRole &&\n      Object.values(templateRole).filter((item) => item === true);\n    const RoletemplateData =\n      Roletemplate &&\n      Object.values(Roletemplate).filter((item) => item === true);\n    return (\n      <>\n        <nav\n          className=\"navbar-default navbar-static-side nav-cst\"\n          role=\"navigation\"\n        >\n          <div className=\"sidebar-collapse\">\n            <ul className=\"nav metismenu f-m\" id=\"side-menu\">\n              <li className=\"nav-header p-0\">\n                <a\n                  className=\"navbar-brand py-2 px-0\"\n                  onClick={() => this.props.history.push(\"/dashboard\")}\n                >\n                  <img className=\"big img-fluid\" src={header_logo} />\n                  <img className=\"mini img-fluid\" src={logom} />\n                </a>\n              </li>\n              {obj.map((navigater, index) => (\n                <>\n                  <li\n                    key={index}\n                    className={\n                      (collapseValue === navigationMapper[navigater.name] ||\n                        (navigater.items &&\n                          navigater.items.filter(\n                            (item) =>\n                              navigationMapper[item.name] == collapseValue\n                          ).length > 0)) &&\n                      navigater.flag\n                        ? \"active\"\n                        : \"\"\n                    }\n                  >\n                    {profile.roleName === \"Super Provider\" || isSuperProvider ? (\n                      navigater.name === \"reports\" && report ? (\n                        <a\n                          className=\"navigation-item\"\n                          onClick={() => {\n                            this.handleNavigation(navigater);\n                          }}\n                        >\n                          <img className=\"hover\" src={navigater.hoverImage} />\n                          <img className=\"default\" src={navigater.img} />\n                          <span className=\"nav-label\">{navigater.label}</span>\n                          {navigater.items && <span className=\"fa arrow\" />}\n                        </a>\n                      ) : navigater.name === \"transaction\" && transaction  ? (\n                        <a\n                          className=\"navigation-item\"\n                          onClick={() => {\n                            this.handleNavigation(navigater);\n                          }}\n                        >\n                          <img className=\"hover\" src={navigater.hoverImage} />\n                          <img className=\"default\" src={navigater.img} />\n                          <span className=\"nav-label\">{navigater.label}</span>\n                          {navigater.items && <span className=\"fa arrow\" />}\n                        </a>\n                      ) : navigater.name === \"integration\" && integration ? (\n                        <a\n                          className=\"navigation-item\"\n                          onClick={() => {\n                            this.handleNavigation(navigater);\n                          }}\n                        >\n                          <img className=\"hover\" src={navigater.hoverImage} />\n                          <img className=\"default\" src={navigater.img} />\n                          <span className=\"nav-label\">{navigater.label}</span>\n                          {navigater.items && <span className=\"fa arrow\" />}\n                        </a>\n                      ) : (\n                        navigater.name != \"reports\" &&\n                        navigater.name != \"transaction\" &&\n                        navigater.name != \"integration\" && (\n                          <a\n                            className=\"navigation-item\"\n                            onClick={() => {\n                              this.handleNavigation(navigater);\n                            }}\n                          >\n                            <img className=\"hover\" src={navigater.hoverImage} />\n                            <img className=\"default\" src={navigater.img} />\n                            <span className=\"nav-label\">{navigater.label}</span>\n                            {navigater.items && <span className=\"fa arrow\" />}\n                          </a>\n                        )\n                      )\n                    ) : (navigater.name === \"template\" &&\n                        ((templateRoleData && templateRoleData.length > 0) ||\n                          (RoletemplateData && RoletemplateData.length > 0))) ||\n                      (navigater.name == \"team\" &&\n                        ((subUserAccessData && subUserAccessData.length > 0) ||\n                          (otherResponsibilitiesData &&\n                            otherResponsibilitiesData.length > 0))) ||\n                      (navigater.name !== \"team\" &&\n                        navigater.name !== \"template\" &&\n                        navigater.name !== \"transaction\") ? (\n                      <a\n                        className=\"navigation-item\"\n                        onClick={() => {\n                          this.handleNavigation(navigater);\n                        }}\n                      >\n                        <img className=\"hover\" src={navigater.hoverImage} />\n                        <img className=\"default\" src={navigater.img} />\n                        <span className=\"nav-label\">{navigater.label}</span>\n                        {navigater.items && <span className=\"fa arrow\" />}\n                      </a>\n                    ) :  navigater.name === \"transaction\" && transaction && (payment && (payment.access || rolepayment.access)) ? (\n                      <a\n                        className=\"navigation-item\"\n                        onClick={() => {\n                          this.handleNavigation(navigater);\n                        }}\n                      >\n                        <img className=\"hover\" src={navigater.hoverImage} />\n                        <img className=\"default\" src={navigater.img} />\n                        <span className=\"nav-label\">{navigater.label}</span>\n                        {navigater.items && <span className=\"fa arrow\" />}\n                      </a>\n                    ) : (\n                      \"\"\n                    )}\n                    {navigater.items && navigater.items ? (\n                      <>\n                        <ul\n                          className={`nav nav-second-level f-14 collapse ${\n                            (collapseValue ===\n                              navigationMapper[navigater.name] ||\n                              (navigater.items &&\n                                navigater.items.filter(\n                                  (item) =>\n                                    navigationMapper[item.name] == collapseValue\n                                ).length > 0)) &&\n                            navigater.flag\n                              ? \"in\"\n                              : \"\"\n                          }`}\n                        >\n                          {navigater.items.map((itemList, index) => (\n                            <>\n                              {profile.roleName === \"Super Provider\" ||\n                              isSuperProvider ? (\n                                role && itemList.name == \"roleM\" ? (\n                                  <li\n                                    key={index}\n                                    className={`${\n                                      collapseValue ==\n                                      navigationMapper[itemList.name]\n                                        ? \"active\"\n                                        : \"\"\n                                    }`}\n                                    onClick={() =>\n                                      this.handleNavigation(itemList)\n                                    }\n                                  >\n                                    <a className=\"navigation-item\">\n                                      {itemList.label}\n                                    </a>\n                                  </li>\n                                ) : team && itemList.name == \"teamM\" ? (\n                                  <li\n                                    key={index}\n                                    className={`${\n                                      collapseValue ==\n                                      navigationMapper[itemList.name]\n                                        ? \"active\"\n                                        : \"\"\n                                    }`}\n                                    onClick={() =>\n                                      this.handleNavigation(itemList)\n                                    }\n                                  >\n                                    <a className=\"navigation-item\">\n                                      {itemList.label}\n                                    </a>\n                                  </li>\n                                ) : user && itemList.name == \"userM\" ? (\n                                  <li\n                                    key={index}\n                                    className={`${\n                                      collapseValue ==\n                                      navigationMapper[itemList.name]\n                                        ? \"active\"\n                                        : \"\"\n                                    }`}\n                                    onClick={() =>\n                                      this.handleNavigation(itemList)\n                                    }\n                                  >\n                                    <a className=\"navigation-item\">\n                                      {itemList.label}\n                                    </a>\n                                  </li>\n                                ) : (\n                                  itemList.name != \"userM\" &&\n                                  itemList.name != \"teamM\" &&\n                                  itemList.name != \"roleM\" && (\n                                    <li\n                                      key={index}\n                                      className={`${\n                                        collapseValue ==\n                                        navigationMapper[itemList.name]\n                                          ? \"active\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        this.handleNavigation(itemList)\n                                      }\n                                    >\n                                      <a className=\"navigation-item\">\n                                        {itemList.label}\n                                      </a>\n                                    </li>\n                                  )\n                                )\n                              ) : (itemList.name !== \"roleM\" &&\n                                  itemList.name !== \"teamM\" &&\n                                  itemList.name !== \"userM\") ||\n                                ((itemList.name === \"roleM\" ||\n                                  itemList.name === \"teamM\" ||\n                                  itemList.name === \"userM\") &&\n                                  ((subUserAccessData &&\n                                    subUserAccessData.length > 0) ||\n                                    (otherResponsibilitiesData &&\n                                      otherResponsibilitiesData.length >\n                                        0))) ? (\n                                <li\n                                  key={index}\n                                  className={`${\n                                    collapseValue ==\n                                    navigationMapper[itemList.name]\n                                      ? \"active\"\n                                      : \"\"\n                                  }`}\n                                  onClick={() =>\n                                    this.handleNavigation(itemList)\n                                  }\n                                >\n                                  <a className=\"navigation-item\">\n                                    {itemList.label}\n                                  </a>\n                                </li>\n                              ) : (\n                                \"\"\n                              )}\n                            </>\n                          ))}\n                        </ul>\n                      </>\n                    ) : null}\n                  </li>\n                </>\n              ))}\n            </ul>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSuperProvider: state.Auth.isSuperProvider,\n    profile: state.Profile,\n    subUserAccess: state.Profile.role,\n    otherResponsibilities: state.Profile.Rolerole,\n    templateRole: state.Profile.template,\n    Roletemplate: state.Profile.Roletemplate,\n    specialFeatures: state.Subscription.specialFeatures,\n    rolepayment: state.Profile.Rolepayment,\n    payment: state.Profile.payment,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(SideMenu));\n","C:\\react-main\\src\\component\\profileDropDown.jsx",["1786","1787","1788","1789","1790","1791","1792","1793","1794"],"import React, { useState, useEffect, useRef } from \"react\";\nimport * as actions from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router';\nimport user from \"../assets/img/user.png\";\nimport profile from \"../assets/img/profile.png\";\nimport logout from \"../assets/img/logout.png\";\n\nconst ProfileDropdown = (props) => {\n\n  const wrapperRef = useRef(null);\n\n  const [isDropdown, setDropdown] = useState(false);\n\n  useEffect(() => {\n    props.profile();\n\n    function handleClickOutside(event) {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setDropdown(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className={`profile dropdown ${isDropdown ? \"show\" : \"\"}`} ref={wrapperRef}>\n        <a\n          className=\"btn f-16 dropdown-toggle d-flex align-items-center justify-content-center pl-0\"\n          id=\"dropdownMenuLink\"\n          onClick={() => setDropdown(!isDropdown)}\n        >\n          <div className=\"propic mr-3\" style={{ position: 'relative', height: '100px', width: '100px' }} >\n            <img src={\n              props.photoData != \"\"\n                ? props.photoData\n                : user\n            }\n              className=\"img-fluid\"\n              style={{ borderRadius: '50%', width: '57px', height: '35px', objectFit: 'cover', objectPosition: 'center' }}\n            />\n          </div>\n          <p className=\"my-1 name\">{props.userFirstname != undefined ? `${props.userFirstname} ${props.userLastname}` : \"\"}</p>\n        </a>\n        <div className={`dropdown-menu f-16 profile-dropdown ${isDropdown ? \"show\" : \"\"}`}>\n         { props.subscriptionError ? null : <a onClick={() => props.history.push(\"/profile\")} className=\"dropdown-item d-flex py-3\">\n            <img\n              src={\n                profile\n              }\n            />\n            <p\n              className=\"m-0 ml-2\"\n            >\n              View Profile\n            </p>\n          </a>}\n          <a onClick={props.logout} className=\"dropdown-item d-flex py-3\">\n            <img src={logout} />\n            <p className=\"m-0 ml-2\">Logout</p>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  photoData: state.Profile.photoData,\n  firstName: state.Profile.firstName,\n  lastName: state.Profile.lastName,\n  userFirstname: state.Profile.userFirstname,\n  userLastname: state.Profile.userLastname,\n  subscriptionError: state.Subscription.subscriptionError,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: (payload) => dispatch(actions.profileGetInfo(payload)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileDropdown));\n","C:\\react-main\\src\\component\\docVerifyForm.jsx",[],"C:\\react-main\\src\\component\\button.jsx",["1795","1796"],"import React, { Component } from \"react\";\n\n\nexport default class Button extends Component {\n    constructor(props) {\n        super(props);\n    };\n    render() {\n        const { buttonText, onClick, type, className, isDisabled } = this.props\n        return (\n            <button\n                type={type}\n                className={['btn box-shd-hover-org btn-primary w-100 login-btn f-b' + \" \" + className]}\n                data-toggle=\"modal\"\n                data-target=\"#twoFactor\"\n                disabled={isDisabled}\n                onClick={onClick}>\n                {buttonText}\n            </button>\n\n        );\n    }\n}\n","C:\\react-main\\src\\component\\checkbox.jsx",["1797","1798"],"import React, { Component } from \"react\";\n\nexport default class Checkbox extends Component {\n    constructor(props) {\n        super(props);\n    };\n    handleChange(event) {\n        const { onChange } = this.props;\n        onChange(event.target.checked)\n    }\n\n    render() {\n        const { label, name, id, type, checked, parentClassName, onBlur, disabled } = this.props\n\n        return (\n            <>\n                <div className={['custom-control custom-checkbox' + \" \" + parentClassName]}>\n                    <input type={type} className=\"custom-control-input\"\n                        id={id} name={name}\n                        checked={checked || false}\n                        onChange={(e) => this.handleChange(e)}\n                        onBlur={onBlur}\n                        disabled={disabled} />\n                    <label className=\"custom-control-label f-14\" for={id}>{label}</label>\n                </div>\n            </>\n        );\n    }\n}","C:\\react-main\\src\\component\\input.jsx",["1799"],"import React, { Component } from \"react\";\n\n\nexport default class TextInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null\n        }\n\n    };\n    handleChange(event) {\n        const { onChange } = this.props;\n        onChange(event.target.value)\n    }\n\n    render() {\n        const { showError, error, type, name, id, disabled, onBlur, value, placeholder, className } = this.props\n        return (\n            <>\n                <input\n                    type={type}\n                    name={name}\n                    id={id}\n                    className={['form-control' + \" \" + className]}\n                    value={value}\n                    disabled={disabled}\n                    onChange={(e) => this.handleChange(e)}\n                    onBlur={onBlur}\n                    placeholder={placeholder}\n                />\n\n                {showError && <div className=\"formError\">{error}</div>}\n            </>\n        );\n    }\n}\n","C:\\react-main\\src\\component\\Header.jsx",["1800"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport header_logo from '../assets/img/logo.png';\n\n\nclass Header extends Component {\n  render() {\n    const { isLoginPage, isSingUpPage } = this.props;\n    return (\n      <>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col p-0\">\n              <nav className=\"navbar beforel navbar-expand-md py-1\">\n                <Link className=\"navbar-brand\" to='/signin'>\n                  <img src={header_logo} />\n                </Link>\n                {isLoginPage &&\n                  <Link to=\"/signup\" className=\"btn btn-primary f-m\">\n                    SignUp\n                </Link>}\n                {isSingUpPage && <Link to=\"/signin\" className=\"btn btn-primary f-m\">\n                  Login\n                   </Link>\n                }\n                {/* {withLogin &&\n                  <ProfileDropdown />\n                } */}\n\n              </nav>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","C:\\react-main\\src\\container\\Profile\\MobileOtpModal.jsx",["1801","1802","1803","1804","1805"],"import React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\nclass MobileOtpModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: \"\",\n      resend: false,\n      user2: \"\",\n      disabled: false,\n      submit: false,\n      errormessage: \"\",\n      error: \"\",\n      mobileLength: \"\",\n      mobile: \"\",\n    };\n  }\n  componentDidMount() {\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n    console.log(this.props.provider);\n  }\n\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    console.log(timer);\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n\n  resendSignin = async () => {\n    const { email, password } = this.props;\n    this.setState({ disabled: true });\n    const user2 = await Auth.signIn({ username: email, password })\n      .then((data) => {\n        this.props.login({ cognitoId: data.username });\n        localStorage.setItem(\"cognitoId\", JSON.stringify(data.username));\n        this.setState({ resend: true, user2: data });\n      })\n      .catch((error) => {\n        toast.error(error.message, options);\n      });\n  };\n  handleSubmit = async (values) => {\n    const code = values.otp;\n    const { initialuser } = this.props;\n    const { user2, resend } = this.state;\n    console.log(\"user signin\", initialuser, code);\n    document.body.classList.remove(\"modal-open\");\n    const user = resend ? user2 : initialuser;\n    try {\n      const loggedUser = await Auth.confirmSignIn(\n        user, // Return object from Auth.signIn()\n        code, // Confirmation code\n        \"SMS_MFA\" // MFA Type e.g. SMS_MFA, SOFTWARE_TOKEN_MFA\n      )\n        .then(async (data) => {\n          console.log(\"logged\", loggedUser);\n          await Auth.currentSession().then((data) => {\n            localStorage.setItem(\"jwtToken\", JSON.stringify(data));\n            // this.props.history.push(\"./docVerify\");\n            if (this.props.isSuperProvider && this.props.document == \"\") {\n              this.props.history.push(\"./docVerify\");\n            } else {\n              this.props.history.push(\"./dashboard\");\n            }\n          });\n        })\n        .catch((error) => toast.error(error.message, options));\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n\n  render() {\n    const { closePopup, sentNum } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            otp: \"\",\n          }}\n          validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div class=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      class=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"mobileupdateenterTitle\"\n                    >\n                      Update Phone Number\n                    </h4>\n                    <h5 class=\"f-20 mb-5 f-m\">\n                      Phone Number{\" \"}\n                      <span class=\"float-right\">+91 XXXXXX5843</span>\n                    </h5>\n                    <input\n                      type=\"text\"\n                      class=\"form-control f-20 mb-3\"\n                      id=\"\"\n                      placeholder=\"Enter OTP\"\n                      name=\"otp\"\n                    />\n                    <h5 class=\"text-center txt-blu my-5 f-20 f-m\">\n                      One time password sent on registered mobile number\n                    </h5>\n                    <h5 class=\"txt-org text-center mb-5 f-20 f-m\">\n                      Code can be resent in 02:30\n                    </h5>\n                  </div>\n                  {/* <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Update Phone Number\n                    </h4>\n                    <TextInput\n                      type=\"text\"\n                      name=\"otp\"\n                      id={\"otp\"}\n                      placeholder={\"Enter Code\"}\n                      error={errors.otp}\n                      onChange={(value) => setFieldValue(\"otp\", value)}\n                      value={values.otp}\n                      showError={touched.otp && errors.otp}\n                      onBlur={() =>\n                        !touched.otp && setFieldTouched(\"otp\", true, true)\n                      }\n                    />\n                    <h5 className=\"text-center txt-blu my-5 f-20 f-m\">\n                      One time password sent on registered mobile number\n                    </h5>\n                    <h5 className=\"txt-org text-center mb-5 f-m\">\n                      Code can be resent in <span id=\"time\">02:30</span>\n                    </h5>\n                  </div> */}\n                  <div className=\"modal-footer plr-100 pb-5 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Log In\"}\n                      className={\"w-100\"}\n                    />\n                  </div>\n                  <div\n                    className={\n                      this.state.disabled\n                        ? \"disabledLink txt-org text-center mb-3 f-m\"\n                        : \"txt-org text-center mb-3 f-m\"\n                    }\n                    style={{ cursor: \"pointer\" }}\n                    onClick={this.state.disabled ? null : this.resendSignin}\n                  >\n                    Resend confirmation code\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isSuperProvider: state.Auth.isSuperProvider,\n  document: state.Auth.document,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(actions.login(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileOtpModal);\n","C:\\react-main\\src\\container\\Profile\\MobileUpdateModal.jsx",["1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/forgotpasswordSchema\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\n\nclass MobileUpdateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      email: \"\",\n      submit: false,\n      submit: false,\n      errormessage: \"\",\n      error: \"\",\n      mobileLength: \"\",\n      mobile: \"\",\n    };\n    this.props.errorClear();\n  }\n\n  handleSubmit = async (values) => {\n    this.setState({ submit: true });\n    console.log(this.state.mobile);\n    if (this.state.mobile == \"\") {\n      this.setState({\n        errormessage: \"Please Enter mobile number\",\n        error: true,\n      });\n    } else if (!this.state.mobileLength) {\n      this.setState({ errormessage: \"number should be 10 digit\", error: true });\n    } else {\n      this.setState({ errormessage: \"\", error: false });\n      this.props.checkUser({\n        field: \"mobileNumber\",\n        value: `+${this.state.mobile}`,\n      });\n    }\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.checkUserResponse == \"\" &&\n      this.props.error == \"error\" &&\n      this.state.mobileLength &&\n      prevState.mobile == this.state.mobile &&\n      this.state.submit\n    ) {\n      this.mobileUpdateCall();\n      this.setState({ submit: false });\n    }\n    if (\n      this.props.checkUserResponse != \"\" &&\n      this.props.error == \"\" &&\n      this.props.checkUserResponse != prevProps.checkUserResponse &&\n      this.state.submit\n    ) {\n      toast.error(\"Phone number already exists\");\n      this.setState({ submit: false });\n    }\n  }\n\n  mobileUpdateCall = async () => {\n    let user = await Auth.currentAuthenticatedUser();\n    await Auth.updateUserAttributes(user, {\n      phone_number: `+${this.state.mobile}`,\n    })\n      .then((res) => {\n        this.props.confirmMobileUpdate();\n        this.props.mobileNumUpdate({ mobileNumber: `+${this.state.mobile}` });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  callSignup = async () => {\n    const { email } = this.state;\n\n    try {\n      await Auth.resendSignUp(email);\n      this.props.closePopup();\n      this.props.confirmSignupSuccess(email);\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n  resendCode = async () => {\n    const { userName } = this.props;\n    const fiveMinutes = 5,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    try {\n      await Auth.resendSignUp(userName);\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n\n  mobileHandler = (e, data) => {\n    console.log(data);\n    const dialCode = data.dialCode;\n    console.log(e, dialCode.length);\n    const mobileLength = e.length - dialCode.length == 10;\n    this.setState({ mobileLength: mobileLength, mobile: e });\n    if (this.state.submit) {\n      console.log(\"sasasa\");\n      if (this.state.mobile == \"\") {\n        this.setState({\n          errormessage: \"Please Enter mobile number\",\n          error: true,\n        });\n      } else if (mobileLength == false) {\n        this.setState({\n          errormessage: \"number should be 10 digits\",\n          error: true,\n        });\n      } else {\n        this.setState({ errormessage: \"\", error: false });\n      }\n    }\n  };\n  render() {\n    const { closePopup } = this.props;\n    const { error, errormessage } = this.state;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            mobile: \"\",\n          }}\n          //   validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Update Phone Number\n                    </h4>\n                    <PhoneInput\n                      placeholder=\"Enter phone number\"\n                      value={values.mobile}\n                      countryCodeEditable={false}\n                      // onChange={(e) => setFieldValue('mobile', e)}\n                      onChange={(e, data) => this.mobileHandler(e, data)}\n                      country={\"us\"}\n                      autoFormat={false}\n                      enableAreaCodes={false}\n                      // onlyCountries={[\"us\"]}\n                      containerStyle={{\n                        marginBottom: \"15px\",\n                        marginTop: \"-7px\",\n                      }}\n                      inputStyle={{\n                        border: \"none\",\n                        // borderBottom: \"0.5px solid rgba(0, 0, 0, 0.4)\",\n                        borderRadius: 5,\n                        marginLeft: \"10px\",\n                        width: \"96%\",\n                        height: \"50px\",\n                      }}\n                    />\n                    {error && (\n                      <div className=\"input-feedback\">{errormessage}</div>\n                    )}\n                  </div>\n                  <div className=\"modal-footer mt-2 plr-100 pb-3 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Update Mobile Number\"}\n                      className={\n                        this.state.disabled ? \"disabled w-100\" : \"w-100\"\n                      }\n                      isDisabled={this.state.disabled}\n                    />\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.Auth.error,\n  checkUserResponse: state.Auth.checkUser,\n  checkUserData: state.Auth.checkUserData,\n  mobileNumUpdateData: state.Profile.mobileNumUpdate,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUser: (payload) => dispatch(actions.checkUser(payload)),\n  errorClear: () => dispatch(actions.errorClear()),\n  mobileNumUpdate: (payload) => dispatch(actions.mobileNumUpdate(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileUpdateModal);\n","C:\\react-main\\src\\container\\Template\\LivePreview.jsx",["1821","1822","1823","1824"],"import React from 'react';\nimport certi from \"../../assets/img/certi.png\";\nimport qr from \"../../assets/img/qr.png\";\n\nconst LivePreview = (props) => {\n  const { attribute } = props;\n  return (\n    <div className=\"tab-pane fade show active\" id=\"live\" role=\"tabpanel\">\n      <div className=\"pr-0 min-fixHeight\">\n\n        {attribute.length > 0 && attribute.map((item) => {\n          let text = '';\n          if (item.attribute_dropdown === 'Date') {\n            text = 'DD/MM/YYYY';\n          } else if (item.attribute_dropdown === 'Number') {\n            text = '00';\n          } else if (item.attribute_dropdown === 'Boolean') {\n            text = ' True/False';\n          } else if (item.attribute_dropdown === 'Time') {\n            text = 'HH:MM AM';\n          } else if (item.attribute_dropdown === 'Text') {\n            text = item.description || '';\n          } else {\n            text = 'XXXX';\n          }\n          return (\n            <>\n              <div className=\"d-flex flex-wrap\">\n                <div className=\"col-sm-4\">\n                  <h3 className=\"f-16 f-b\">{item.attribute_name || ''}</h3>\n                </div>\n                <div className=\"col-sm-8\">\n                  <h3 class=\"f-16\">\n                    {item.attribute_name != '' && item.attribute_dropdown != '' ?\n                      item.attribute_dropdown === 'Qr' ?\n                        <div className=\"generateQr\">\n                          <img className=\"my-5 mx-auto d-block\" src={qr} />\n                        </div>\n                        : item.attribute_dropdown === 'Image' ?\n                          <div className=\"box-shd p-2 br-6 d-flex align-items-center justify-content-center text-center h-150\">\n                            <img className=\"img-fluid\" src={certi} />\n                          </div> : text\n                      : ''}\n\n                  </h3>\n                </div>\n              </div>\n            </>\n          )\n        })}\n      </div>\n    </div >\n  );\n};\n\nexport default LivePreview;","C:\\react-main\\src\\container\\Template\\RecentAttribute.jsx",["1825","1826"],"import React from 'react';\nimport Loader from '../../component/Loader.jsx';\n\nconst RecentAttribute = (props) => {\n  const {\n    attribute, recentAttributeLoader, addRecentAttribute,\n  } = props;\n\n  return (\n    <>\n      {recentAttributeLoader\n        && <Loader />\n        || (\n          <div className=\"tab-pane fade show active\" id=\"recent\" role=\"tabpanel\">\n            {attribute.length > 0 ? attribute.map((att, index) => {\n\n              return (\n                <RecentAttributeOne index={index} att={att} addRecentAttribute={addRecentAttribute} />\n              )\n            }) : <div className=\"no-data\">No Recent data</div>}\n\n          </div>\n        )}\n    </>\n  );\n};\n\nexport default RecentAttribute;\n\n\nconst RecentAttributeOne = (props) => {\n  const { att, index, addRecentAttribute } = props;\n\n  return (\n    <div class=\"org-border br-6 p-2 mb-3 recent-attribute-block\" key={index} onDoubleClick={() => addRecentAttribute(att)}>\n      <div class=\"d-flex flex-wrap\">\n        <div class=\"col f-16 f-m flex-grow-2\">\n          Attribute Name\n    </div>\n        <div class=\"col f-16 f-b\">\n          {att.attribute_name || ''}\n        </div>\n      </div>\n      <div class=\"d-flex flex-wrap\">\n        <div class=\"col f-16 f-m\">\n          Attribute Data Type\n    </div>\n        <div class=\"col f-16 f-b\">\n          {att.dataType || att.description || ''}\n        </div>\n      </div>\n    </div>\n  );\n};","C:\\react-main\\src\\container\\Template\\DragDrop.jsx",[],"C:\\react-main\\src\\container\\Template\\StaticTemplate.jsx",["1827","1828"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  TextInput, Checkbox, Button, DropDown,\n} from '../../component/index.jsx';\nimport { imageMapperTemplate } from '../../constants/Mapper.js';\n\nconst templateType = [\n  { label: 'Acceptance Tik', value: 'Acceptance Tik' },\n  { label: 'e-Certificate', value: 'e-Certificate' },\n  { label: 'e-Achievement', value: 'e-Achievement' },\n  { label: 'e-Privilege', value: 'e-Privilege' },\n  { label: 'e-Ticket', value: 'e-Ticket' },\n  { label: 'e-Membership', value: 'e-Membership' },\n  { label: 'e-Prescription', value: 'e-Prescription' },\n  { label: 'e-Receipt', value: 'e-Receipt' },\n  { label: 'e-Note', value: 'e-Note' },\n  { label: 'e-Diploma', value: 'e-Diploma' },\n  { label: 'e-Transcript', value: 'e-Transcript' },\n  { label: 'e-Permit', value: 'e-Permit' },\n  { label: 'e-License', value: 'e-License' },\n]\n\nconst StaticTemplate = (props) => {\n  const {\n    setFieldTouched, values, errors, touched, setFieldValue, handleAutoSaveCheckbox, checkAutoSave, checkAutoSaveBtn,\n  } = props;\n\n  return (\n\n    <li class=\"slide slide1\">\n      <div class=\"org-border br-6 p-3 bg-white\">\n        <div className=\"row mb-3\">\n          <div className=\"col-lg-6 d-flex flex-wrap\">\n            <label className=\"f-16 f-b\">Template Name</label>\n            <TextInput\n              type=\"text\"\n              name={values.template_name}\n              id=\"\"\n              placeholder=\"Enter Template Name\"\n              onChange={(value) => {\n                setFieldValue('template_name', value);\n\n                if (values.template_type !== '' && values.template_name !== '' && values.attribute.length > 0 && checkAutoSave === false && checkAutoSaveBtn === false) {\n                  handleAutoSaveCheckbox(true);\n                }\n              }}\n\n              error={errors.template_name}\n              value={values.template_name}\n              showError={\n                touched.template_name && errors.template_name\n              }\n              className=\" h-40 f-16 f-m w-70 mb-3\"\n              onBlur={() => !touched.template_name\n                && setFieldTouched('template_name', true, true)}\n            />\n          </div>\n          {/* <div className=\"col mt-4\">\n            <Button\n              type=\"submit\"\n              buttonText={successLoader ? <i class=\"fa fa-refresh fa-spin\"></i> : values.isAcceptanceDocument == false ? 'Submit' : 'Next'}\n              className=\"m-2 btn btn-primary p-2 next w-75\"\n            />\n\n          </div> */}\n        </div>\n        <div className=\"row mb-3 \">\n          <div className=\"col-lg-6 d-flex flex-wrap\">\n            <label className=\"f-16 f-b\">Template Type</label>\n            <DropDown\n              options={templateType}\n              onChange={(value) => {\n                if (value === 'Acceptance Tik') {\n                  setFieldValue('isAcceptanceDocument', false);\n                }\n                setFieldValue('template_type', value);\n                if (values.template_type !== '' && values.template_name !== '' && values.attribute && values.attribute.length > 0 && checkAutoSave === false && checkAutoSaveBtn === false) {\n                  handleAutoSaveCheckbox(true);\n                }\n              }}\n              placeholder\n              error={errors.template_type}\n              value={values.template_type}\n              showError={\n                touched.template_type && errors.template_type\n              }\n              className=\"w-70\"\n              onBlur={() => !touched.template_type\n                && setFieldTouched('template_type', true, true)}\n            />\n          </div>\n          <div class=\"col next-margin d-flex\">\n\n            <form class=\"form-group d-inline-block\">\n              <div class=\"custom-file edit-thum\">\n                <img class=\"img-fluid image-circle tempLogo mr-3 temp-Image\" src={imageMapperTemplate[values.template_type]} />\n                {/* <input\n                  type=\"file\"\n                  className=\"custom-file-input-temp\"\n                  error={errors.thumbnail}\n                  accept=\"image/png,image/jpg,image/jpeg\"\n                  onChange={(e) => {\n                    setFieldValue('thumbnail', e.target.files[0].name)\n                    }\n                  }\n                  showError={\n                    touched.thumbnail && errors.thumbnail\n                  }\n                  onBlur={() => !touched.thumbnail\n                    && setFieldTouched('thumbnail', true, true)}\n                /> */}\n                {/* <div>{values.thumbnail ? values.thumbnail : ''}</div> */}\n                {/* <label class=\"custom-file-label f-m\" for=\"\"></label> */}\n              </div>\n            </form>\n          </div>\n        </div>\n\n        {values.template_type !== 'Acceptance Tik' ?\n          <Checkbox\n            parentClassName=\"custom-control custom-checkbox check-dipend\"\n            type=\"checkbox\"\n            id=\"isAcceptanceDocument\"\n            name=\"isAcceptanceDocument\"\n            label=\"Required acceptance\"\n            checked={values.isAcceptanceDocument}\n            onChange={(value) => {\n              setFieldValue('isAcceptanceDocument', value);\n            }}\n          /> : ''}\n      </div>\n    </li>\n  );\n};\n\n\nexport default StaticTemplate;\n","C:\\react-main\\src\\container\\Tik\\DraftMobileView.jsx",["1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport close from \"../../assets/img/close.png\";\nimport mb1 from \"../../assets/img/mb1.png\";\nvar QRCode = require(\"qrcode.react\");\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nclass DraftMobileView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    };\n  }\n\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <>\n        <div\n          className=\"modal fade show\"\n          id=\"twoFactor\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"twoFactorTitle\"\n          aria-hidden=\"true\"\n          style={{ zIndex: 1, overflowY: \"auto\", overflowX: \"hidden\" }}\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\" style={{height: '850px'}}>\n              <div className=\"modal-header \">\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={closePopup}\n                >\n                  <img src={close} />\n                </button>\n              </div>\n\n              <div class=\"modal-body pt-0 plr-100 pb-5 iframe-container\">\n                <img\n                  class=\"mx-auto my-0 d-block width-auto mobile\"\n                  src={mb1}\n                />\n                {/* <iframe\n                  id=\"myiFrame\"\n                  src=\"http://18.222.151.29/create-tik\"\n                ></iframe> */}\n                <div class=\"mb-5 br-20 right-ticket\">\n                  <div class=\" right-container\">\n                    <div class=\"pr-0 min-fixHeight\">\n                      \n                          {/* <!-- <img class=\"my-5 mx-auto d-block qr-img\" src=\"images/qr.png\" /> --> */}\n                          {this.props.imgList.map((e) => {\n                        if (e != undefined) {\n                          if (\n                            e.value != \"\" &&\n                            e.default == true &&\n                            e.dataType == \"Qr\"\n                          ) {\n                            return (\n                                <div class=\"px-3 py-4 border-dark br-20 first-box\">\n                        <div class=\"d-flex  flex-wrap flex-column justify-content-center\">\n                              <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                                <QRCode\n                                  value={e.value}\n                                  size={128}\n                                  bgColor={\"#ffffff\"}\n                                  fgColor={\"#000000\"}\n                                  includeMargin={false}\n                                  renderAs={\"svg\"}\n                                  imageSettings={{\n                                    excavate: true,\n                                  }}\n                                />\n                              </div>\n                               <div class=\"text-center d-flex justify-content-center align-items-center\">\n                          \n                               <h3\n                                 style={{ wordBreak: \"break-all\" }}\n                                 class=\"f-26 f-b mr-3\"\n                               >\n                                 {e.name}\n                               </h3>\n                               <h3\n                                 style={{ wordBreak: \"break-all\" }}\n                                 class=\"f-26\"\n                               >\n                                 {e.value}\n                               </h3>\n                     \n                     </div>\n                     </div>\n                     </div>\n                            );\n                          }\n                        }\n                      })}\n                         \n                        \n                      <div class=\"px-3 py-4 border-dark br-20 mt-2 second-box\">\n                        <div class=\" justify-content-center\">\n                        {this.props.imgList.map((e) => {\n                        if (e != undefined) {\n                          if (\n                            e.default == true &&\n                            e.dataType == \"Image\" &&\n                            e.value != \"\"\n                          ) {\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={e.value}\n                              />\n                            );\n                          }\n                        }\n                      })}\n\n                      {this.props.imageData.map((e) => {\n                        if (e != undefined) {\n                          if (e.default == true) {\n                            console.log(\"image\", e);\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={URL.createObjectURL(e.image)}\n                              />\n                            );\n                          }\n                        }\n                      })}\n                          <div class=\"text-center justify-content-center align-items-center\">\n                            <h3 class=\"f-26 f-b \">\n                              {\" \"}\n                              {this.props.draft.templateDetails.template_type}\n                            </h3>\n                            {/* <!-- <h3 class=\"f-20\">00</h3> --> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"px-3 py-4 border-dark br-20 mt-2 third-box\">\n                        <h4 class=\"f-24 f-m text-center\" style={{wordBreak:'break-all'}}>\n                          {this.props.draft.templateDetails.template_name}\n                        </h4>\n                        {/* <!-- <img class=\"d-block mx-auto tik-logo mb-2 img-fluid\" src=\"images/certificate.png\" /> --> */}\n                        {/* <img class=\"d-block mx-auto tik-logo  my-5 img-fluid\" src={Images.certificate} /> */}\n                        {this.props.imgList.map((e) => {\n                      if (e != undefined) {\n                        if (e.value != \"\" && e.default == false &&  e.dataType == \"Qr\"\n                        ) {\n                          return (\n                            <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                              <QRCode\n                                value={e.value}\n                                size={128}\n                                bgColor={\"#ffffff\"}\n                                fgColor={\"#000000\"}\n                                includeMargin={false}\n                                renderAs={\"svg\"}\n                                imageSettings={{\n                                  excavate: true,\n                                }}\n                              />\n                            </div>\n                          );\n                        }\n                      }\n                    })}\n                   {this.props.imgList.map((e) => {\n                        if (e != undefined) {\n                          if (\n                            e.default == false &&\n                            e.dataType == \"Image\" &&\n                            e.value != \"\"\n                          ) {\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={e.value}\n                              />\n                            );\n                          }\n                        }\n                      })}\n\n                      {this.props.imageData.map((e) => {\n                        if (e != undefined) {\n                          if (e.default == false) {\n                            console.log(\"image\", e);\n                            return (\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"d-block mx-auto  mb-2 img-fluid\"\n                                src={URL.createObjectURL(e.image)}\n                              />\n                            );\n                          }\n                        }\n                      })}\n                    {this.props.imgList.map((e, index) => {\n                        if (e != undefined) {\n                            if( e.dataType != \"Image\"){\n                      return (\n                        <div class=\"d-flex flex-wrap\">\n                          <div class=\"col-sm-4\">\n                            <h3 class=\"f-16 f-b\">{e.name}</h3>\n                          </div>\n                          <div class=\"col-sm-8\">\n                            <h3 class=\"f-16\">\n                              {e.value == true\n                                ? \"True\"\n                                : e.value == false\n                                ? \"False\"\n                                : e.value}\n                            </h3>\n                          </div>\n                        </div>\n                      );\n                              }\n                            }\n                    })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n      </>\n    );\n  }\n}\n\nexport default DraftMobileView;\n","C:\\react-main\\src\\schema\\createTemplateSchema.js",[],"C:\\react-main\\src\\container\\Template\\DeleteTemplatePopup.jsx",["1868","1869"],"import React, { Component } from \"react\";\nimport { Modal, Button } from \"../../component/index.jsx\";\nimport error from \"../../assets/img/error.png\";\n\nexport default class DeleteTemplatePopup extends Component {\n  constructor(props) {\n    super(props);\n  };\n  render() {\n    const { closePopup, confirmDelete, deleteData } = this.props\n    return (\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={error} />\n          <h4 class=\"modal-title text-center f-20 mb-5 f-m\" id=\"\">Are you sure to delete template {deleteData.template_name}?</h4>\n          <div class=\"d-flex\">\n            <Button\n              type=\"button\"\n              buttonText=\"No\"\n              className=\"m-1 clear_button\"\n              onClick={closePopup}\n            />\n            <Button\n              type=\"button\"\n              buttonText=\"Yes\"\n              className=\"m-1\"\n              onClick={confirmDelete}            />\n            {/* <a href=\"#\" class=\"btn btn-default w-100 m-1\">No</a>\n            <a href=\"#\" class=\"btn btn-org b w-100 m-1\">Yes</a> */}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","C:\\react-main\\src\\container\\Tik\\SharedModal.jsx",["1870","1871","1872"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport moment from \"moment\";\n\nclass SharedModal extends Component{\n    render(){\n        const {closePopup, sharedData} = this.props;\n        return(\n            <Modal closePopup={closePopup}>\n              <div class=\"modal-body pt-0 pb-5\">\n                            <a class=\"d-flex justify-content-between align-items-center mt-4 mb-2\">\n                                <span class=\"p-1 f-b\">Date</span>\n                                <span class=\"pl-4r f-b\">Time</span>\n                                <span class=\"p-1 f-b\">Status</span>\n                            </a>\n                            {/* {sharedData && sharedData.map(e => {\n                                return <a class=\"d-flex justify-content-between align-items-center share-public\">\n                                <span class=\"\">{moment(e.at).format(\"DD/MM/YYYY\")}</span>\n                                <span class=\"\">{moment(e.at).format(\"LT\")}</span>\n                                <span class=\"\"><i className={e.blockchainData.isPublic == 'true' ? \"fas fa-check text-muted txt-org text-right d-inline\":\"fas fa-times text-muted txt-org text-right d-inline\"}></i></span>\n                            </a>\n                            })} */}\n                        </div>\n             </Modal>\n        )\n    }\n}\n\nexport default SharedModal;","C:\\react-main\\src\\container\\Tik\\SharedMeModal.jsx",["1873","1874","1875"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport moment from \"moment\";\n\nclass SharedMeModal extends Component{\n    render(){\n        const {closePopup, sharedData} = this.props;\n        return(\n            <Modal closePopup={closePopup}>\n              <div class=\"modal-body pt-0 pb-5\">\n              <a class=\"d-flex justify-content-between align-items-center flex-wrap mt-4 mb-2\">\n                                <span class=\"p-1 f-b\">ID</span>\n                                <span class=\"p-1 f-b\">Date & Time</span>\n                            </a>\n                            {/* {sharedData && sharedData.map(e => {\n                                return <a class=\"d-flex justify-content-between align-items-center share-public\">\n                                <span class=\"\">{moment(e.at).format(\"DD/MM/YYYY\")}</span>\n                                <span class=\"\">{moment(e.at).format(\"LT\")}</span>\n                                <span class=\"\"><i className={e.blockchainData.isPublic == 'true' ? \"fas fa-check text-muted txt-org text-right d-inline\":\"fas fa-times text-muted txt-org text-right d-inline\"}></i></span>\n                            </a>\n                            })} */}\n                        </div>\n             </Modal>\n        )\n    }\n}\n\nexport default SharedMeModal;","C:\\react-main\\src\\container\\Tik\\AddTag.jsx",["1876","1877","1878"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Modal, Button, AddTagForm\n} from '../../component/index.jsx';\nimport * as actions from '../../actions';\nimport { staticLabel } from '../../constants/Constants.js';\nimport { toast } from \"react-toastify\";\n\nclass AddTag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n    };\n  }\n\n  componentDidMount() {\n    const { addTagData } = this.props;\n\n    const body = {\n      documentId: addTagData.blockchainDocId,\n    };\n    this.props.addExistingTagsInTik(body);\n  }\n\n  onChangeTag = (tags) => {\n    this.setState({\n      tags,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      deleteFlagSuccess, addTagData } = this.props;\n    if (deleteFlagSuccess !== prevProps.deleteFlagSuccess) {\n      const body = {\n        documentId: addTagData.blockchainDocId,\n      };\n      this.props.addExistingTagsInTik(body);\n    }\n  }\n\n  addTagForm = () => {\n    const { tags } = this.state;\n    const { addTagData, emailID, existingTags } = this.props;\n\n    if (tags.length > 0) {\n      const body = {\n        documentId: addTagData.blockchainDocId,\n        email: emailID,\n        tags: [...tags],\n      };\n\n      const finalObj = {};\n      finalObj.body = body;\n      finalObj.existingTags = existingTags;\n\n      this.props.addTagsInTik(finalObj);\n    } else {\n      toast.error('Tags is required!');\n    }\n  }\n\n  removeTag = (item) => {\n    const { addTagData, emailID } = this.props;\n\n    const removeTagBody = {\n      documentId: addTagData.blockchainDocId,\n      email: emailID,\n      tags: [item],\n    };\n    this.props.deleteTagsInTik(removeTagBody);\n  }\n\n  render() {\n    const {\n      closePopup, successLoader, existingTagsLoader, existingTags,\n    } = this.props;\n    const { tags } = this.state;\n    const { addTag: addTagLabel } = staticLabel;\n    const {\n      title, addTag, existingTags: existingTagsData, button,\n    } = addTagLabel;\n\n    return (\n      <>\n        <Modal closePopup={closePopup}>\n          <div className=\"modal-body pt-0 plr-100 pb-5\">\n            <h4 className=\"modal-title text-center f-24 mb-4 f-b\" id=\"forgotTitle\">{title}</h4>\n            <form>\n              <div className=\"form-group row\">\n                <label htmlFor=\"staticEmail\" className=\"col-sm-4 col-form-label f-m f-18\">{addTag}</label>\n                <div className=\"col-sm-8\">\n                  <AddTagForm onChangeTag={this.onChangeTag} tags={tags} addTagLabel={addTag} />\n                </div>\n              </div>\n              {existingTagsLoader && <div className=\"loader-add-tag\"><i className=\"fa fa-refresh fa-spin\" /></div>\n                || (\n                  <div className=\"form-group row\">\n                    {existingTags && existingTags.length > 0 && <label htmlFor=\"inputPassword\" className=\"col-sm-4 col-form-label f-m f-18\">{existingTagsData}</label>}\n                    <div className=\"col-sm-8 existingTagWrapper\">\n                      {existingTags && existingTags.length > 0 && existingTags.map((item) => (\n                        <div className=\"tag-input\"> <span className=\"existingTag\">{item} <span><a className=\"ml-1 remove-tag\" onClick={() => this.removeTag(item)}><i className=\"fa fa-times-circle\" /></a></span></span> </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n            </form>\n            <Button\n              type=\"button\"\n              buttonText={successLoader ? <i className=\"fa fa-refresh fa-spin\" /> : button}\n              className=\"btn btn-primary w-100 my-1 f-18 f-b\"\n              onClick={() => this.addTagForm()}\n            />\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    successLoader: state.Tik.successLoader,\n    successPopup: state.Tik.successPopup,\n    emailID: state.Profile.email,\n    existingTags: state.Tik.existingTags,\n    existingTagsLoader: state.Tik.existingTagsLoader,\n    deleteFlagSuccess: state.Tik.deleteFlagSuccess,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTagsInTik: (data) => dispatch(actions.addTagsInTik(data)),\n  addExistingTagsInTik: (payload, existingTags) => dispatch(actions.addExistingTagsInTik(payload, existingTags)),\n  deleteTagsInTik: (data) => dispatch(actions.deleteTagsInTik(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTag);\n","C:\\react-main\\src\\container\\Tik\\deleteDraftTikPopup.jsx",["1879","1880"],"import React, { Component } from \"react\";\nimport { Modal, Button } from \"../../component/index.jsx\";\nimport error from \"../../assets/img/error.png\";\n\nexport default class DeleteDraftTIikPopup extends Component {\n  constructor(props) {\n    super(props);\n  };\n  render() {\n    const { closePopup, confirmDelete, tik, deleteData } = this.props;\n    const { successLoader } = tik;\n    return (\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={error} />\n          <h4 class=\"modal-title text-center f-20 mb-5 f-m\" id=\"\"> Delete  Draft{deleteData.tikName}?</h4>\n          <div class=\"d-flex\">\n            <Button\n              type=\"button\"\n              buttonText=\"No\"\n              className=\"m-1 clear_button\"\n              onClick={closePopup}\n            />\n            <Button\n              type=\"button\"\n              className=\"m-1\"\n              buttonText={successLoader ? <i class=\"fa fa-refresh fa-spin\"></i> : 'Yes'}\n              onClick={confirmDelete}\n            />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","C:\\react-main\\src\\container\\Tik\\MobileView.jsx",["1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport close from \"../../assets/img/close.png\";\nimport mb1 from \"../../assets/img/mb1.png\";\nimport certi from \"../../assets/img/certi.png\";\n\nvar QRCode = require(\"qrcode.react\");\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nclass MobileView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    };\n  }\n\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <>\n        <div\n          className=\"modal fade show\"\n          id=\"twoFactor\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"twoFactorTitle\"\n          aria-hidden=\"true\"\n          style={{ zIndex: 1, overflowY: \"auto\", overflowX: \"hidden\" }}\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\" style={{height: '850px'}}>\n              <div className=\"modal-header \">\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={closePopup}\n                >\n                  <img src={close} />\n                </button>\n              </div>\n\n              <div class=\"modal-body pt-0 plr-100 pb-5 iframe-container\">\n                <img\n                  class=\"mx-auto my-0 d-block width-auto mobile\"\n                  src={mb1}\n                />\n                {/* <iframe\n                  id=\"myiFrame\"\n                  src=\"http://18.222.151.29/create-tik\"\n                ></iframe> */}\n                <div class=\"mb-5 br-20 right-ticket\">\n                  <div class=\" right-container\">\n                    <div class=\"pr-0 min-fixHeight\">\n                \n                          {/* <!-- <img class=\"my-5 mx-auto d-block qr-img\" src=\"images/qr.png\" /> --> */}\n                          {this.props.imgList.map((e) => {\n                        if (e.value != undefined) {\n                          if (e.value != \"\" && e.default == true) {\n                            return (\n                              <div class=\"px-3 py-4 border-dark br-20 first-box\">\n                              <div class=\"d-flex  flex-wrap flex-column justify-content-center\">\n                              <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                                <QRCode\n                                  value={e.value}\n                                  size={128}\n                                  bgColor={\"#ffffff\"}\n                                  fgColor={\"#000000\"}\n                                  includeMargin={false}\n                                  renderAs={\"svg\"}\n                                  imageSettings={{\n                                    excavate: true,\n                                  }}\n                                />\n                              </div>\n                                  <div class=\"text-center d-flex justify-content-center align-items-center\">\n                       \n                                  <h3\n                                    style={{ wordBreak: \"break-all\" }}\n                                    class=\"f-26 f-b mr-3\"\n                                  >\n                                    {e.name}\n                                  </h3>\n                                  <h3\n                                    style={{ wordBreak: \"break-all\" }}\n                                    class=\"f-26\"\n                                  >\n                                    {e.value}\n                                  </h3>\n                       \n                          </div>\n                          </div>\n                      </div>\n                            );\n                          }\n                        }\n                      })}\n                      \n                     \n                      <div class=\"px-3 py-4 border-dark br-20 mt-2 second-box\">\n                        <div class=\" justify-content-center\">\n                        {this.props.image != '' ? this.props.image.map((e) => {\n                        if(e.default == true){\n                          return <img\n                          style={{\n                            height: \"132px\",\n                            width: \"132px\",\n                          }}\n                          class=\"d-block mx-auto  mb-2 img-fluid\"\n                          src={URL.createObjectURL(e.image)}\n                        />\n                        }\n                      }): <img\n                      style={{\n                        height: \"132px\",\n                        width: \"132px\",\n                      }}\n                      class=\"d-block mx-auto  mb-2 img-fluid\"\n                      src={certi}\n                    />}\n                          <div class=\"text-center justify-content-center align-items-center\">\n                            <h3 class=\"f-26 f-b \">\n                              {\" \"}\n                              {this.props.templateDetail.template_type}\n                            </h3>\n                            {/* <!-- <h3 class=\"f-20\">00</h3> --> */}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"px-3 py-4 border-dark br-20 mt-2 third-box\">\n                        <h4 class=\"f-24 f-m text-center\" style={{wordBreak:'break-all'}}>\n                          {this.props.templateDetail.template_name}\n                        </h4>\n                        {/* <!-- <img class=\"d-block mx-auto tik-logo mb-2 img-fluid\" src=\"images/certificate.png\" /> --> */}\n                        {/* <img class=\"d-block mx-auto tik-logo  my-5 img-fluid\" src={Images.certificate} /> */}\n                        {this.props.imgList.map((e) => {\n                          if (e.value != undefined) {\n                            if (e.value != \"\" && e.default == false) {\n                              return (\n                                <div className=\"d-flex justify-content-center flex-column align-items-center my-5\">\n                                  <QRCode\n                                    value={e.value}\n                                    size={128}\n                                    bgColor={\"#ffffff\"}\n                                    fgColor={\"#000000\"}\n                                    includeMargin={false}\n                                    renderAs={\"svg\"}\n                                    imageSettings={{\n                                      excavate: true,\n                                    }}\n                                  />\n                                </div>\n                              );\n                            }\n                          }\n                        })}\n                        {this.props.image.map((e) => {\n                         if(e.default == false){\n                          return (\n                            <>\n                              <img\n                                style={{\n                                  height: \"132px\",\n                                  width: \"132px\",\n                                }}\n                                class=\"my-5 mx-auto d-block\"\n                                src={URL.createObjectURL(e.image)}\n                              />\n                            </>\n                          );\n                       }\n                        })}\n                        {this.props.attrVal.map((e, index) => {\n                          return (\n                            <div class=\"d-flex flex-wrap\">\n                              <div class=\"col-sm-6\">\n                                <h3 class=\"f-16 f-b\">{e.name}</h3>\n                              </div>\n                              <div class=\"col-sm-6\">\n                                <h3 class=\"f-16\">\n                                  {e.value == true\n                                    ? \"True\"\n                                    : e.value == false\n                                    ? \"False\"\n                                    : e.value}\n                                </h3>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n      </>\n    );\n  }\n}\n\nexport default MobileView;\n","C:\\react-main\\src\\container\\roles_management\\viewRolePopup.jsx",[],"C:\\react-main\\src\\container\\roles_management\\addRolesPopup.jsx",[],"C:\\react-main\\src\\container\\roles_management\\deleteRolesPopup.jsx",["1903","1904"],"import React, { Component } from \"react\";\nimport { Modal, Button } from \"../../component/index.jsx\";\nimport error from \"../../assets/img/error.png\";\n\nexport default class DeleteRolesPopup extends Component {\n  constructor(props) {\n    super(props);\n  };\n  render() {\n    const { closePopup, confirmDelete, role, deleteData } = this.props;\n    const { successLoader } = role;\n    return (\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={error} />\n          <h4 class=\"modal-title text-center f-20 mb-5 f-m\" id=\"\">Are you sure to delete {deleteData.roleName}?</h4>\n          <div class=\"d-flex\">\n            <Button\n              type=\"button\"\n              buttonText=\"No\"\n              className=\"m-1 clear_button\"\n              onClick={closePopup}\n            />\n            <Button\n              type=\"button\"\n              className=\"m-1\"\n              buttonText={successLoader ? <i class=\"fa fa-refresh fa-spin\"></i> : 'Yes'}\n              onClick={confirmDelete}\n            />\n            {/* <a href=\"#\" class=\"btn btn-default w-100 m-1\">No</a>\n            <a href=\"#\" class=\"btn btn-org b w-100 m-1\">Yes</a> */}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","C:\\react-main\\src\\container\\roles_management\\editRolesPopup.jsx",[],"C:\\react-main\\src\\container\\users_management\\editUserPopup.jsx",[],"C:\\react-main\\src\\container\\users_management\\addUserPopup.jsx",[],"C:\\react-main\\src\\container\\users_management\\viewUserPopup.jsx",[],"C:\\react-main\\src\\container\\users_management\\deleteUserPopup.jsx",["1905","1906"],"import React, { Component } from \"react\";\nimport { Modal, Button } from \"../../component/index.jsx\";\nimport error from \"../../assets/img/error.png\";\n\nexport default class DeleteRolesPopup extends Component {\n  constructor(props) {\n    super(props);\n  };\n  render() {\n    const { closePopup, confirmDelete, deleteData } = this.props\n    return (\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={error} />\n          <h4 class=\"modal-title text-center f-20 mb-5 f-m\" id=\"\">Are you sure to delete user {deleteData.firstName}?</h4>\n          <div class=\"d-flex\">\n            <Button\n              type=\"button\"\n              buttonText=\"No\"\n              className=\"m-1 clear_button\"\n              onClick={closePopup}\n            />\n            <Button\n              type=\"button\"\n              buttonText=\"Yes\"\n              className=\"m-1\"\n              onClick={confirmDelete}            />\n            {/* <a href=\"#\" class=\"btn btn-default w-100 m-1\">No</a>\n            <a href=\"#\" class=\"btn btn-org b w-100 m-1\">Yes</a> */}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","C:\\react-main\\src\\container\\team_management\\viewTeamPopup.jsx",[],"C:\\react-main\\src\\container\\Auth\\OnLoadModal.jsx",["1907","1908","1909","1910","1911","1912","1913","1914","1915","1916"],"import React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport signup from \"../../assets/img/signup.png\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nclass OnLoadModal extends Component {\n\n  logout = () => {\n    document.body.classList.remove(\"modal-open\");\n    localStorage.removeItem('jwtToken');\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem(\"isFree\");\n    this.props.history.push('/signin');\n  }\n\n  render() {\n    return (\n      <Modal verify={this.props.verify}>\n         <div class=\"modal-body pt-0 plr-100 pb-5 text-center\">\n                    <img src={signup} /><br/><br/>\n                    <h4 class=\"modal-title text-center f-20 mb-4 f-m\" id=\"onloadTitle\">Thank you for signing up on DocTrace.<br/><br/>Your account activation process has been initiated.\n                    </h4>\n                    <h5 class=\"f-16 f-m text-center\">Note : activation would take place within next 48 hours</h5><br/>\n                    <span style={{cursor:'pointer'}} class=\"txt-org f-20 f-m\" onClick={this.logout} data-dismiss=\"modal\"><u>Click here to redirect to homepage</u></span>\n         </div>\n      </Modal>\n    );\n  }\n}\n\n\nexport default OnLoadModal;\n","C:\\react-main\\src\\container\\team_management\\addTeamPopup.jsx",[],"C:\\react-main\\src\\container\\team_management\\editTeamPopup.jsx",[],"C:\\react-main\\src\\container\\team_management\\deleteTeamPopup.jsx",["1917","1918"],"import React, { Component } from \"react\";\nimport { Modal, Button } from \"../../component/index.jsx\";\nimport error from \"../../assets/img/error.png\";\n\nexport default class DeleteTeamPopup extends Component {\n  constructor(props) {\n    super(props);\n\n  };\n\n  render() {\n    const { closePopup, confirmDelete, team, deleteData } = this.props;\n    const { name } = deleteData;\n    const { successLoader } = team;\n    return (\n      <Modal closePopup={closePopup}>\n        <div class=\"modal-body pt-0 plr-100 pb-5\">\n          <img class=\"mx-auto d-block text-center mb-5\" src={error} />\n          <h4 class=\"modal-title text-center f-20 mb-5 f-m\" id=\"\">Are you sure to delete team {name}?</h4>\n          <div class=\"d-flex\">\n            <Button\n              type=\"button\"\n              buttonText=\"No\"\n              className=\"m-1 clear_button\"\n              onClick={closePopup}\n            />\n            <Button\n              type=\"button\"\n              buttonText={successLoader ? <i class=\"fa fa-refresh fa-spin\"></i> : 'Yes'}\n              className=\"m-1\"\n              onClick={confirmDelete}\n            />\n            {/* <a data-dismiss=\"modal\" data-toggle=\"modal\" class=\"btn btn-default w-100 m-1\" onClick={closePopup}>No</a>\n            <a data-dismiss=\"modal\" data-target=\"#dltsuccessTeam\" data-toggle=\"modal\" class=\"btn btn-org b w-100 m-1\" onClick={closePopup}>Yes</a> */}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","C:\\react-main\\src\\container\\Auth\\DocVerificationModal.jsx",["1919","1920"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass DocVerifyModal extends Component {\n    logout = () => {\n        document.body.classList.remove(\"modal-open\");\n        localStorage.removeItem('jwtToken');\n        localStorage.removeItem('userInfo');\n        localStorage.removeItem(\"isFree\");\n        this.props.history.push('/signin');\n      }\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <>\n        <div>\n          <div\n            className=\"modal fade show\"\n            id=\"twoFactor\"\n            tabIndex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"twoFactorTitle\"\n            aria-hidden=\"true\"\n            style={{ zIndex: 1 }}\n          >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n              <div class=\"modal-body plr-100 py-5\">\n                    <h4 class=\"modal-title text-center f-20 mb-4 f-m \" id=\"successTitle\">Documents have been sent for verification.<br/><br/> You would receive status updates via Email within 48 hours.</h4>\n                    <span onClick={this.logout} class=\"btn btn-primary w-100 f-18 f-b\">Ok</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-backdrop fade show\" style={{ zIndex: 0 }}></div>\n      </>\n    );\n  }\n}\n\nexport default DocVerifyModal;\n","C:\\react-main\\src\\container\\Auth\\ConfirmSignupSuccess.jsx",["1921","1922","1923"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from 'react-toastify';\n\nconst options = {\nposition: \"top-center\",\nautoClose: 5000,\nhideProgressBar: true,\ncloseOnClick: true,\npauseOnHover: true,\ndraggable: true,\nprogress: undefined,\n};\n\nlet resendTime;\n\nclass ConfirmSignupSuccess extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    };\n  }\n\n  componentDidMount() {\n    const fiveMinutes =  5,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n  }\n\n  handleSubmit = async (values) => {\n    const { userName, AccountSuccess } = this.props;\n    const verificationCode = values.otp;\n    document.body.classList.remove(\"modal-open\");\n\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    // this.startTimer(fiveMinutes, display);\n    // this.setState({ disabled: true });\n\n    try {\n        await Auth.confirmSignUp(userName, verificationCode)\n        .then(res => {\n          this.props.closePopup();\n          AccountSuccess();\n          this.props.history.push('/signin');\n        })\n      } catch (error) {\n        toast.error(error.message, options);\n      }     \n \n  };\n  resendCode = async () => {\n    const { userName } = this.props;\n    this.setState({ disabled: true });\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    try {\n        await Auth.resendSignUp(userName);\n    } catch (error) {\n        toast.error(error.message, options);\n    }\n  }\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    console.log(timer);\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            otp: \"\",\n          }}\n          validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Account Verification\n                    </h4>\n                    <TextInput\n                      type=\"text\"\n                      name=\"otp\"\n                      id={\"otp\"}\n                      placeholder={\"Enter one time password\"}\n                      error={errors.otp}\n                      onChange={(value) => setFieldValue(\"otp\", value)}\n                      value={values.otp}\n                      showError={touched.otp && errors.otp}\n                      onBlur={() =>\n                        !touched.otp && setFieldTouched(\"otp\", true, true)\n                      }\n                    />\n                    <h5 class=\"text-center txt-blu my-5 f-20 f-m\">\n                      Verification code sent on registered E-mail address\n                    </h5>\n                    <h5 class=\"txt-org text-center mb-5 f-m\">\n                      Code can be resent in <span id=\"time\">02:30</span>\n                    </h5>\n                  </div>\n                  <div className=\"modal-footer plr-100 pb-3 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Verify Account\"}\n                      className=\"w-100\"\n                    //   isDisabled={this.state.disabled}\n                    />\n                  </div>\n                  <div\n                    className={this.state.disabled ? \"disabledLink txt-org text-center mb-3 f-m\":\"txt-org text-center mb-3 f-m\"}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={this.state.disabled ? null:this.resendForgot}\n                  >\n                    Resend confirmation code\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmSignupSuccess;\n","C:\\react-main\\src\\container\\Auth\\ConfirmSignup.jsx",["1924","1925","1926"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/forgotpasswordSchema\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\n\nclass ConfirmSignup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      email: '',\n      submit: false,\n    };\n  }\n\n  handleSubmit = async (values) => {\n    this.props.checkUser({ field: \"email\", value: values.email });\n    this.setState({ email: values.email, submit: true })\n\n  };\n\n  componentDidUpdate(prevProps) {\n    //  if (this.props.checkUserResponse == \"\" &&\n    //  this.props.error == \"error\") {\n    //   toast.error('email does not exist', options);\n    //  }\n    this.props.errorClear()\n    if (this.props.checkUserResponse != \"\" &&\n      this.props.error == \"\" && this.state.submit) {\n      this.callSignup();\n      this.setState({ submit: false })\n\n    }\n  }\n\n  callSignup = async () => {\n    const { email } = this.state;\n\n    try {\n      await Auth.resendSignUp(email);\n      this.props.closePopup();\n      this.props.confirmSignupSuccess(email);\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  }\n  resendCode = async () => {\n    const { userName } = this.props;\n    this.setState({ disabled: true });\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    try {\n      await Auth.resendSignUp(userName);\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            email: \"\",\n          }}\n          validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                {this.props.error ? toast.error('email does not exist', options) : null}\n\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Account Confirmation\n                    </h4>\n                    <TextInput\n                      type=\"text\"\n                      name=\"emaail\"\n                      id={\"email\"}\n                      placeholder={\"Enter registered email address\"}\n                      error={errors.email}\n                      onChange={(value) => setFieldValue(\"email\", value)}\n                      value={values.email}\n                      showError={touched.email && errors.email}\n                      onBlur={() =>\n                        !touched.email && setFieldTouched(\"email\", true, true)\n                      }\n                    />\n                  </div>\n                  <div className=\"modal-footer mt-2 plr-100 pb-3 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Verify Account\"}\n                      className={\n                        this.state.disabled ? \"disabled w-100\" : \"w-100\"\n                      }\n                      isDisabled={this.state.disabled}\n                    />\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.Auth.error,\n  checkUserResponse: state.Auth.checkUser,\n  checkUserData: state.Auth.checkUserData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUser: (payload) => dispatch(actions.checkUser(payload)),\n  errorClear: () => dispatch(actions.errorClear()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmSignup);\n","C:\\react-main\\src\\container\\Auth\\CompleteNewPassword.jsx",["1927","1928"],"/* eslint-disable eqeqeq */\n/* eslint-disable no-undef */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\nlet display;\nclass CompleteNewPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    };\n  }\n  componentDidMount() {\n    const fiveMinutes = 60 * 2 + 30,\n    display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n  }\n  handleSubmit = async (values) => {\n    const { user } = this.props;\n    const newPassword = values.newPassword;\n    const password = values.password;\n    document.body.classList.remove(\"modal-open\");\n\n      display = document.querySelector(\"#time\");\n    // this.startTimer(fiveMinutes, display);\n    // this.setState({ disabled: true });\n    console.log(user, newPassword, password);\n\n    Auth.completeNewPassword(\n      user, // the Cognito User Object\n      password // the new password\n      // OPTIONAL, the required attributes\n    )\n      .then((data) => {\n        Auth.setPreferredMFA(user, \"SMS\")\n          .then((res) => {\n            this.props.closePopup();\n            this.props.showSuccessPopup();\n          })\n          .catch((e) => { });\n      })\n      .catch((e) => {\n        console.log(\"error confirming sign up\", error);\n        toast.error(error.message, options);\n        this.setState({ disabled: false });\n        clearInterval(resendTime);\n        display.textContent = 2 + \":\" + 30;\n      });\n    // Auth.forgotPasswordSubmit(user, verificationCode, password)\n    //   .then((data) => {\n    //     this.props.closePopup();\n    //     this.props.showSuccessPopup();\n    //   })\n    //   .catch((error) => {\n\n    //   });\n  };\n  resendForgot = () => {\n    const { user } = this.props;\n    this.setState({ disabled: true });\n    try {\n      Auth.forgotPassword(user)\n        .then((data) => console.log(data))\n        .catch((err) => toast.error(error.message, options));\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    resendTime = setInterval(() => {\n      // minutes = parseInt(timer / 60, 10);\n      // seconds = parseInt(timer % 60, 10);\n\n      // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      // seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      // if(display){\n      //   display.textContent = minutes + \":\" + seconds;\n      // }/\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            newPassword: \"\",\n            password: \"\",\n          }}\n          //   validationSchema={authenticationFormSchema}\n          //   validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n          validate={(values) => {\n            const errors = {};\n\n            if (!values.password) {\n              errors.password = \"Required\";\n            } else if (values.password.length < 8) {\n              errors.password =\n                \"Password has to be longer than 8 characters!\";\n            } else if (!/^(?=.*[A-Z]).*$/.test(values.password)) {\n              errors.password = \"Password should contain uppercase\";\n            } else if (!/^(?=.*[a-z]).*$/.test(values.password)) {\n              errors.password = \"Password should contain lowercase\";\n            } else if (!/^(?=.*\\d).*$/.test(values.password)) {\n              errors.password = \"Password should contain numeric\";\n            } else if (\n              !/^(?=.*[@$!%*#?&]).*$/.test(values.password)\n            ) {\n              errors.password =\n                \"Password should contain special character\";\n            } else if (values.newPassword != values.password) {\n              errors.newPassword = \"confirm password does not match new password\"\n            }\n            return errors;\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Change Password\n                    </h4>\n                    <TextInput\n                      type=\"password\"\n                      name=\"password\"\n                      id={\"password\"}\n                      placeholder={\"Enter new password\"}\n                      //   error={errors.password}\n                      onChange={(value) => setFieldValue(\"password\", value)}\n                      value={values.password}\n                      //   showError={touched.password && errors.password}\n                      className={\"mb-2\"}\n                    //   onBlur={() =>\n                    //     !touched.password &&\n                    //     setFieldTouched(\"password\", true, true)\n                    //   }\n                    />\n                    {errors.password && touched.password && (\n                      <div className=\"input-feedback\">\n                        {errors.password}\n                      </div>\n                    )}\n                    <TextInput\n                      type=\"password\"\n                      name=\"newPassword\"\n                      id={\"newPassword\"}\n                      placeholder={\"Enter confirm password\"}\n                      // error={errors.otp}\n                      onChange={(value) => setFieldValue(\"newPassword\", value)}\n                      value={values.newPassword}\n                    //   showError={touched.otp && errors.otp}\n                    //   onBlur={() =>\n                    //     !touched.otp && setFieldTouched(\"otp\", true, true)\n                    //   }\n                    />\n                    {errors.newPassword && touched.newPassword && (\n                      <div className=\"input-feedback\">\n                        {errors.newPassword}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"modal-footer plr-100 pb-5 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Change Password\"}\n                      className=\"w-100\"\n                    // isDisabled={this.state.disabled}\n                    />\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\n\nexport default CompleteNewPassword;\n","C:\\react-main\\src\\schema\\docVerifySchema.js",[],"C:\\react-main\\src\\container\\Auth\\TwoFactorAuthentication.jsx",["1929","1930","1931"],"import React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\nclass AuthenticationPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: \"\",\n      resend: false,\n      user2: \"\",\n      disabled: false,\n    };\n  }\n  componentDidMount() {\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n  }\n\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n\n  resendSignin = async () => {\n    const { email, password } = this.props;\n    this.setState({ disabled: true });\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    const user2 = await Auth.signIn({ username: email, password })\n      .then(data => {\n        this.props.login({ cognitoId: data.username });\n        localStorage.setItem('cognitoId', JSON.stringify(data.username));\n        this.setState({ resend: true, user2: data });\n      }).catch(error => {\n        toast.error(error.message, options)\n      })\n  };\n  handleSubmit = async (values) => {\n    const code = values.otp;\n    const { initialuser } = this.props;\n    const { user2, resend } = this.state;\n    document.body.classList.remove(\"modal-open\");\n    const user = resend ? user2 : initialuser;\n    try {\n      const loggedUser = await Auth.confirmSignIn(\n        user, // Return object from Auth.signIn()\n        code, // Confirmation code\n        \"SMS_MFA\" // MFA Type e.g. SMS_MFA, SOFTWARE_TOKEN_MFA\n      )\n        .then(async (data) => {\n          await Auth.currentSession()\n            .then((data) => {\n              localStorage.setItem(\"jwtToken\", JSON.stringify(data));\n              // this.props.history.push(\"./docVerify\");\n              if (this.props.isSuperProvider && this.props.document == '') {\n                this.props.history.push(\"./docVerify\");\n              } else {\n                this.props.history.push(\"./dashboard\");\n              }\n            })\n        })\n        .catch((error) => toast.error(error.message, options));\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n\n  render() {\n    const { closePopup, sentNum } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            otp: \"\",\n          }}\n          validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Two Factor Authentication\n                    </h4>\n                    <TextInput\n                      type=\"text\"\n                      name=\"otp\"\n                      id={\"otp\"}\n                      placeholder={\"Enter Code\"}\n                      error={errors.otp}\n                      onChange={(value) => setFieldValue(\"otp\", value)}\n                      value={values.otp}\n                      showError={touched.otp && errors.otp}\n                      onBlur={() =>\n                        !touched.otp && setFieldTouched(\"otp\", true, true)\n                      }\n                    />\n                    <h5 className=\"text-center txt-blu my-5 f-20 f-m\">\n                      Code has been sent to {sentNum}\n                    </h5>\n                    <h5 className=\"txt-org text-center mb-5 f-m\">\n                      Code can be resent in <span id=\"time\">02:30</span>\n                    </h5>\n                  </div>\n                  <div className=\"modal-footer plr-100 pb-5 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Log In\"}\n                      className={\"w-100\"}\n                    />\n                  </div>\n                  <div\n                    className={this.state.disabled ? \"disabledLink txt-org text-center mb-3 f-m\" : \"txt-org text-center mb-3 f-m\"}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={this.state.disabled ? null : this.resendSignin}\n                  >\n                    Resend confirmation code\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isSuperProvider: state.Auth.isSuperProvider,\n  document: state.Auth.document,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(actions.login(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationPopup);\n","C:\\react-main\\src\\container\\Auth\\MobileVerification.jsx",["1932","1933"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from 'react-toastify';\n\nconst options = {\nposition: \"top-center\",\nautoClose: 5000,\nhideProgressBar: true,\ncloseOnClick: true,\npauseOnHover: true,\ndraggable: true,\nprogress: undefined,\n};\n\nlet resendTime;\n\nclass MobileVerification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    };\n  }\n\n  handleSubmit = async (values) => {\n    const { userName, user, email, password } = this.props;\n    console.log(user)\n    const verificationCode = values.otp;\n    document.body.classList.remove(\"modal-open\");\n\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n\n    //       await Auth.verifyUserAttributeSubmit(user, 'phone_number', verificationCode)\n    //       .then(data => {console.log(data); this.props.history.push('./docVerify');})\n    //       .catch ((error) => {\n    //   console.log(\"error confirming sign up\", error);\n    //   toast.error(error.message, options);\n    //   this.setState({ disabled: false });\n    //   clearInterval(resendTime);\n    //   display.textContent = 2 + \":\" + 30;\n    // })\n           await Auth.verifyUserAttributeSubmit(user, 'phone_number', verificationCode)\n          .then(async (data) => {\n            console.log(data); \n            const user = await Auth.signIn({ username: email, password });\n            if(user){\n              this.props.showTwoFactorPopup(user)\n            }\n          })\n          .catch ((error) => {\n      console.log(\"error confirming sign up\", error);\n      toast.error(error.message, options);\n      this.setState({ disabled: false });\n      clearInterval(resendTime);\n      display.textContent = 2 + \":\" + 30;\n    })\n  };\n\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    console.log(timer);\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            otp: \"\",\n          }}\n          validationSchema={authenticationFormSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Mobile Number Verification\n                    </h4>\n                    <TextInput\n                      type=\"text\"\n                      name=\"otp\"\n                      id={\"otp\"}\n                      placeholder={\"Enter one time password\"}\n                      error={errors.otp}\n                      onChange={(value) => setFieldValue(\"otp\", value)}\n                      value={values.otp}\n                      showError={touched.otp && errors.otp}\n                      onBlur={() =>\n                        !touched.otp && setFieldTouched(\"otp\", true, true)\n                      }\n                    />\n                    <h5 class=\"text-center txt-blu my-5 f-20 f-m\">\n                      Verification code sent on registered E-mail address\n                    </h5>\n                    <h5 className=\"txt-org text-center mb-5 f-m\">\n                      Code can be resent in <span id=\"time\">02:30</span>\n                    </h5>\n                  </div>\n                  <div className=\"modal-footer plr-100 pb-3 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Verify Mobile Number\"}\n                      className={\n                        this.state.disabled ? \"disabled w-100\" : \"w-100\"\n                      }\n                      isDisabled={this.state.disabled}\n                    />\n                  </div>\n                  <div class=\"txt-org text-center mb-3 f-m\" style={{cursor:'pointer'}} onClick={this.resendCode}>\n                      Resend confirmation code\n                    </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\n\nexport default MobileVerification;\n","C:\\react-main\\src\\container\\Auth\\ForgotPasswordVerification.jsx",["1934","1935","1936"],"/* eslint-disable no-undef */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Formik } from \"formik\";\nimport authenticationFormSchema from \"../../schema/authenticationFormSchema\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nlet resendTime;\nlet display;\nclass ForgotPasswordVerification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      certi: \"\",\n      imgName: \"\",\n    };\n  }\n  componentDidMount() {\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    this.setState({ disabled: true });\n  }\n  handleSubmit = async (values) => {\n    const { user } = this.props;\n    const verificationCode = values.otp;\n    const password = values.password;\n    const certi = values.certi\n    console.log(user)\n    document.body.classList.remove(\"modal-open\");\n\n    Auth.forgotPasswordSubmit(user, verificationCode, password)\n      .then((data) => {\n        this.props.closePopup();\n        this.props.showSuccessPopup();\n      })\n      .catch((error) => {\n        console.log(\"error confirming sign up\", error);\n        toast.error(error.message, options);\n        // this.setState({ disabled: false });\n        // clearInterval(resendTime);\n        //  display = document.querySelector(\"#time\");\n        //  display.textContent = 2 + \":\" + 30;\n      });\n    this.props.recoverPassword({ email:user, passcode:password, certi });\n  };\n  resendForgot = () => {\n    const { user } = this.props;\n    this.setState({ disabled: true });\n    const fiveMinutes = 60 * 2 + 30,\n      display = document.querySelector(\"#time\");\n    this.startTimer(fiveMinutes, display);\n    try {\n      Auth.forgotPassword(user)\n        .then((data) => console.log(data))\n        .catch((err) => toast.error(error.message, options));\n    } catch (error) {\n      toast.error(error.message, options);\n    }\n  };\n  startTimer = (duration, display) => {\n    var timer = duration,\n      minutes,\n      seconds;\n    resendTime = setInterval(() => {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      display.textContent = minutes + \":\" + seconds;\n\n      if (--timer < 0) {\n        timer = duration;\n        clearInterval(resendTime);\n        this.setState({ disabled: false });\n      }\n    }, 1000);\n  };\n  handleChange = (e) => {\n    this.setState({\n      certi: e.target.files[0],\n      imgName: e.target.files[0].name,\n    });\n  };\n  render() {\n    const { closePopup } = this.props;\n    return (\n      <Modal closePopup={closePopup}>\n        <Formik\n          initialValues={{\n            otp: \"\",\n            password: \"\",\n            certi: \"\",\n          }}\n          // validationSchema={authenticationFormSchema}\n          validate={(values) => {\n            console.log(values);\n            const errors = {};\n            if (!values.password) {\n              errors.password = \"Required\";\n            } else if (values.password.length < 8) {\n              errors.password = \"Password has to be longer than 8 characters!\";\n            } else if (!/^(?=.*[A-Z]).*$/.test(values.password)) {\n              errors.password = \"Password should contain uppercase\";\n            } else if (!/^(?=.*[a-z]).*$/.test(values.password)) {\n              errors.password = \"Password should contain lowercase\";\n            } else if (!/^(?=.*\\d).*$/.test(values.password)) {\n              errors.password = \"Password should contain numeric\";\n            } else if (!/^(?=.*[@$!%*#?&]).*$/.test(values.password)) {\n              errors.password = \"Password should contain special character\";\n            } else if (values.conpassword !== values.password) {\n              errors.conpassword = \"Confirm password does not match password\";\n            } else if (values.conpassword !== values.password) {\n              errors.conpassword = \"Confirm password does not match password\";\n            } else if (!/^[0-9]+$/.test(values.otp)) {\n              errors.otp = \"Value must be a number\";\n            } else if (!values.certi) {\n              errors.certi = \"certificate is required\";\n            } \n            return errors;\n          }}\n          onSubmit={this.handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleSubmit,\n            setFieldValue,\n            setFieldTouched,\n          }) => {\n            return (\n              <>\n                <form>\n                  <div className=\"modal-body pt-0 plr-100 pb-0\">\n                    <h4\n                      className=\"modal-title text-center f-24 mb-5 f-b\"\n                      id=\"twoFactorTitle\"\n                    >\n                      Change Password\n                    </h4>\n                    <TextInput\n                      type=\"password\"\n                      name=\"password\"\n                      id={\"password\"}\n                      placeholder={\"Enter new password\"}\n                      error={errors.password}\n                      onChange={(value) => setFieldValue(\"password\", value)}\n                      value={values.password}\n                      showError={touched.password && errors.password}\n                      className={\"mb-2\"}\n                      onBlur={() =>\n                        !touched.password &&\n                        setFieldTouched(\"password\", true, true)\n                      }\n                    />\n                    <TextInput\n                      type=\"password\"\n                      name=\"conpassword\"\n                      id={\"conpassword\"}\n                      placeholder={\"Enter confirm password\"}\n                      error={errors.conpassword}\n                      onChange={(value) => setFieldValue(\"conpassword\", value)}\n                      value={values.conpassword}\n                      showError={touched.conpassword && errors.conpassword}\n                      className={\"mb-2\"}\n                      onBlur={() =>\n                        !touched.conpassword &&\n                        setFieldTouched(\"conpassword\", true, true)\n                      }\n                    />\n                    <TextInput\n                      type=\"text\"\n                      name=\"otp\"\n                      id={\"otp\"}\n                      placeholder={\"Enter one time password\"}\n                      error={errors.otp}\n                      onChange={(value) => setFieldValue(\"otp\", value)}\n                      value={values.otp}\n                      className={\"mb-2\"}\n                      showError={touched.otp && errors.otp}\n                      onBlur={() =>\n                        !touched.otp && setFieldTouched(\"otp\", true, true)\n                      }\n                    />\n                    <div class=\"custom-file\">\n                      <input\n                        type=\"file\"\n                        class=\"custom-file-input\"\n                        id=\"customFile\"\n                        onChange={(event) => {\n                          setFieldValue(\"certi\", event.currentTarget.files[0]);}}\n                      \n                        name=\"certi\"\n                        onBlur={() =>\n                          !touched.certi && setFieldTouched(\"certi\", true, true)\n                        }\n                      />\n                      \n                      <label class=\"custom-file-label f-m\">\n                        {this.state.image != undefined\n                          ? _.truncate(this.state.imgName, { length: 12 })\n                          : \"No file selected\"}\n                      </label>\n                   {touched.certi && errors.certi && <div className=\"formError\">{errors.certi}</div>}\n                    </div>\n                    <h5 class=\"text-center txt-blu my-5 f-20 f-m\">\n                      Verification code sent on registered E-mail address\n                    </h5>\n                    <h5 class=\"txt-org text-center mb-5 f-m\">\n                      Code can be resent in <span id=\"time\">02:30</span>\n                    </h5>\n                  </div>\n                  <div className=\"modal-footer plr-100 pb-5 f-m\">\n                    <Button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      buttonText={\"Change Password\"}\n                      className=\"w-100\"\n                      // isDisabled={this.state.disabled}\n                    />\n                  </div>\n                  <div\n                    className={\n                      this.state.disabled\n                        ? \"disabledLink txt-org text-center mb-3 f-m\"\n                        : \"txt-org text-center mb-3 f-m\"\n                    }\n                    style={{ cursor: \"pointer\" }}\n                    onClick={this.state.disabled ? null : this.resendForgot}\n                  >\n                    Resend confirmation code\n                  </div>\n                </form>\n              </>\n            );\n          }}\n        </Formik>\n\n        {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n      </Modal>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  recoverPassword: (payload) => dispatch(actions.recoverPassword(payload)),\n  errorClear: () => dispatch(actions.errorClear()),\n});\nexport default connect(null, mapDispatchToProps)(ForgotPasswordVerification);\n","C:\\react-main\\src\\container\\Auth\\ForgotPassword.jsx",["1937","1938","1939","1940","1941","1942","1943"],"import React, { Component, useState } from \"react\";\nimport { Modal } from \"../../component/index.jsx\";\nimport { TextInput, Button } from \"../../component/index.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport SuccessModal from \"../../component/SuccessModal.jsx\";\nimport { Formik } from \"formik\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport forgotpasswordSchema from \"../../schema/forgotpasswordSchema\";\nimport { toast } from 'react-toastify';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst options = {\n  position: \"top-center\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: false,\n      email: '',\n      submit: false\n    };\n    this.props.errorClear()\n  }\n\n  handleSubmit = (values) => {\n    this.props.checkUser({ field: \"email\", value: values.email });\n    this.setState({ email: values.email, submit: true })\n  };\n  componentDidUpdate(prevProps) {\n    this.props.errorClear()\n    if (this.props.checkUserResponse != \"\" &&\n      this.props.error == \"\" && this.state.submit) {\n      this.callForgot();\n      this.setState({ submit: false })\n    }else if(this.props.checkUserResponse == \"\" &&\n    this.props.error == \"error\"  &&\n    this.state.submit){\n      toast.error('email does not exist')\n      this.setState({ submit: false });\n    }\n\n  }\n\n  callForgot = () => {\n    const { showForgotVerifyPasswordPopup } = this.props;\n    const { email } = this.state;\n    this.setState({ loader: true })\n    try {\n      Auth.forgotPassword(email)\n        .then((data) => { this.setState({ loader: false }); showForgotVerifyPasswordPopup(email) })\n        .catch((error) => {toast.error(error.message, options); this.setState({ loader: false }) });\n    } catch (error) {\n      console.log(error);\n      this.setState({ loader: false });\n      toast.error(error.message, options);\n    }\n  }\n  render() {\n    const { closePopup } = this.props;\n    const { loader } = this.state;\n    return (\n      <>\n        {/* {this.props.error ? toast.error('email does not exist', options) : null} */}\n        <Modal closePopup={closePopup}>\n          <Formik\n            initialValues={{\n              email: \"\",\n            }}\n            validationSchema={forgotpasswordSchema}\n            onSubmit={this.handleSubmit}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleSubmit,\n              setFieldValue,\n              setFieldTouched,\n            }) => {\n              return (\n                <>\n                  <form>\n                    <div class=\"modal-body pt-0 plr-100 pb-0\">\n                      <h4\n                        class=\"modal-title text-center f-24 f-b\"\n                        id=\"forgotTitle\"\n                      >\n                        Forgot Password\n                      </h4>\n                      <h5 class=\"text-center my-5 f-20 f-m\">\n                        If you forgot the password, please enter your email\n                        address.\n                        <br />\n                        <br />\n                        we will send you a password verification code on your\n                        email address.\n                      </h5>\n                      <TextInput\n                        type=\"text\"\n                        name=\"email\"\n                        id={\"email\"}\n                        placeholder={\"Enter E-mail address\"}\n                        error={errors.email}\n                        onChange={(value) => setFieldValue(\"email\", value)}\n                        value={values.email}\n                        showError={touched.email && errors.email}\n                        onBlur={() =>\n                          !touched.email && setFieldTouched(\"email\", true, true)\n                        }\n                      />\n                    </div>\n                    <div class=\"modal-footer plr-100 pb-5 f-m flex-column\">\n                      {/* <button\n                        onClick={handleSubmit}\n                        type=\"submit\"\n                        class=\"btn btn-primary w-100 f-18 f-b\"\n                        data-dismiss=\"modal\"\n                        data-toggle=\"modal\"\n                        data-target=\"#success\"\n                        aria-hidden=\"true\"\n                      >\n                        Submit\n                      </button> */}\n                      <Button\n                        type=\"submit\"\n                        onClick={handleSubmit}\n                        class=\"btn btn-primary w-100 f-18 f-b\"\n                        buttonText={loader ? <i class=\"fa fa-refresh fa-spin\"></i> : 'Submit'}\n                      />\n                      <div class=\"text-center d-block mt-5 txt-blk f-20 f-m\">\n                        Don't have an Account,{\" \"}\n                        <Link to=\"/signup\" class=\"txt-blk acc-link\">\n                          <u>Create Now</u>\n                        </Link>\n                      </div>\n                    </div>\n                  </form>\n                </>\n              );\n            }}\n          </Formik>\n\n          {/* <a href=\"#\" type=\"button\" className=\"btn btn-primary w-100 f-18 f-b\" onClick={this.handleLogin}>Log In</a> */}\n        </Modal>\n        {}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  error: state.Auth.error,\n  checkUserResponse: state.Auth.checkUser,\n  checkUserData: state.Auth.checkUserData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUser: (payload) => dispatch(actions.checkUser(payload)),\n  errorClear: () => dispatch(actions.errorClear()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\n","C:\\react-main\\src\\container\\Template\\ThumbnailTemplate.jsx",["1944","1945","1946","1947"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  ErrorMessage, DropDown, TextInput, Checkbox,\n} from '../../component/index.jsx';\nimport dlt from \"../../assets/img/dlt.png\";\nimport drag from \"../../assets/img/drag.png\";\n\nconst dataType = [\n  { label: 'GenerateQr', value: 'generateQr' },\n  { label: 'UploadImage', value: 'uploadImage' }];\n\n\nconst ThumbnailTemplate = (props) => {\n  const {\n    values, setFieldValue, index, deleteAttributeTemplate\n  } = props;\n  return (\n    <div className=\"attribute-container-block\">\n      {values.attribute.length > 1 ? <a className=\"deleteTemplate\"><img class=\"dlt\" src={dlt} onClick={() => deleteAttributeTemplate(index)} /></a> : ''}\n      <div className=\"org-border br-6 p-3 bg-white\">\n        <img className=\"mb-4 mx-auto d-block drag\" src={drag} />\n        <div className=\"row mb-3 \">\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n            <label className=\"f-16 f-b\">Thumbnail Title</label>\n            <TextInput\n              type=\"text\"\n              placeholder=\"Enter Thumbnail Title\"\n              id=\"\"\n              placeholder=\"Enter Attribute Name\"\n              onChange={(value) => {\n                setFieldValue(`attribute[${index}].attribute_name`, value)\n              }}\n              value={values.attribute[index].attribute_name}\n              className=\"form-control h-40 f-16 f-m w-70\"\n            />\n            <ErrorMessage name={`attribute[${index}].attribute_name`} />\n          </div>\n\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n            <label className=\"f-16 f-b\">Data Type</label>\n\n            <DropDown\n              options={dataType}\n              onChange={(value) => {\n                setFieldValue(`attribute[${index}].attribute_dropdown`, value)\n              }}\n              className=\"w-70\"\n              placeholder\n              value={values.attribute[index].attribute_dropdown}\n              name={`attribute[index].attribute_dropdown`}\n            />\n            <ErrorMessage name={`attribute[${index}].attribute_dropdown`} />\n          </div>\n\n        </div>\n\n        <Checkbox\n          parentClassName=\"custom-control custom-checkbox check-dipend\"\n          type=\"checkbox\"\n          name={`attribute[${index}].include_in_thumbnail`}\n          id={`attribute[${index}].include_in_thumbnail`}\n          label=\"Include in Thumbnail\"\n          checked={values.attribute[index].include_in_thumbnail}\n          onChange={(value) => {\n            setFieldValue(`attribute[${index}].include_in_thumbnail`, value);\n          }}\n        />\n        {/* <ErrorMessage name={`attribute[${index}].include_in_thumbnail`} /> */}\n\n\n\n      </div>\n    </div>\n  );\n};\nexport default ThumbnailTemplate;\n","C:\\react-main\\src\\container\\Template\\TextTemplate.jsx",["1948","1949","1950","1951"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  TextInput, TextArea, Checkbox, ErrorMessage\n} from '../../component/index.jsx';\nimport dlt from \"../../assets/img/dlt.png\";\nimport drag from \"../../assets/img/drag.png\";\nconst TextTemplate = (props) => {\n  const {\n    values, setFieldValue, index, deleteAttributeTemplate\n  } = props;\n\n  return (\n    <div className=\"attribute-container-block\">\n      {values.attribute.length > 1 ? <a className=\"deleteTemplate\"><img class=\"dlt\" src={dlt} onClick={() => deleteAttributeTemplate(index)} /></a> : ''}\n      <div className=\"org-border br-6 p-3 bg-white\">\n        <img className=\"mb-4 mx-auto d-block drag\" src={drag} />\n        <div className=\"row mb-3 \">\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3 align-content-lg-start\">\n            <label className=\"f-16 f-b\">Title</label>\n            <TextInput\n              type=\"text\"\n              placeholder=\"Enter Thumbnail Title\"\n              id=\"\"\n              placeholder=\"Enter Attribute Name\"\n              onChange={(value) => {\n                setFieldValue(`attribute[${index}].attribute_name`, value)\n              }}\n              value={values.attribute[index].attribute_name}\n              className=\"form-control h-40 f-16 f-m w-70\"\n            />\n            <ErrorMessage name={`attribute[${index}].attribute_name`} />\n          </div>\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n            <label className=\"f-16 f-b\">Description</label>\n            <div className=\"input-group w-70\">\n              <TextArea\n                id={`attribute[${index}].attribute_dropdown`}\n                placeholder=\"Type here...\"\n                onChange={(value) => {\n                  setFieldValue(`attribute[${index}].attribute_dropdown`, value)\n                }}\n                rows={3}\n                value={values.attribute[index].attribute_dropdown}\n                name={`attribute[${index}].attribute_dropdown`}\n              />\n              <ErrorMessage name={`attribute[${index}].attribute_dropdown`} />\n            </div>\n          </div>\n        </div>\n\n        <Checkbox\n          parentClassName=\"custom-control custom-checkbox check-dipend\"\n          type=\"checkbox\"\n          name={`attribute[${index}].include_in_thumbnail`}\n          id={`attribute[${index}].include_in_thumbnail`}\n          label=\"Include in Thumbnail\"\n          checked={values.attribute[index].include_in_thumbnail}\n          onChange={(value) => {\n            setFieldValue(`attribute[${index}].include_in_thumbnail`, value);\n          }}\n        />\n        {/* <ErrorMessage name={`attribute[${index}].include_in_thumbnail`} /> */}\n\n      </div>\n    </div>\n  );\n};\n\n\nexport default TextTemplate;\n","C:\\react-main\\src\\container\\Template\\AttributeTemplate.jsx",["1952","1953","1954","1955","1956","1957"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport {\n  TextInput, Checkbox, DropDown, ErrorMessage, TextArea\n} from '../../component/index.jsx';\nimport dlt from \"../../assets/img/dlt.png\";\nimport drag from \"../../assets/img/drag.png\";\n\nconst attribute_dataType = [\n  { label: 'Date', value: 'Date' },\n  { label: 'String', value: 'String' },\n  { label: 'Number', value: 'Number' },\n  { label: 'Boolean', value: 'Boolean' },\n  { label: 'Time', value: 'Time' },\n  { label: 'Qr', value: 'Qr' },\n  { label: 'Image', value: 'Image' },\n  { label: 'Text', value: 'Text' },\n];\n\nconst AttributeTemplate = (props) => {\n  const {\n    values, setFieldValue, index, deleteAttributeTemplate, handleAutoSaveCheckbox, checkAutoSave, checkAutoSaveBtn,\n  } = props;\n\n  useEffect(() => {\n    if (values.template_type !== '' && values.template_name !== '' && values.attribute.length > 0 && checkAutoSave === false && checkAutoSaveBtn === false) {\n      if (values.attribute[0].attribute_name !== '' && values.attribute[0].attribute_dropdown !== '') {\n        handleAutoSaveCheckbox(true);\n      }\n    }\n  }, [values.attribute]);\n\n  return (\n    <div className=\"attribute-container-block\">\n      {values.attribute.length > 1 ?\n        <a className=\"deleteTemplate\"><img class=\"dlt\" src={dlt}\n          onClick={() => {\n            if (values.attribute[index].include_in_thumbnail === true) {\n              if (values.attribute[index].attribute_dropdown === \"Image\") {\n                let Images = values.attribute.filter(a =>\n                  a.attribute_dropdown === 'Image')\n                if (Images.length > 1) {\n                  let first = false\n                  values.attribute.forEach((at, i) => {\n                    if (at.attribute_dropdown === 'Image' && i !== index) {\n                      if (first === false) {\n                        setFieldValue(`attribute[${i}].include_in_thumbnail`, true)\n                        first = true\n                      }\n                    }\n                  })\n                }\n              }\n            }\n            if (values.attribute[index].include_in_thumbnail === true) {\n              if (values.attribute[index].attribute_dropdown === \"Qr\") {\n                let Images = values.attribute.filter(a =>\n                  a.attribute_dropdown === 'Qr')\n                if (Images.length > 1) {\n                  let first = false\n                  values.attribute.forEach((at, i) => {\n                    if (at.attribute_dropdown === 'Qr' && i !== index) {\n                      if (first === false) {\n                        setFieldValue(`attribute[${i}].include_in_thumbnail`, true)\n                        first = true\n                      }\n                    }\n                  })\n                }\n              }\n            }\n            deleteAttributeTemplate(index)\n          }} /></a> : ''}\n      <div className=\"org-border br-6 p-3 bg-white\" key={index}>\n        <img className=\"mb-4 mx-auto d-block drag\" src={drag} />\n        <div className=\"row mb-3 \">\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n            <label className=\"f-16 f-b\">Attribute Name</label>\n            <TextInput\n              type=\"text\"\n              name={`attribute[${index}].attribute_name`}\n              id=\"\"\n              placeholder=\"Enter Attribute Name\"\n              onChange={(value) => {\n                setFieldValue(`attribute[${index}].attribute_name`, value);\n              }}\n              value={values.attribute[index].attribute_name}\n              className=\"form-control h-40 f-16 f-m w-70\"\n\n            />\n            <ErrorMessage name={`attribute[${index}].attribute_name`} />\n          </div>\n          <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n            <label className=\"f-16 f-b\">Data Type</label>\n            <DropDown\n              options={attribute_dataType}\n              onChange={(value) => {\n                if (value !== 'Qr' || value !== 'Image') {\n                  setFieldValue(`attribute[${index}].include_in_thumbnail`, false);\n                }\n                if (value === 'Image') {\n                  let Images = values.attribute.filter(a => a.attribute_dropdown === 'Image');\n                  if (Images.length < 1) {\n                    setFieldValue(`attribute[${index}].include_in_thumbnail`, true);\n                  } else {\n                    setFieldValue(`attribute[${index}].include_in_thumbnail`, false);\n                  }\n                }\n                if (value === 'Qr') {\n                  let Qrs = values.attribute.filter(a => a.attribute_dropdown === 'Qr');\n                  if (Qrs.length < 1) {\n                    setFieldValue(`attribute[${index}].include_in_thumbnail`, true);\n                  }\n                }\n                setFieldValue(`attribute[${index}].attribute_dropdown`, value);\n              }}\n              className=\"w-70\"\n              placeholder\n              value={values.attribute[index].attribute_dropdown}\n              name={`attribute[index].attribute_dropdown`}\n            />\n            <ErrorMessage name={`attribute[${index}].attribute_dropdown`} />\n          </div>\n          {values.attribute[index].attribute_dropdown === 'Text' ?\n            <div className=\"col-lg-6 d-flex flex-wrap mb-3\">\n              <label className=\"f-16 f-b\">Description</label>\n              <div className=\"input-group w-70\">\n                <TextArea\n                  id={`attribute[${index}].description`}\n                  placeholder=\"Type here...\"\n                  onChange={(value) => {\n                    setFieldValue(`attribute[${index}].description`, value)\n                  }}\n                  rows={3}\n                  value={values.attribute[index].description}\n                  name={`attribute[${index}].description`}\n                />\n                <ErrorMessage name={`attribute[${index}].description`} />\n              </div>\n            </div> : ''}\n        </div>\n\n        {values.attribute[index].attribute_name !== '' ?\n          <Checkbox\n            parentClassName=\"custom-control custom-checkbox check-dipend\"\n            type=\"checkbox\"\n            name={`attribute[${index}].include_in_thumbnail`}\n            id={`attribute[${index}].include_in_thumbnail`}\n            label={(values.attribute[index].attribute_dropdown === 'Image' || values.attribute[index].attribute_dropdown === 'Qr') ? \"Set as Default\" : 'Include in thumbnail'}\n            checked={values.attribute[index].include_in_thumbnail}\n            onChange={(value) => {\n              let b = false\n              if (value) {\n                if (values.attribute[index].attribute_dropdown === 'Image') {\n                  values.attribute.forEach((a, i) => {\n                    if (a.attribute_dropdown === 'Image') {\n                      setFieldValue(`attribute[${i}].include_in_thumbnail`, false)\n                    }\n                  })\n                }\n                if (values.attribute[index].attribute_dropdown === 'Qr') {\n                  values.attribute.forEach((a, i) => {\n                    if (a.attribute_dropdown === 'Qr') {\n                      setFieldValue(`attribute[${i}].include_in_thumbnail`, false)\n                    }\n                  })\n                }\n              } else {\n                if (values.attribute[index].attribute_dropdown === 'Image') {\n                  let Images = values.attribute.filter(a =>\n                    a.attribute_dropdown === 'Image' && a.include_in_thumbnail === true)\n                  if (Images.length == 1) {\n                    b = true\n                    setFieldValue(`attribute[${index}].include_in_thumbnail`, !value);\n                  }\n                } if (values.attribute[index].attribute_dropdown === 'Qr') {\n                  let Images = values.attribute.filter(a =>\n                    a.attribute_dropdown === 'Qr' && a.include_in_thumbnail === true)\n                  if (Images.length == 1) {\n                    b = true\n                    setFieldValue(`attribute[${index}].include_in_thumbnail`, !value);\n                  }\n                }\n\n              }\n              if (!b) {\n                setFieldValue(`attribute[${index}].include_in_thumbnail`, value);\n              }\n\n            }}\n          />\n          : ''}\n      </div>\n    </div>\n  );\n};\n\nexport default AttributeTemplate;","C:\\react-main\\src\\schema\\authenticationFormSchema.js",[],"C:\\react-main\\src\\schema\\rolesSchema.js",[],"C:\\react-main\\src\\schema\\forgotpasswordSchema.js",[],"C:\\react-main\\src\\schema\\userSchema.js",[],"C:\\react-main\\src\\schema\\userEditSchema.js",[],"C:\\react-main\\src\\schema\\signInSchema.js",[],"C:\\react-main\\src\\schema\\addTeamSchema.js",[],{"ruleId":"1958","severity":1,"message":"1959","line":47,"column":3,"nodeType":"1960","endLine":47,"endColumn":12,"suggestions":"1961"},{"ruleId":"1962","replacedBy":"1963"},{"ruleId":"1964","replacedBy":"1965"},{"ruleId":"1966","severity":1,"message":"1967","line":15,"column":41,"nodeType":"1968","endLine":15,"endColumn":55},{"ruleId":"1966","severity":1,"message":"1967","line":17,"column":41,"nodeType":"1968","endLine":17,"endColumn":60},{"ruleId":"1969","severity":1,"message":"1970","line":16,"column":36,"nodeType":"1971","messageId":"1972","endLine":16,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":9,"column":36,"nodeType":"1971","messageId":"1972","endLine":9,"endColumn":38},{"ruleId":"1973","severity":1,"message":"1974","line":10,"column":8,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":28},{"ruleId":"1973","severity":1,"message":"1976","line":30,"column":7,"nodeType":"1960","messageId":"1975","endLine":30,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1970","line":82,"column":27,"nodeType":"1971","messageId":"1972","endLine":82,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1970","line":133,"column":36,"nodeType":"1971","messageId":"1972","endLine":133,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":134,"column":24,"nodeType":"1971","messageId":"1972","endLine":134,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":136,"column":24,"nodeType":"1971","messageId":"1972","endLine":136,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":143,"column":36,"nodeType":"1971","messageId":"1972","endLine":143,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":144,"column":24,"nodeType":"1971","messageId":"1972","endLine":144,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":145,"column":36,"nodeType":"1971","messageId":"1972","endLine":145,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1977","line":151,"column":33,"nodeType":"1971","messageId":"1972","endLine":151,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":236,"column":53,"nodeType":"1971","messageId":"1972","endLine":236,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":239,"column":29,"nodeType":"1971","messageId":"1972","endLine":239,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":241,"column":31,"nodeType":"1971","messageId":"1972","endLine":241,"endColumn":33},{"ruleId":"1973","severity":1,"message":"1978","line":260,"column":7,"nodeType":"1960","messageId":"1975","endLine":260,"endColumn":19},{"ruleId":"1966","severity":1,"message":"1967","line":277,"column":15,"nodeType":"1968","endLine":277,"endColumn":71},{"ruleId":"1973","severity":1,"message":"1979","line":350,"column":25,"nodeType":"1960","messageId":"1975","endLine":350,"endColumn":35},{"ruleId":"1973","severity":1,"message":"1980","line":354,"column":25,"nodeType":"1960","messageId":"1975","endLine":354,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":551,"column":20,"nodeType":"1971","messageId":"1972","endLine":551,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":561,"column":27,"nodeType":"1971","messageId":"1972","endLine":561,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1970","line":568,"column":29,"nodeType":"1971","messageId":"1972","endLine":568,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":575,"column":27,"nodeType":"1971","messageId":"1972","endLine":575,"endColumn":29},{"ruleId":"1981","severity":1,"message":"1982","line":118,"column":15,"nodeType":"1968","endLine":125,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":131,"column":20,"nodeType":"1971","messageId":"1972","endLine":131,"endColumn":22},{"ruleId":"1973","severity":1,"message":"1983","line":2,"column":10,"nodeType":"1960","messageId":"1975","endLine":2,"endColumn":14},{"ruleId":"1973","severity":1,"message":"1984","line":20,"column":13,"nodeType":"1960","messageId":"1975","endLine":20,"endColumn":23},{"ruleId":"1985","severity":1,"message":"1986","line":200,"column":106,"nodeType":"1987","messageId":"1988","endLine":200,"endColumn":108},{"ruleId":"1985","severity":1,"message":"1986","line":200,"column":131,"nodeType":"1987","messageId":"1988","endLine":200,"endColumn":133},{"ruleId":"1981","severity":1,"message":"1982","line":201,"column":25,"nodeType":"1968","endLine":201,"endColumn":95},{"ruleId":"1985","severity":1,"message":"1986","line":212,"column":124,"nodeType":"1987","messageId":"1988","endLine":212,"endColumn":126},{"ruleId":"1985","severity":1,"message":"1986","line":212,"column":149,"nodeType":"1987","messageId":"1988","endLine":212,"endColumn":151},{"ruleId":"1985","severity":1,"message":"1986","line":213,"column":124,"nodeType":"1987","messageId":"1988","endLine":213,"endColumn":126},{"ruleId":"1985","severity":1,"message":"1986","line":213,"column":149,"nodeType":"1987","messageId":"1988","endLine":213,"endColumn":151},{"ruleId":"1985","severity":1,"message":"1986","line":218,"column":100,"nodeType":"1987","messageId":"1988","endLine":218,"endColumn":102},{"ruleId":"1985","severity":1,"message":"1986","line":218,"column":125,"nodeType":"1987","messageId":"1988","endLine":218,"endColumn":127},{"ruleId":"1985","severity":1,"message":"1986","line":220,"column":100,"nodeType":"1987","messageId":"1988","endLine":220,"endColumn":102},{"ruleId":"1985","severity":1,"message":"1986","line":220,"column":125,"nodeType":"1987","messageId":"1988","endLine":220,"endColumn":127},{"ruleId":"1985","severity":1,"message":"1986","line":223,"column":98,"nodeType":"1987","messageId":"1988","endLine":223,"endColumn":100},{"ruleId":"1985","severity":1,"message":"1986","line":223,"column":123,"nodeType":"1987","messageId":"1988","endLine":223,"endColumn":125},{"ruleId":"1973","severity":1,"message":"1989","line":18,"column":10,"nodeType":"1960","messageId":"1975","endLine":18,"endColumn":26},{"ruleId":"1973","severity":1,"message":"1990","line":60,"column":28,"nodeType":"1960","messageId":"1975","endLine":60,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1970","line":49,"column":60,"nodeType":"1971","messageId":"1972","endLine":49,"endColumn":62},{"ruleId":"1969","severity":1,"message":"1977","line":116,"column":31,"nodeType":"1971","messageId":"1972","endLine":116,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":121,"column":33,"nodeType":"1971","messageId":"1972","endLine":121,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1977","line":126,"column":31,"nodeType":"1971","messageId":"1972","endLine":126,"endColumn":33},{"ruleId":"1973","severity":1,"message":"1991","line":138,"column":17,"nodeType":"1960","messageId":"1975","endLine":138,"endColumn":28},{"ruleId":"1985","severity":1,"message":"1986","line":171,"column":106,"nodeType":"1987","messageId":"1988","endLine":171,"endColumn":108},{"ruleId":"1985","severity":1,"message":"1986","line":171,"column":131,"nodeType":"1987","messageId":"1988","endLine":171,"endColumn":133},{"ruleId":"1981","severity":1,"message":"1982","line":172,"column":28,"nodeType":"1968","endLine":172,"endColumn":95},{"ruleId":"1985","severity":1,"message":"1986","line":185,"column":124,"nodeType":"1987","messageId":"1988","endLine":185,"endColumn":126},{"ruleId":"1985","severity":1,"message":"1986","line":185,"column":149,"nodeType":"1987","messageId":"1988","endLine":185,"endColumn":151},{"ruleId":"1985","severity":1,"message":"1986","line":186,"column":124,"nodeType":"1987","messageId":"1988","endLine":186,"endColumn":126},{"ruleId":"1985","severity":1,"message":"1986","line":186,"column":149,"nodeType":"1987","messageId":"1988","endLine":186,"endColumn":151},{"ruleId":"1985","severity":1,"message":"1986","line":191,"column":100,"nodeType":"1987","messageId":"1988","endLine":191,"endColumn":102},{"ruleId":"1985","severity":1,"message":"1986","line":191,"column":125,"nodeType":"1987","messageId":"1988","endLine":191,"endColumn":127},{"ruleId":"1985","severity":1,"message":"1986","line":194,"column":100,"nodeType":"1987","messageId":"1988","endLine":194,"endColumn":102},{"ruleId":"1985","severity":1,"message":"1986","line":194,"column":125,"nodeType":"1987","messageId":"1988","endLine":194,"endColumn":127},{"ruleId":"1992","severity":1,"message":"1993","line":195,"column":121,"nodeType":"1994","endLine":195,"endColumn":140},{"ruleId":"1985","severity":1,"message":"1986","line":197,"column":98,"nodeType":"1987","messageId":"1988","endLine":197,"endColumn":100},{"ruleId":"1985","severity":1,"message":"1986","line":197,"column":123,"nodeType":"1987","messageId":"1988","endLine":197,"endColumn":125},{"ruleId":"1969","severity":1,"message":"1970","line":204,"column":24,"nodeType":"1971","messageId":"1972","endLine":204,"endColumn":26},{"ruleId":"1973","severity":1,"message":"1995","line":5,"column":8,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":33,"column":19,"nodeType":"1971","messageId":"1972","endLine":33,"endColumn":21},{"ruleId":"1969","severity":1,"message":"1977","line":43,"column":28,"nodeType":"1971","messageId":"1972","endLine":43,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1977","line":46,"column":32,"nodeType":"1971","messageId":"1972","endLine":46,"endColumn":34},{"ruleId":"1969","severity":1,"message":"1970","line":47,"column":21,"nodeType":"1971","messageId":"1972","endLine":47,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1977","line":88,"column":18,"nodeType":"1971","messageId":"1972","endLine":88,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1970","line":125,"column":27,"nodeType":"1971","messageId":"1972","endLine":125,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1970","line":125,"column":59,"nodeType":"1971","messageId":"1972","endLine":125,"endColumn":61},{"ruleId":"1969","severity":1,"message":"1977","line":158,"column":60,"nodeType":"1971","messageId":"1972","endLine":158,"endColumn":62},{"ruleId":"1981","severity":1,"message":"1982","line":184,"column":33,"nodeType":"1968","endLine":184,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1977","line":191,"column":53,"nodeType":"1971","messageId":"1972","endLine":191,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":192,"column":60,"nodeType":"1971","messageId":"1972","endLine":192,"endColumn":62},{"ruleId":"1981","severity":1,"message":"1982","line":215,"column":19,"nodeType":"1968","endLine":218,"endColumn":20},{"ruleId":"1981","severity":1,"message":"1982","line":221,"column":19,"nodeType":"1968","endLine":224,"endColumn":20},{"ruleId":"1996","severity":1,"message":"1997","line":96,"column":7,"nodeType":"1998","messageId":"1972","endLine":96,"endColumn":14},{"ruleId":"1996","severity":1,"message":"1997","line":110,"column":7,"nodeType":"1998","messageId":"1972","endLine":110,"endColumn":14},{"ruleId":"1985","severity":1,"message":"1986","line":183,"column":102,"nodeType":"1987","messageId":"1988","endLine":183,"endColumn":104},{"ruleId":"1985","severity":1,"message":"1986","line":183,"column":127,"nodeType":"1987","messageId":"1988","endLine":183,"endColumn":129},{"ruleId":"1981","severity":1,"message":"1982","line":184,"column":21,"nodeType":"1968","endLine":185,"endColumn":56},{"ruleId":"1985","severity":1,"message":"1986","line":198,"column":120,"nodeType":"1987","messageId":"1988","endLine":198,"endColumn":122},{"ruleId":"1985","severity":1,"message":"1986","line":198,"column":145,"nodeType":"1987","messageId":"1988","endLine":198,"endColumn":147},{"ruleId":"1985","severity":1,"message":"1986","line":199,"column":120,"nodeType":"1987","messageId":"1988","endLine":199,"endColumn":122},{"ruleId":"1985","severity":1,"message":"1986","line":199,"column":145,"nodeType":"1987","messageId":"1988","endLine":199,"endColumn":147},{"ruleId":"1985","severity":1,"message":"1986","line":204,"column":96,"nodeType":"1987","messageId":"1988","endLine":204,"endColumn":98},{"ruleId":"1985","severity":1,"message":"1986","line":204,"column":121,"nodeType":"1987","messageId":"1988","endLine":204,"endColumn":123},{"ruleId":"1985","severity":1,"message":"1986","line":210,"column":96,"nodeType":"1987","messageId":"1988","endLine":210,"endColumn":98},{"ruleId":"1985","severity":1,"message":"1986","line":210,"column":121,"nodeType":"1987","messageId":"1988","endLine":210,"endColumn":123},{"ruleId":"1985","severity":1,"message":"1986","line":221,"column":94,"nodeType":"1987","messageId":"1988","endLine":221,"endColumn":96},{"ruleId":"1985","severity":1,"message":"1986","line":221,"column":119,"nodeType":"1987","messageId":"1988","endLine":221,"endColumn":121},{"ruleId":"1973","severity":1,"message":"1999","line":3,"column":3,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":4,"column":3,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2001","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":9},{"ruleId":"1973","severity":1,"message":"2003","line":11,"column":10,"nodeType":"1960","messageId":"1975","endLine":11,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2004","line":15,"column":8,"nodeType":"1960","messageId":"1975","endLine":15,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2005","line":16,"column":8,"nodeType":"1960","messageId":"1975","endLine":16,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2006","line":17,"column":8,"nodeType":"1960","messageId":"1975","endLine":17,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2007","line":18,"column":8,"nodeType":"1960","messageId":"1975","endLine":18,"endColumn":11},{"ruleId":"1969","severity":1,"message":"1977","line":63,"column":40,"nodeType":"1971","messageId":"1972","endLine":63,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":71,"column":34,"nodeType":"1971","messageId":"1972","endLine":71,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1970","line":73,"column":21,"nodeType":"1971","messageId":"1972","endLine":73,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1970","line":75,"column":28,"nodeType":"1971","messageId":"1972","endLine":75,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1977","line":164,"column":20,"nodeType":"1971","messageId":"1972","endLine":164,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":165,"column":22,"nodeType":"1971","messageId":"1972","endLine":165,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2008","line":194,"column":7,"nodeType":"1960","messageId":"1975","endLine":194,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2009","line":195,"column":7,"nodeType":"1960","messageId":"1975","endLine":195,"endColumn":13},{"ruleId":"1969","severity":1,"message":"1970","line":205,"column":27,"nodeType":"1971","messageId":"1972","endLine":205,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1970","line":205,"column":59,"nodeType":"1971","messageId":"1972","endLine":205,"endColumn":61},{"ruleId":"2010","severity":1,"message":"2011","line":210,"column":37,"nodeType":"2012","messageId":"2013","endLine":210,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":232,"column":19,"nodeType":"1968","endLine":236,"endColumn":21},{"ruleId":"1981","severity":1,"message":"1982","line":247,"column":17,"nodeType":"1968","endLine":251,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1977","line":261,"column":49,"nodeType":"1971","messageId":"1972","endLine":261,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1970","line":269,"column":45,"nodeType":"1971","messageId":"1972","endLine":269,"endColumn":47},{"ruleId":"1969","severity":1,"message":"1970","line":269,"column":59,"nodeType":"1971","messageId":"1972","endLine":269,"endColumn":61},{"ruleId":"2014","severity":1,"message":"2015","line":274,"column":27,"nodeType":"1968","endLine":278,"endColumn":29},{"ruleId":"1981","severity":1,"message":"1982","line":300,"column":17,"nodeType":"1968","endLine":303,"endColumn":18},{"ruleId":"1981","severity":1,"message":"1982","line":306,"column":17,"nodeType":"1968","endLine":309,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":316,"column":22,"nodeType":"1971","messageId":"1972","endLine":316,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2016","line":14,"column":10,"nodeType":"1960","messageId":"1975","endLine":14,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1977","line":49,"column":49,"nodeType":"1971","messageId":"1972","endLine":49,"endColumn":51},{"ruleId":"2010","severity":1,"message":"2011","line":63,"column":33,"nodeType":"2012","messageId":"2013","endLine":63,"endColumn":35},{"ruleId":"2010","severity":1,"message":"2017","line":64,"column":30,"nodeType":"2012","messageId":"2013","endLine":64,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":65,"column":21,"nodeType":"1971","messageId":"1972","endLine":65,"endColumn":23},{"ruleId":"2010","severity":1,"message":"2011","line":75,"column":33,"nodeType":"2012","messageId":"2013","endLine":75,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1977","line":96,"column":35,"nodeType":"1971","messageId":"1972","endLine":96,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1977","line":103,"column":36,"nodeType":"1971","messageId":"1972","endLine":103,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1977","line":106,"column":31,"nodeType":"1971","messageId":"1972","endLine":106,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":109,"column":34,"nodeType":"1971","messageId":"1972","endLine":109,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1977","line":114,"column":35,"nodeType":"1971","messageId":"1972","endLine":114,"endColumn":37},{"ruleId":"2010","severity":1,"message":"2011","line":116,"column":44,"nodeType":"2012","messageId":"2013","endLine":116,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":117,"column":29,"nodeType":"1971","messageId":"1972","endLine":117,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":183,"column":16,"nodeType":"1971","messageId":"1972","endLine":183,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":16,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":35,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":59,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":61},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":90,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":92},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":113,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":115},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":141,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":143},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":165,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":167},{"ruleId":"2010","severity":1,"message":"2011","line":273,"column":55,"nodeType":"2012","messageId":"2013","endLine":273,"endColumn":57},{"ruleId":"1981","severity":1,"message":"1982","line":304,"column":25,"nodeType":"1968","endLine":304,"endColumn":147},{"ruleId":"1973","severity":1,"message":"2018","line":9,"column":10,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":16},{"ruleId":"1973","severity":1,"message":"2019","line":19,"column":10,"nodeType":"1960","messageId":"1975","endLine":19,"endColumn":28},{"ruleId":"1996","severity":1,"message":"2020","line":55,"column":7,"nodeType":"1998","messageId":"1972","endLine":55,"endColumn":15},{"ruleId":"1996","severity":1,"message":"2021","line":56,"column":7,"nodeType":"1998","messageId":"1972","endLine":56,"endColumn":17},{"ruleId":"1973","severity":1,"message":"2022","line":76,"column":11,"nodeType":"1960","messageId":"1975","endLine":76,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1977","line":142,"column":34,"nodeType":"1971","messageId":"1972","endLine":142,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1977","line":143,"column":37,"nodeType":"1971","messageId":"1972","endLine":143,"endColumn":39},{"ruleId":"2010","severity":1,"message":"2011","line":145,"column":56,"nodeType":"2012","messageId":"2013","endLine":145,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1970","line":146,"column":17,"nodeType":"1971","messageId":"1972","endLine":146,"endColumn":19},{"ruleId":"2010","severity":1,"message":"2011","line":147,"column":60,"nodeType":"2012","messageId":"2013","endLine":147,"endColumn":62},{"ruleId":"1969","severity":1,"message":"1970","line":151,"column":17,"nodeType":"1971","messageId":"1972","endLine":151,"endColumn":19},{"ruleId":"2010","severity":1,"message":"2011","line":152,"column":56,"nodeType":"2012","messageId":"2013","endLine":152,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1970","line":156,"column":17,"nodeType":"1971","messageId":"1972","endLine":156,"endColumn":19},{"ruleId":"2010","severity":1,"message":"2011","line":157,"column":55,"nodeType":"2012","messageId":"2013","endLine":157,"endColumn":57},{"ruleId":"2010","severity":1,"message":"2011","line":164,"column":35,"nodeType":"2012","messageId":"2013","endLine":164,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":165,"column":26,"nodeType":"1971","messageId":"1972","endLine":165,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1970","line":185,"column":26,"nodeType":"1971","messageId":"1972","endLine":185,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1977","line":209,"column":36,"nodeType":"1971","messageId":"1972","endLine":209,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1977","line":216,"column":26,"nodeType":"1971","messageId":"1972","endLine":216,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1977","line":221,"column":30,"nodeType":"1971","messageId":"1972","endLine":221,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1977","line":223,"column":30,"nodeType":"1971","messageId":"1972","endLine":223,"endColumn":32},{"ruleId":"2010","severity":1,"message":"2011","line":227,"column":38,"nodeType":"2012","messageId":"2013","endLine":227,"endColumn":40},{"ruleId":"1973","severity":1,"message":"2023","line":230,"column":15,"nodeType":"1960","messageId":"1975","endLine":230,"endColumn":24},{"ruleId":"2010","severity":1,"message":"2011","line":237,"column":28,"nodeType":"2012","messageId":"2013","endLine":237,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1977","line":248,"column":37,"nodeType":"1971","messageId":"1972","endLine":248,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1977","line":256,"column":39,"nodeType":"1971","messageId":"1972","endLine":256,"endColumn":41},{"ruleId":"2010","severity":1,"message":"2011","line":258,"column":38,"nodeType":"2012","messageId":"2013","endLine":258,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1970","line":259,"column":24,"nodeType":"1971","messageId":"1972","endLine":259,"endColumn":26},{"ruleId":"2010","severity":1,"message":"2011","line":294,"column":68,"nodeType":"2012","messageId":"2013","endLine":294,"endColumn":70},{"ruleId":"1973","severity":1,"message":"2023","line":297,"column":15,"nodeType":"1960","messageId":"1975","endLine":297,"endColumn":24},{"ruleId":"2010","severity":1,"message":"2011","line":304,"column":33,"nodeType":"2012","messageId":"2013","endLine":304,"endColumn":35},{"ruleId":"1973","severity":1,"message":"2024","line":382,"column":9,"nodeType":"1960","messageId":"1975","endLine":382,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2025","line":390,"column":13,"nodeType":"1960","messageId":"1975","endLine":390,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1977","line":400,"column":41,"nodeType":"1971","messageId":"1972","endLine":400,"endColumn":43},{"ruleId":"1973","severity":1,"message":"2026","line":402,"column":11,"nodeType":"1960","messageId":"1975","endLine":402,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1977","line":403,"column":41,"nodeType":"1971","messageId":"1972","endLine":403,"endColumn":43},{"ruleId":"2010","severity":1,"message":"2011","line":409,"column":28,"nodeType":"2012","messageId":"2013","endLine":409,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1970","line":410,"column":22,"nodeType":"1971","messageId":"1972","endLine":410,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":410,"column":44,"nodeType":"1971","messageId":"1972","endLine":410,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":422,"column":20,"nodeType":"1971","messageId":"1972","endLine":422,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":423,"column":17,"nodeType":"1971","messageId":"1972","endLine":423,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1977","line":424,"column":31,"nodeType":"1971","messageId":"1972","endLine":424,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":449,"column":20,"nodeType":"1971","messageId":"1972","endLine":449,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":450,"column":17,"nodeType":"1971","messageId":"1972","endLine":450,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1970","line":451,"column":31,"nodeType":"1971","messageId":"1972","endLine":451,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2011","line":468,"column":25,"nodeType":"2012","messageId":"2013","endLine":468,"endColumn":27},{"ruleId":"1969","severity":1,"message":"1970","line":469,"column":22,"nodeType":"1971","messageId":"1972","endLine":469,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1977","line":474,"column":60,"nodeType":"1971","messageId":"1972","endLine":474,"endColumn":62},{"ruleId":"2010","severity":1,"message":"2011","line":475,"column":25,"nodeType":"2012","messageId":"2013","endLine":475,"endColumn":27},{"ruleId":"1973","severity":1,"message":"2027","line":481,"column":11,"nodeType":"1960","messageId":"1975","endLine":481,"endColumn":23},{"ruleId":"2010","severity":1,"message":"2011","line":484,"column":23,"nodeType":"2012","messageId":"2013","endLine":484,"endColumn":25},{"ruleId":"1969","severity":1,"message":"1977","line":485,"column":13,"nodeType":"1971","messageId":"1972","endLine":485,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":490,"column":43,"nodeType":"2012","messageId":"2013","endLine":490,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":503,"column":30,"nodeType":"1971","messageId":"1972","endLine":503,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":504,"column":24,"nodeType":"1971","messageId":"1972","endLine":504,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":510,"column":30,"nodeType":"1971","messageId":"1972","endLine":510,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":511,"column":24,"nodeType":"1971","messageId":"1972","endLine":511,"endColumn":26},{"ruleId":"1973","severity":1,"message":"2024","line":531,"column":9,"nodeType":"1960","messageId":"1975","endLine":531,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2028","line":542,"column":7,"nodeType":"1960","messageId":"1975","endLine":542,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2029","line":543,"column":7,"nodeType":"1960","messageId":"1975","endLine":543,"endColumn":21},{"ruleId":"1969","severity":1,"message":"1977","line":548,"column":25,"nodeType":"1971","messageId":"1972","endLine":548,"endColumn":27},{"ruleId":"1969","severity":1,"message":"1977","line":555,"column":41,"nodeType":"1971","messageId":"1972","endLine":555,"endColumn":43},{"ruleId":"1973","severity":1,"message":"2026","line":557,"column":11,"nodeType":"1960","messageId":"1975","endLine":557,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1977","line":558,"column":41,"nodeType":"1971","messageId":"1972","endLine":558,"endColumn":43},{"ruleId":"2010","severity":1,"message":"2011","line":564,"column":28,"nodeType":"2012","messageId":"2013","endLine":564,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1970","line":565,"column":22,"nodeType":"1971","messageId":"1972","endLine":565,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":565,"column":44,"nodeType":"1971","messageId":"1972","endLine":565,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":577,"column":20,"nodeType":"1971","messageId":"1972","endLine":577,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":578,"column":17,"nodeType":"1971","messageId":"1972","endLine":578,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1977","line":579,"column":31,"nodeType":"1971","messageId":"1972","endLine":579,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2011","line":618,"column":25,"nodeType":"2012","messageId":"2013","endLine":618,"endColumn":27},{"ruleId":"1969","severity":1,"message":"1970","line":619,"column":22,"nodeType":"1971","messageId":"1972","endLine":619,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1977","line":624,"column":60,"nodeType":"1971","messageId":"1972","endLine":624,"endColumn":62},{"ruleId":"2010","severity":1,"message":"2011","line":625,"column":25,"nodeType":"2012","messageId":"2013","endLine":625,"endColumn":27},{"ruleId":"1973","severity":1,"message":"2027","line":629,"column":11,"nodeType":"1960","messageId":"1975","endLine":629,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2030","line":630,"column":11,"nodeType":"1960","messageId":"1975","endLine":630,"endColumn":21},{"ruleId":"2010","severity":1,"message":"2011","line":632,"column":23,"nodeType":"2012","messageId":"2013","endLine":632,"endColumn":25},{"ruleId":"1969","severity":1,"message":"1977","line":633,"column":13,"nodeType":"1971","messageId":"1972","endLine":633,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":638,"column":43,"nodeType":"2012","messageId":"2013","endLine":638,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":650,"column":30,"nodeType":"1971","messageId":"1972","endLine":650,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":651,"column":24,"nodeType":"1971","messageId":"1972","endLine":651,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":710,"column":15,"nodeType":"1971","messageId":"1972","endLine":710,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1977","line":720,"column":20,"nodeType":"1971","messageId":"1972","endLine":720,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":721,"column":20,"nodeType":"1971","messageId":"1972","endLine":721,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":724,"column":20,"nodeType":"1971","messageId":"1972","endLine":724,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":739,"column":20,"nodeType":"1971","messageId":"1972","endLine":739,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":740,"column":20,"nodeType":"1971","messageId":"1972","endLine":740,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":743,"column":20,"nodeType":"1971","messageId":"1972","endLine":743,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":761,"column":15,"nodeType":"1971","messageId":"1972","endLine":761,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1970","line":762,"column":26,"nodeType":"1971","messageId":"1972","endLine":762,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1977","line":823,"column":20,"nodeType":"1971","messageId":"1972","endLine":823,"endColumn":22},{"ruleId":"1973","severity":1,"message":"2031","line":875,"column":7,"nodeType":"1960","messageId":"1975","endLine":875,"endColumn":11},{"ruleId":"1973","severity":1,"message":"2032","line":877,"column":7,"nodeType":"1960","messageId":"1975","endLine":877,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2033","line":878,"column":7,"nodeType":"1960","messageId":"1975","endLine":878,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2034","line":879,"column":7,"nodeType":"1960","messageId":"1975","endLine":879,"endColumn":12},{"ruleId":"1973","severity":1,"message":"2028","line":887,"column":7,"nodeType":"1960","messageId":"1975","endLine":887,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2035","line":888,"column":7,"nodeType":"1960","messageId":"1975","endLine":888,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2025","line":889,"column":7,"nodeType":"1960","messageId":"1975","endLine":889,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2036","line":901,"column":9,"nodeType":"1960","messageId":"1975","endLine":901,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2037","line":902,"column":9,"nodeType":"1960","messageId":"1975","endLine":902,"endColumn":13},{"ruleId":"2010","severity":1,"message":"2011","line":904,"column":52,"nodeType":"2012","messageId":"2013","endLine":904,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":905,"column":13,"nodeType":"1971","messageId":"1972","endLine":905,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":906,"column":56,"nodeType":"2012","messageId":"2013","endLine":906,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1970","line":910,"column":13,"nodeType":"1971","messageId":"1972","endLine":910,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":911,"column":52,"nodeType":"2012","messageId":"2013","endLine":911,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":915,"column":13,"nodeType":"1971","messageId":"1972","endLine":915,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":916,"column":51,"nodeType":"2012","messageId":"2013","endLine":916,"endColumn":53},{"ruleId":"2010","severity":1,"message":"2011","line":922,"column":24,"nodeType":"2012","messageId":"2013","endLine":922,"endColumn":26},{"ruleId":"2010","severity":1,"message":"2011","line":923,"column":30,"nodeType":"2012","messageId":"2013","endLine":923,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":924,"column":15,"nodeType":"1971","messageId":"1972","endLine":924,"endColumn":17},{"ruleId":"1981","severity":1,"message":"1982","line":937,"column":11,"nodeType":"1968","endLine":940,"endColumn":12},{"ruleId":"1966","severity":1,"message":"1967","line":941,"column":13,"nodeType":"1968","endLine":941,"endColumn":60},{"ruleId":"1966","severity":1,"message":"1967","line":942,"column":13,"nodeType":"1968","endLine":942,"endColumn":55},{"ruleId":"1981","severity":1,"message":"1982","line":946,"column":15,"nodeType":"1968","endLine":950,"endColumn":16},{"ruleId":"1966","severity":1,"message":"1967","line":951,"column":17,"nodeType":"1968","endLine":951,"endColumn":48},{"ruleId":"1981","severity":1,"message":"1982","line":958,"column":19,"nodeType":"1968","endLine":970,"endColumn":20},{"ruleId":"1966","severity":1,"message":"1967","line":971,"column":21,"nodeType":"1968","endLine":971,"endColumn":48},{"ruleId":"1969","severity":1,"message":"1977","line":980,"column":43,"nodeType":"1971","messageId":"1972","endLine":980,"endColumn":45},{"ruleId":"1981","severity":1,"message":"1982","line":982,"column":19,"nodeType":"1968","endLine":992,"endColumn":20},{"ruleId":"1966","severity":1,"message":"1967","line":993,"column":21,"nodeType":"1968","endLine":993,"endColumn":48},{"ruleId":"1981","severity":1,"message":"1982","line":1005,"column":15,"nodeType":"1968","endLine":1009,"endColumn":16},{"ruleId":"1981","severity":1,"message":"1982","line":1055,"column":15,"nodeType":"1968","endLine":1063,"endColumn":16},{"ruleId":"1981","severity":1,"message":"1982","line":1066,"column":15,"nodeType":"1968","endLine":1072,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1977","line":1136,"column":44,"nodeType":"1971","messageId":"1972","endLine":1136,"endColumn":46},{"ruleId":"2010","severity":1,"message":"2038","line":1182,"column":50,"nodeType":"2012","messageId":"2039","endLine":1182,"endColumn":52},{"ruleId":"1969","severity":1,"message":"1970","line":1184,"column":40,"nodeType":"1971","messageId":"1972","endLine":1184,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1214,"column":43,"nodeType":"1971","messageId":"1972","endLine":1214,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":1243,"column":33,"nodeType":"1971","messageId":"1972","endLine":1243,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1249,"column":41,"nodeType":"1971","messageId":"1972","endLine":1249,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1274,"column":40,"nodeType":"1971","messageId":"1972","endLine":1274,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1312,"column":45,"nodeType":"1971","messageId":"1972","endLine":1312,"endColumn":47},{"ruleId":"1969","severity":1,"message":"1970","line":1318,"column":55,"nodeType":"1971","messageId":"1972","endLine":1318,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1977","line":1337,"column":33,"nodeType":"1971","messageId":"1972","endLine":1337,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1343,"column":41,"nodeType":"1971","messageId":"1972","endLine":1343,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1368,"column":40,"nodeType":"1971","messageId":"1972","endLine":1368,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1392,"column":67,"nodeType":"1971","messageId":"1972","endLine":1392,"endColumn":69},{"ruleId":"1969","severity":1,"message":"1970","line":1405,"column":40,"nodeType":"1971","messageId":"1972","endLine":1405,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1435,"column":43,"nodeType":"1971","messageId":"1972","endLine":1435,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":1464,"column":33,"nodeType":"1971","messageId":"1972","endLine":1464,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1470,"column":41,"nodeType":"1971","messageId":"1972","endLine":1470,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1537,"column":40,"nodeType":"1971","messageId":"1972","endLine":1537,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1564,"column":43,"nodeType":"1971","messageId":"1972","endLine":1564,"endColumn":45},{"ruleId":"1966","severity":1,"message":"1967","line":1600,"column":41,"nodeType":"1968","endLine":1600,"endColumn":63},{"ruleId":"1969","severity":1,"message":"1977","line":1612,"column":33,"nodeType":"1971","messageId":"1972","endLine":1612,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1618,"column":41,"nodeType":"1971","messageId":"1972","endLine":1618,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1643,"column":40,"nodeType":"1971","messageId":"1972","endLine":1643,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1680,"column":43,"nodeType":"1971","messageId":"1972","endLine":1680,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":1690,"column":60,"nodeType":"1971","messageId":"1972","endLine":1690,"endColumn":62},{"ruleId":"1966","severity":1,"message":"1967","line":1719,"column":41,"nodeType":"1968","endLine":1719,"endColumn":60},{"ruleId":"1969","severity":1,"message":"1977","line":1730,"column":33,"nodeType":"1971","messageId":"1972","endLine":1730,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1736,"column":41,"nodeType":"1971","messageId":"1972","endLine":1736,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1761,"column":40,"nodeType":"1971","messageId":"1972","endLine":1761,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1791,"column":43,"nodeType":"1971","messageId":"1972","endLine":1791,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":1820,"column":33,"nodeType":"1971","messageId":"1972","endLine":1820,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":1826,"column":41,"nodeType":"1971","messageId":"1972","endLine":1826,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":1851,"column":40,"nodeType":"1971","messageId":"1972","endLine":1851,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":1894,"column":43,"nodeType":"1971","messageId":"1972","endLine":1894,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1977","line":1909,"column":47,"nodeType":"1971","messageId":"1972","endLine":1909,"endColumn":49},{"ruleId":"1969","severity":1,"message":"1977","line":1925,"column":58,"nodeType":"1971","messageId":"1972","endLine":1925,"endColumn":60},{"ruleId":"1969","severity":1,"message":"1970","line":1927,"column":67,"nodeType":"1971","messageId":"1972","endLine":1927,"endColumn":69},{"ruleId":"1969","severity":1,"message":"1977","line":1928,"column":64,"nodeType":"1971","messageId":"1972","endLine":1928,"endColumn":66},{"ruleId":"1969","severity":1,"message":"1970","line":1929,"column":73,"nodeType":"1971","messageId":"1972","endLine":1929,"endColumn":75},{"ruleId":"1969","severity":1,"message":"1970","line":2015,"column":64,"nodeType":"1971","messageId":"1972","endLine":2015,"endColumn":66},{"ruleId":"1981","severity":1,"message":"1982","line":2070,"column":25,"nodeType":"1968","endLine":2075,"endColumn":26},{"ruleId":"1981","severity":1,"message":"1982","line":2078,"column":25,"nodeType":"1968","endLine":2084,"endColumn":26},{"ruleId":"1981","severity":1,"message":"1982","line":2104,"column":15,"nodeType":"1968","endLine":2107,"endColumn":16},{"ruleId":"2010","severity":1,"message":"2038","line":2121,"column":47,"nodeType":"2012","messageId":"2039","endLine":2121,"endColumn":49},{"ruleId":"1969","severity":1,"message":"1977","line":2122,"column":27,"nodeType":"1971","messageId":"1972","endLine":2122,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1977","line":2124,"column":33,"nodeType":"1971","messageId":"1972","endLine":2124,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":2125,"column":35,"nodeType":"1971","messageId":"1972","endLine":2125,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":2126,"column":36,"nodeType":"1971","messageId":"1972","endLine":2126,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":2193,"column":43,"nodeType":"1971","messageId":"1972","endLine":2193,"endColumn":45},{"ruleId":"2010","severity":1,"message":"2038","line":2193,"column":85,"nodeType":"2012","messageId":"2039","endLine":2193,"endColumn":87},{"ruleId":"1969","severity":1,"message":"1977","line":2194,"column":29,"nodeType":"1971","messageId":"1972","endLine":2194,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":2196,"column":37,"nodeType":"1971","messageId":"1972","endLine":2196,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":2197,"column":38,"nodeType":"1971","messageId":"1972","endLine":2197,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1977","line":2198,"column":35,"nodeType":"1971","messageId":"1972","endLine":2198,"endColumn":37},{"ruleId":"1966","severity":1,"message":"1967","line":2201,"column":29,"nodeType":"1968","endLine":2208,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1977","line":2207,"column":44,"nodeType":"1971","messageId":"1972","endLine":2207,"endColumn":46},{"ruleId":"1966","severity":1,"message":"1967","line":2212,"column":32,"nodeType":"1968","endLine":2219,"endColumn":25},{"ruleId":"2010","severity":1,"message":"2038","line":2221,"column":53,"nodeType":"2012","messageId":"2039","endLine":2221,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":2222,"column":29,"nodeType":"1971","messageId":"1972","endLine":2222,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":2223,"column":39,"nodeType":"1971","messageId":"1972","endLine":2223,"endColumn":41},{"ruleId":"1966","severity":1,"message":"1967","line":2225,"column":29,"nodeType":"1968","endLine":2232,"endColumn":31},{"ruleId":"2010","severity":1,"message":"2038","line":2272,"column":49,"nodeType":"2012","messageId":"2039","endLine":2272,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1977","line":2273,"column":29,"nodeType":"1971","messageId":"1972","endLine":2273,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1977","line":2275,"column":35,"nodeType":"1971","messageId":"1972","endLine":2275,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":2276,"column":37,"nodeType":"1971","messageId":"1972","endLine":2276,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":2277,"column":38,"nodeType":"1971","messageId":"1972","endLine":2277,"endColumn":40},{"ruleId":"2010","severity":1,"message":"2038","line":2297,"column":49,"nodeType":"2012","messageId":"2039","endLine":2297,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1977","line":2298,"column":29,"nodeType":"1971","messageId":"1972","endLine":2298,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":2300,"column":37,"nodeType":"1971","messageId":"1972","endLine":2300,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":2301,"column":38,"nodeType":"1971","messageId":"1972","endLine":2301,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1977","line":2302,"column":35,"nodeType":"1971","messageId":"1972","endLine":2302,"endColumn":37},{"ruleId":"1966","severity":1,"message":"1967","line":2305,"column":29,"nodeType":"1968","endLine":2312,"endColumn":31},{"ruleId":"2010","severity":1,"message":"2038","line":2318,"column":51,"nodeType":"2012","messageId":"2039","endLine":2318,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1977","line":2319,"column":29,"nodeType":"1971","messageId":"1972","endLine":2319,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":2320,"column":39,"nodeType":"1971","messageId":"1972","endLine":2320,"endColumn":41},{"ruleId":"1966","severity":1,"message":"1967","line":2322,"column":29,"nodeType":"1968","endLine":2329,"endColumn":31},{"ruleId":"2010","severity":1,"message":"2038","line":2334,"column":56,"nodeType":"2012","messageId":"2039","endLine":2334,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1977","line":2335,"column":29,"nodeType":"1971","messageId":"1972","endLine":2335,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1977","line":2336,"column":40,"nodeType":"1971","messageId":"1972","endLine":2336,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1970","line":2344,"column":44,"nodeType":"1971","messageId":"1972","endLine":2344,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1977","line":2344,"column":63,"nodeType":"1971","messageId":"1972","endLine":2344,"endColumn":65},{"ruleId":"1969","severity":1,"message":"1970","line":2346,"column":47,"nodeType":"1971","messageId":"1972","endLine":2346,"endColumn":49},{"ruleId":"1969","severity":1,"message":"1977","line":2346,"column":67,"nodeType":"1971","messageId":"1972","endLine":2346,"endColumn":69},{"ruleId":"1969","severity":1,"message":"1970","line":2362,"column":22,"nodeType":"1971","messageId":"1972","endLine":2362,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":2369,"column":27,"nodeType":"1971","messageId":"1972","endLine":2369,"endColumn":29},{"ruleId":"1996","severity":1,"message":"2040","line":2415,"column":3,"nodeType":"1998","messageId":"1972","endLine":2415,"endColumn":16},{"ruleId":"1958","severity":1,"message":"2041","line":36,"column":5,"nodeType":"1998","endLine":36,"endColumn":7},{"ruleId":"1958","severity":1,"message":"2042","line":36,"column":5,"nodeType":"1998","endLine":36,"endColumn":7,"suggestions":"2043"},{"ruleId":"1969","severity":1,"message":"1970","line":83,"column":53,"nodeType":"1971","messageId":"1972","endLine":83,"endColumn":55},{"ruleId":"1966","severity":1,"message":"1967","line":87,"column":21,"nodeType":"1968","endLine":87,"endColumn":63},{"ruleId":"1981","severity":1,"message":"1982","line":90,"column":19,"nodeType":"1968","endLine":90,"endColumn":114},{"ruleId":"1985","severity":1,"message":"2044","line":95,"column":41,"nodeType":"1987","messageId":"1988","endLine":95,"endColumn":43},{"ruleId":"1985","severity":1,"message":"2044","line":96,"column":30,"nodeType":"1987","messageId":"1988","endLine":96,"endColumn":32},{"ruleId":"2014","severity":1,"message":"2015","line":104,"column":33,"nodeType":"1968","endLine":104,"endColumn":98},{"ruleId":"1969","severity":1,"message":"1970","line":92,"column":32,"nodeType":"1971","messageId":"1972","endLine":92,"endColumn":34},{"ruleId":"1996","severity":1,"message":"1997","line":101,"column":7,"nodeType":"1998","messageId":"1972","endLine":101,"endColumn":14},{"ruleId":"1996","severity":1,"message":"1997","line":115,"column":7,"nodeType":"1998","messageId":"1972","endLine":115,"endColumn":14},{"ruleId":"1969","severity":1,"message":"1977","line":133,"column":33,"nodeType":"1971","messageId":"1972","endLine":133,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1977","line":150,"column":34,"nodeType":"1971","messageId":"1972","endLine":150,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1977","line":156,"column":19,"nodeType":"1971","messageId":"1972","endLine":156,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2045","line":203,"column":25,"nodeType":"1960","messageId":"1975","endLine":203,"endColumn":33},{"ruleId":"1973","severity":1,"message":"2046","line":203,"column":35,"nodeType":"1960","messageId":"1975","endLine":203,"endColumn":42},{"ruleId":"1973","severity":1,"message":"2047","line":203,"column":73,"nodeType":"1960","messageId":"1975","endLine":203,"endColumn":81},{"ruleId":"1981","severity":1,"message":"1982","line":235,"column":80,"nodeType":"1968","endLine":238,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1977","line":240,"column":39,"nodeType":"1971","messageId":"1972","endLine":240,"endColumn":41},{"ruleId":"1981","severity":1,"message":"1982","line":241,"column":23,"nodeType":"1968","endLine":244,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":277,"column":22,"nodeType":"1971","messageId":"1972","endLine":277,"endColumn":24},{"ruleId":"1973","severity":1,"message":"1999","line":8,"column":3,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":9,"column":3,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2001","line":10,"column":3,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":11,"column":3,"nodeType":"1960","messageId":"1975","endLine":11,"endColumn":9},{"ruleId":"1973","severity":1,"message":"2004","line":24,"column":8,"nodeType":"1960","messageId":"1975","endLine":24,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2005","line":25,"column":8,"nodeType":"1960","messageId":"1975","endLine":25,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2006","line":26,"column":8,"nodeType":"1960","messageId":"1975","endLine":26,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2007","line":27,"column":8,"nodeType":"1960","messageId":"1975","endLine":27,"endColumn":11},{"ruleId":"1973","severity":1,"message":"2008","line":719,"column":7,"nodeType":"1960","messageId":"1975","endLine":719,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2009","line":720,"column":7,"nodeType":"1960","messageId":"1975","endLine":720,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2019","line":22,"column":10,"nodeType":"1960","messageId":"1975","endLine":22,"endColumn":28},{"ruleId":"1973","severity":1,"message":"2048","line":29,"column":8,"nodeType":"1960","messageId":"1975","endLine":29,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2049","line":31,"column":5,"nodeType":"1960","messageId":"1975","endLine":31,"endColumn":11},{"ruleId":"1996","severity":1,"message":"2020","line":58,"column":7,"nodeType":"1998","messageId":"1972","endLine":58,"endColumn":15},{"ruleId":"1996","severity":1,"message":"2021","line":59,"column":7,"nodeType":"1998","messageId":"1972","endLine":59,"endColumn":17},{"ruleId":"1973","severity":1,"message":"2022","line":77,"column":11,"nodeType":"1960","messageId":"1975","endLine":77,"endColumn":17},{"ruleId":"1973","severity":1,"message":"2023","line":210,"column":15,"nodeType":"1960","messageId":"1975","endLine":210,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2023","line":278,"column":15,"nodeType":"1960","messageId":"1975","endLine":278,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2024","line":363,"column":9,"nodeType":"1960","messageId":"1975","endLine":363,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2026","line":383,"column":11,"nodeType":"1960","messageId":"1975","endLine":383,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2024","line":485,"column":9,"nodeType":"1960","messageId":"1975","endLine":485,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2028","line":496,"column":7,"nodeType":"1960","messageId":"1975","endLine":496,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2029","line":497,"column":7,"nodeType":"1960","messageId":"1975","endLine":497,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2026","line":511,"column":11,"nodeType":"1960","messageId":"1975","endLine":511,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2030","line":565,"column":11,"nodeType":"1960","messageId":"1975","endLine":565,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2031","line":809,"column":7,"nodeType":"1960","messageId":"1975","endLine":809,"endColumn":11},{"ruleId":"1973","severity":1,"message":"2032","line":811,"column":7,"nodeType":"1960","messageId":"1975","endLine":811,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2033","line":812,"column":7,"nodeType":"1960","messageId":"1975","endLine":812,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2034","line":813,"column":7,"nodeType":"1960","messageId":"1975","endLine":813,"endColumn":12},{"ruleId":"1973","severity":1,"message":"2050","line":814,"column":7,"nodeType":"1960","messageId":"1975","endLine":814,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2029","line":819,"column":7,"nodeType":"1960","messageId":"1975","endLine":819,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2028","line":820,"column":7,"nodeType":"1960","messageId":"1975","endLine":820,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2035","line":821,"column":7,"nodeType":"1960","messageId":"1975","endLine":821,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2025","line":822,"column":7,"nodeType":"1960","messageId":"1975","endLine":822,"endColumn":25},{"ruleId":"1973","severity":1,"message":"2036","line":834,"column":9,"nodeType":"1960","messageId":"1975","endLine":834,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2037","line":835,"column":9,"nodeType":"1960","messageId":"1975","endLine":835,"endColumn":13},{"ruleId":"1996","severity":1,"message":"1997","line":90,"column":7,"nodeType":"1998","messageId":"1972","endLine":90,"endColumn":14},{"ruleId":"1996","severity":1,"message":"1997","line":104,"column":7,"nodeType":"1998","messageId":"1972","endLine":104,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2036","line":131,"column":9,"nodeType":"1960","messageId":"1975","endLine":131,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2037","line":132,"column":9,"nodeType":"1960","messageId":"1975","endLine":132,"endColumn":13},{"ruleId":"2010","severity":1,"message":"2011","line":134,"column":52,"nodeType":"2012","messageId":"2013","endLine":134,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":135,"column":13,"nodeType":"1971","messageId":"1972","endLine":135,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":136,"column":56,"nodeType":"2012","messageId":"2013","endLine":136,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1970","line":140,"column":13,"nodeType":"1971","messageId":"1972","endLine":140,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":141,"column":52,"nodeType":"2012","messageId":"2013","endLine":141,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":145,"column":13,"nodeType":"1971","messageId":"1972","endLine":145,"endColumn":15},{"ruleId":"2010","severity":1,"message":"2011","line":146,"column":51,"nodeType":"2012","messageId":"2013","endLine":146,"endColumn":53},{"ruleId":"2010","severity":1,"message":"2011","line":152,"column":24,"nodeType":"2012","messageId":"2013","endLine":152,"endColumn":26},{"ruleId":"2010","severity":1,"message":"2011","line":153,"column":30,"nodeType":"2012","messageId":"2013","endLine":153,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":154,"column":15,"nodeType":"1971","messageId":"1972","endLine":154,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1970","line":160,"column":36,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":160,"column":77,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":79},{"ruleId":"1981","severity":1,"message":"1982","line":174,"column":84,"nodeType":"1968","endLine":174,"endColumn":198},{"ruleId":"1966","severity":1,"message":"1967","line":224,"column":37,"nodeType":"1968","endLine":224,"endColumn":167},{"ruleId":"2010","severity":1,"message":"2038","line":251,"column":57,"nodeType":"2012","messageId":"2039","endLine":251,"endColumn":59},{"ruleId":"1969","severity":1,"message":"1970","line":252,"column":35,"nodeType":"1971","messageId":"1972","endLine":252,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":314,"column":35,"nodeType":"1971","messageId":"1972","endLine":314,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":365,"column":35,"nodeType":"1971","messageId":"1972","endLine":365,"endColumn":37},{"ruleId":"1973","severity":1,"message":"2051","line":226,"column":13,"nodeType":"1960","messageId":"1975","endLine":226,"endColumn":16},{"ruleId":"2010","severity":1,"message":"2011","line":320,"column":76,"nodeType":"2012","messageId":"2013","endLine":320,"endColumn":78},{"ruleId":"1973","severity":1,"message":"2052","line":386,"column":112,"nodeType":"1960","messageId":"1975","endLine":386,"endColumn":127},{"ruleId":"1969","severity":1,"message":"1970","line":389,"column":53,"nodeType":"1971","messageId":"1972","endLine":389,"endColumn":55},{"ruleId":"1985","severity":1,"message":"2044","line":452,"column":54,"nodeType":"1987","messageId":"1988","endLine":452,"endColumn":56},{"ruleId":"1985","severity":1,"message":"2044","line":453,"column":43,"nodeType":"1987","messageId":"1988","endLine":453,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":482,"column":126,"nodeType":"1971","messageId":"1972","endLine":482,"endColumn":128},{"ruleId":"1985","severity":1,"message":"2044","line":486,"column":84,"nodeType":"1987","messageId":"1988","endLine":486,"endColumn":86},{"ruleId":"1985","severity":1,"message":"2044","line":486,"column":98,"nodeType":"1987","messageId":"1988","endLine":486,"endColumn":100},{"ruleId":"1981","severity":1,"message":"1982","line":525,"column":37,"nodeType":"1968","endLine":539,"endColumn":38},{"ruleId":"1981","severity":1,"message":"1982","line":548,"column":39,"nodeType":"1968","endLine":548,"endColumn":194},{"ruleId":"1981","severity":1,"message":"1982","line":551,"column":39,"nodeType":"1968","endLine":551,"endColumn":192},{"ruleId":"1973","severity":1,"message":"2053","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2054","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2055","line":10,"column":10,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2056","line":12,"column":7,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2057","line":27,"column":11,"nodeType":"1960","messageId":"1975","endLine":27,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2058","line":50,"column":11,"nodeType":"1960","messageId":"1975","endLine":50,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1977","line":132,"column":57,"nodeType":"1971","messageId":"1972","endLine":132,"endColumn":59},{"ruleId":"1969","severity":1,"message":"1970","line":133,"column":79,"nodeType":"1971","messageId":"1972","endLine":133,"endColumn":81},{"ruleId":"1969","severity":1,"message":"1970","line":200,"column":94,"nodeType":"1971","messageId":"1972","endLine":200,"endColumn":96},{"ruleId":"1969","severity":1,"message":"1977","line":200,"column":155,"nodeType":"1971","messageId":"1972","endLine":200,"endColumn":157},{"ruleId":"1973","severity":1,"message":"2059","line":31,"column":7,"nodeType":"1960","messageId":"1975","endLine":31,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2060","line":33,"column":25,"nodeType":"1960","messageId":"1975","endLine":33,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2061","line":36,"column":42,"nodeType":"1960","messageId":"1975","endLine":36,"endColumn":60},{"ruleId":"1985","severity":1,"message":"2044","line":88,"column":45,"nodeType":"1987","messageId":"1988","endLine":88,"endColumn":47},{"ruleId":"1985","severity":1,"message":"2044","line":89,"column":29,"nodeType":"1987","messageId":"1988","endLine":89,"endColumn":31},{"ruleId":"1973","severity":1,"message":"2002","line":17,"column":3,"nodeType":"1960","messageId":"1975","endLine":17,"endColumn":9},{"ruleId":"2010","severity":1,"message":"2011","line":284,"column":76,"nodeType":"2012","messageId":"2013","endLine":284,"endColumn":78},{"ruleId":"1973","severity":1,"message":"2062","line":333,"column":13,"nodeType":"1960","messageId":"1975","endLine":333,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2063","line":346,"column":76,"nodeType":"1960","messageId":"1975","endLine":346,"endColumn":95},{"ruleId":"1985","severity":1,"message":"2044","line":399,"column":54,"nodeType":"1987","messageId":"1988","endLine":399,"endColumn":56},{"ruleId":"1985","severity":1,"message":"2044","line":400,"column":43,"nodeType":"1987","messageId":"1988","endLine":400,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":431,"column":126,"nodeType":"1971","messageId":"1972","endLine":431,"endColumn":128},{"ruleId":"1981","severity":1,"message":"1982","line":473,"column":37,"nodeType":"1968","endLine":487,"endColumn":38},{"ruleId":"1981","severity":1,"message":"1982","line":496,"column":39,"nodeType":"1968","endLine":496,"endColumn":194},{"ruleId":"1981","severity":1,"message":"1982","line":499,"column":39,"nodeType":"1968","endLine":499,"endColumn":192},{"ruleId":"1973","severity":1,"message":"2054","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":15},{"ruleId":"1969","severity":1,"message":"1977","line":39,"column":35,"nodeType":"1971","messageId":"1972","endLine":39,"endColumn":37},{"ruleId":"2010","severity":1,"message":"2011","line":43,"column":52,"nodeType":"2012","messageId":"2013","endLine":43,"endColumn":54},{"ruleId":"1973","severity":1,"message":"2064","line":44,"column":40,"nodeType":"1960","messageId":"1975","endLine":44,"endColumn":63},{"ruleId":"1969","severity":1,"message":"1977","line":66,"column":43,"nodeType":"1971","messageId":"1972","endLine":66,"endColumn":45},{"ruleId":"1973","severity":1,"message":"2065","line":76,"column":13,"nodeType":"1960","messageId":"1975","endLine":76,"endColumn":28},{"ruleId":"1973","severity":1,"message":"2066","line":9,"column":8,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":14},{"ruleId":"2010","severity":1,"message":"2011","line":33,"column":33,"nodeType":"2012","messageId":"2013","endLine":33,"endColumn":35},{"ruleId":"2010","severity":1,"message":"2017","line":34,"column":30,"nodeType":"2012","messageId":"2013","endLine":34,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":35,"column":21,"nodeType":"1971","messageId":"1972","endLine":35,"endColumn":23},{"ruleId":"2010","severity":1,"message":"2011","line":45,"column":33,"nodeType":"2012","messageId":"2013","endLine":45,"endColumn":35},{"ruleId":"2010","severity":1,"message":"2011","line":87,"column":23,"nodeType":"2012","messageId":"2013","endLine":87,"endColumn":25},{"ruleId":"2010","severity":1,"message":"2011","line":102,"column":23,"nodeType":"2012","messageId":"2013","endLine":102,"endColumn":25},{"ruleId":"2010","severity":1,"message":"2011","line":123,"column":21,"nodeType":"2012","messageId":"2013","endLine":123,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2067","line":156,"column":49,"nodeType":"1960","messageId":"1975","endLine":156,"endColumn":67},{"ruleId":"2010","severity":1,"message":"2011","line":180,"column":55,"nodeType":"2012","messageId":"2013","endLine":180,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1970","line":225,"column":37,"nodeType":"1971","messageId":"1972","endLine":225,"endColumn":39},{"ruleId":"2068","severity":1,"message":"2069","line":226,"column":29,"nodeType":"1968","endLine":226,"endColumn":32},{"ruleId":"1981","severity":1,"message":"1982","line":226,"column":29,"nodeType":"1968","endLine":226,"endColumn":32},{"ruleId":"2068","severity":1,"message":"2069","line":234,"column":29,"nodeType":"1968","endLine":234,"endColumn":32},{"ruleId":"1981","severity":1,"message":"1982","line":234,"column":29,"nodeType":"1968","endLine":234,"endColumn":32},{"ruleId":"2068","severity":1,"message":"2069","line":243,"column":31,"nodeType":"1968","endLine":243,"endColumn":34},{"ruleId":"1981","severity":1,"message":"1982","line":243,"column":31,"nodeType":"1968","endLine":243,"endColumn":34},{"ruleId":"2068","severity":1,"message":"2069","line":253,"column":31,"nodeType":"1968","endLine":253,"endColumn":34},{"ruleId":"1981","severity":1,"message":"1982","line":253,"column":31,"nodeType":"1968","endLine":253,"endColumn":34},{"ruleId":"2068","severity":1,"message":"2069","line":263,"column":31,"nodeType":"1968","endLine":263,"endColumn":34},{"ruleId":"1981","severity":1,"message":"1982","line":263,"column":31,"nodeType":"1968","endLine":263,"endColumn":34},{"ruleId":"2068","severity":1,"message":"2069","line":272,"column":29,"nodeType":"1968","endLine":272,"endColumn":32},{"ruleId":"1981","severity":1,"message":"1982","line":272,"column":29,"nodeType":"1968","endLine":272,"endColumn":32},{"ruleId":"1973","severity":1,"message":"1999","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":15},{"ruleId":"1969","severity":1,"message":"1977","line":67,"column":40,"nodeType":"1971","messageId":"1972","endLine":67,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":76,"column":37,"nodeType":"1971","messageId":"1972","endLine":76,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1977","line":83,"column":26,"nodeType":"1971","messageId":"1972","endLine":83,"endColumn":28},{"ruleId":"2010","severity":1,"message":"2011","line":84,"column":42,"nodeType":"2012","messageId":"2013","endLine":84,"endColumn":44},{"ruleId":"1969","severity":1,"message":"1970","line":85,"column":27,"nodeType":"1971","messageId":"1972","endLine":85,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1977","line":93,"column":43,"nodeType":"1971","messageId":"1972","endLine":93,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":135,"column":15,"nodeType":"1971","messageId":"1972","endLine":135,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1970","line":135,"column":48,"nodeType":"1971","messageId":"1972","endLine":135,"endColumn":50},{"ruleId":"1969","severity":1,"message":"1970","line":141,"column":22,"nodeType":"1971","messageId":"1972","endLine":141,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":147,"column":22,"nodeType":"1971","messageId":"1972","endLine":147,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":147,"column":54,"nodeType":"1971","messageId":"1972","endLine":147,"endColumn":56},{"ruleId":"1969","severity":1,"message":"1970","line":153,"column":22,"nodeType":"1971","messageId":"1972","endLine":153,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":159,"column":22,"nodeType":"1971","messageId":"1972","endLine":159,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":159,"column":53,"nodeType":"1971","messageId":"1972","endLine":159,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":165,"column":22,"nodeType":"1971","messageId":"1972","endLine":165,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":165,"column":57,"nodeType":"1971","messageId":"1972","endLine":165,"endColumn":59},{"ruleId":"1969","severity":1,"message":"1970","line":184,"column":30,"nodeType":"1971","messageId":"1972","endLine":184,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":196,"column":36,"nodeType":"1971","messageId":"1972","endLine":196,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":208,"column":28,"nodeType":"1971","messageId":"1972","endLine":208,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1970","line":214,"column":39,"nodeType":"1971","messageId":"1972","endLine":214,"endColumn":41},{"ruleId":"1973","severity":1,"message":"2008","line":291,"column":7,"nodeType":"1960","messageId":"1975","endLine":291,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2009","line":292,"column":7,"nodeType":"1960","messageId":"1975","endLine":292,"endColumn":13},{"ruleId":"1966","severity":1,"message":"1967","line":343,"column":21,"nodeType":"1968","endLine":354,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1977","line":346,"column":46,"nodeType":"1971","messageId":"1972","endLine":346,"endColumn":48},{"ruleId":"1969","severity":1,"message":"1977","line":350,"column":49,"nodeType":"1971","messageId":"1972","endLine":350,"endColumn":51},{"ruleId":"1966","severity":1,"message":"1967","line":362,"column":23,"nodeType":"1968","endLine":362,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1977","line":367,"column":38,"nodeType":"1971","messageId":"1972","endLine":367,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1977","line":372,"column":30,"nodeType":"1971","messageId":"1972","endLine":372,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1977","line":375,"column":36,"nodeType":"1971","messageId":"1972","endLine":375,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":388,"column":37,"nodeType":"1971","messageId":"1972","endLine":388,"endColumn":39},{"ruleId":"2070","severity":1,"message":"2071","line":395,"column":53,"nodeType":"2072","messageId":"2073","endLine":395,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":402,"column":37,"nodeType":"1971","messageId":"1972","endLine":402,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":414,"column":37,"nodeType":"1971","messageId":"1972","endLine":414,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":426,"column":37,"nodeType":"1971","messageId":"1972","endLine":426,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":444,"column":35,"nodeType":"1971","messageId":"1972","endLine":444,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1977","line":475,"column":49,"nodeType":"1971","messageId":"1972","endLine":475,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1970","line":483,"column":52,"nodeType":"1971","messageId":"1972","endLine":483,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1977","line":502,"column":48,"nodeType":"1971","messageId":"1972","endLine":502,"endColumn":50},{"ruleId":"1969","severity":1,"message":"1970","line":510,"column":52,"nodeType":"1971","messageId":"1972","endLine":510,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1977","line":521,"column":44,"nodeType":"1971","messageId":"1972","endLine":521,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1977","line":531,"column":51,"nodeType":"1971","messageId":"1972","endLine":531,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1977","line":550,"column":52,"nodeType":"1971","messageId":"1972","endLine":550,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":557,"column":52,"nodeType":"1971","messageId":"1972","endLine":557,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1977","line":572,"column":51,"nodeType":"1971","messageId":"1972","endLine":572,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1977","line":594,"column":51,"nodeType":"1971","messageId":"1972","endLine":594,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1970","line":604,"column":52,"nodeType":"1971","messageId":"1972","endLine":604,"endColumn":54},{"ruleId":"1969","severity":1,"message":"1970","line":678,"column":35,"nodeType":"1971","messageId":"1972","endLine":678,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":1038,"column":35,"nodeType":"1971","messageId":"1972","endLine":1038,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":1144,"column":35,"nodeType":"1971","messageId":"1972","endLine":1144,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1977","line":1165,"column":48,"nodeType":"1971","messageId":"1972","endLine":1165,"endColumn":50},{"ruleId":"1969","severity":1,"message":"1970","line":1220,"column":22,"nodeType":"1971","messageId":"1972","endLine":1220,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":1227,"column":29,"nodeType":"1971","messageId":"1972","endLine":1227,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":1234,"column":25,"nodeType":"1971","messageId":"1972","endLine":1234,"endColumn":27},{"ruleId":"1973","severity":1,"message":"1999","line":4,"column":3,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2001","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":7,"column":3,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":9},{"ruleId":"1973","severity":1,"message":"2055","line":12,"column":10,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2074","line":12,"column":22,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2066","line":13,"column":8,"nodeType":"1960","messageId":"1975","endLine":13,"endColumn":14},{"ruleId":"1973","severity":1,"message":"1983","line":14,"column":10,"nodeType":"1960","messageId":"1975","endLine":14,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2004","line":16,"column":8,"nodeType":"1960","messageId":"1975","endLine":16,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2005","line":17,"column":8,"nodeType":"1960","messageId":"1975","endLine":17,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2006","line":18,"column":8,"nodeType":"1960","messageId":"1975","endLine":18,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2007","line":19,"column":8,"nodeType":"1960","messageId":"1975","endLine":19,"endColumn":11},{"ruleId":"1969","severity":1,"message":"1970","line":43,"column":24,"nodeType":"1971","messageId":"1972","endLine":43,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":68,"column":17,"nodeType":"1971","messageId":"1972","endLine":68,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1970","line":69,"column":27,"nodeType":"1971","messageId":"1972","endLine":69,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1977","line":91,"column":36,"nodeType":"1971","messageId":"1972","endLine":91,"endColumn":38},{"ruleId":"2010","severity":1,"message":"2011","line":92,"column":46,"nodeType":"2012","messageId":"2013","endLine":92,"endColumn":48},{"ruleId":"1969","severity":1,"message":"1970","line":98,"column":24,"nodeType":"1971","messageId":"1972","endLine":98,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":106,"column":43,"nodeType":"1971","messageId":"1972","endLine":106,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":111,"column":30,"nodeType":"1971","messageId":"1972","endLine":111,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1977","line":120,"column":28,"nodeType":"1971","messageId":"1972","endLine":120,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1977","line":153,"column":53,"nodeType":"1971","messageId":"1972","endLine":153,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":154,"column":25,"nodeType":"1971","messageId":"1972","endLine":154,"endColumn":27},{"ruleId":"1969","severity":1,"message":"1977","line":160,"column":34,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1977","line":171,"column":53,"nodeType":"1971","messageId":"1972","endLine":171,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":172,"column":25,"nodeType":"1971","messageId":"1972","endLine":172,"endColumn":27},{"ruleId":"1969","severity":1,"message":"1977","line":177,"column":34,"nodeType":"1971","messageId":"1972","endLine":177,"endColumn":36},{"ruleId":"1973","severity":1,"message":"2008","line":192,"column":16,"nodeType":"1960","messageId":"1975","endLine":192,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2009","line":192,"column":34,"nodeType":"1960","messageId":"1975","endLine":192,"endColumn":40},{"ruleId":"1981","severity":1,"message":"1982","line":203,"column":15,"nodeType":"1968","endLine":205,"endColumn":16},{"ruleId":"2075","severity":1,"message":"2076","line":210,"column":17,"nodeType":"2077","messageId":"2078","endLine":210,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1970","line":226,"column":39,"nodeType":"1971","messageId":"1972","endLine":226,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":248,"column":36,"nodeType":"1971","messageId":"1972","endLine":248,"endColumn":38},{"ruleId":"1981","severity":1,"message":"1982","line":251,"column":27,"nodeType":"1968","endLine":263,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1970","line":259,"column":66,"nodeType":"1971","messageId":"1972","endLine":259,"endColumn":68},{"ruleId":"1969","severity":1,"message":"1970","line":265,"column":68,"nodeType":"1971","messageId":"1972","endLine":265,"endColumn":70},{"ruleId":"1969","severity":1,"message":"1970","line":278,"column":22,"nodeType":"1971","messageId":"1972","endLine":278,"endColumn":24},{"ruleId":"1973","severity":1,"message":"1999","line":9,"column":3,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2001","line":10,"column":3,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":11,"column":3,"nodeType":"1960","messageId":"1975","endLine":11,"endColumn":9},{"ruleId":"1973","severity":1,"message":"1983","line":16,"column":10,"nodeType":"1960","messageId":"1975","endLine":16,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2004","line":20,"column":8,"nodeType":"1960","messageId":"1975","endLine":20,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2005","line":21,"column":8,"nodeType":"1960","messageId":"1975","endLine":21,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2006","line":22,"column":8,"nodeType":"1960","messageId":"1975","endLine":22,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2007","line":23,"column":8,"nodeType":"1960","messageId":"1975","endLine":23,"endColumn":11},{"ruleId":"1973","severity":1,"message":"2079","line":353,"column":13,"nodeType":"1960","messageId":"1975","endLine":353,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2008","line":478,"column":7,"nodeType":"1960","messageId":"1975","endLine":478,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2009","line":479,"column":7,"nodeType":"1960","messageId":"1975","endLine":479,"endColumn":13},{"ruleId":"1973","severity":1,"message":"2079","line":483,"column":7,"nodeType":"1960","messageId":"1975","endLine":483,"endColumn":12},{"ruleId":"1973","severity":1,"message":"2080","line":3,"column":31,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":38},{"ruleId":"1973","severity":1,"message":"2081","line":5,"column":8,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":17},{"ruleId":"1973","severity":1,"message":"1989","line":8,"column":10,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":55,"column":26,"nodeType":"1971","messageId":"1972","endLine":55,"endColumn":28},{"ruleId":"2010","severity":1,"message":"2011","line":57,"column":62,"nodeType":"2012","messageId":"2013","endLine":57,"endColumn":64},{"ruleId":"1973","severity":1,"message":"2082","line":71,"column":13,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2083","line":71,"column":20,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":33},{"ruleId":"1973","severity":1,"message":"2084","line":71,"column":35,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":49},{"ruleId":"1973","severity":1,"message":"2085","line":71,"column":51,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":61},{"ruleId":"1973","severity":1,"message":"2086","line":72,"column":7,"nodeType":"1960","messageId":"1975","endLine":72,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2059","line":73,"column":7,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2087","line":73,"column":38,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":53},{"ruleId":"1973","severity":1,"message":"2088","line":73,"column":55,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":66},{"ruleId":"1973","severity":1,"message":"2089","line":74,"column":13,"nodeType":"1960","messageId":"1975","endLine":74,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2090","line":79,"column":9,"nodeType":"1960","messageId":"1975","endLine":79,"endColumn":25},{"ruleId":"1985","severity":1,"message":"2044","line":100,"column":43,"nodeType":"1987","messageId":"1988","endLine":100,"endColumn":45},{"ruleId":"1985","severity":1,"message":"2044","line":100,"column":57,"nodeType":"1987","messageId":"1988","endLine":100,"endColumn":59},{"ruleId":"1973","severity":1,"message":"2080","line":3,"column":31,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":38},{"ruleId":"1973","severity":1,"message":"2081","line":5,"column":8,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":17},{"ruleId":"1973","severity":1,"message":"1989","line":8,"column":10,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":55,"column":26,"nodeType":"1971","messageId":"1972","endLine":55,"endColumn":28},{"ruleId":"2010","severity":1,"message":"2011","line":57,"column":62,"nodeType":"2012","messageId":"2013","endLine":57,"endColumn":64},{"ruleId":"1973","severity":1,"message":"2082","line":71,"column":13,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2083","line":71,"column":20,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":33},{"ruleId":"1973","severity":1,"message":"2084","line":71,"column":35,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":49},{"ruleId":"1973","severity":1,"message":"2085","line":71,"column":51,"nodeType":"1960","messageId":"1975","endLine":71,"endColumn":61},{"ruleId":"1973","severity":1,"message":"2086","line":72,"column":7,"nodeType":"1960","messageId":"1975","endLine":72,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2059","line":73,"column":7,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2087","line":73,"column":38,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":53},{"ruleId":"1973","severity":1,"message":"2088","line":73,"column":55,"nodeType":"1960","messageId":"1975","endLine":73,"endColumn":66},{"ruleId":"1973","severity":1,"message":"2089","line":74,"column":13,"nodeType":"1960","messageId":"1975","endLine":74,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2090","line":79,"column":9,"nodeType":"1960","messageId":"1975","endLine":79,"endColumn":25},{"ruleId":"1985","severity":1,"message":"2044","line":100,"column":43,"nodeType":"1987","messageId":"1988","endLine":100,"endColumn":45},{"ruleId":"1985","severity":1,"message":"2044","line":100,"column":57,"nodeType":"1987","messageId":"1988","endLine":100,"endColumn":59},{"ruleId":"1973","severity":1,"message":"2053","line":3,"column":31,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":36},{"ruleId":"1973","severity":1,"message":"2054","line":3,"column":38,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":50},{"ruleId":"1973","severity":1,"message":"2055","line":6,"column":10,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2056","line":8,"column":7,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2058","line":33,"column":11,"nodeType":"1960","messageId":"1975","endLine":33,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1970","line":100,"column":118,"nodeType":"1971","messageId":"1972","endLine":100,"endColumn":120},{"ruleId":"1973","severity":1,"message":"1999","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2001","line":7,"column":3,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":8,"column":3,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":9},{"ruleId":"1973","severity":1,"message":"2055","line":12,"column":10,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2074","line":12,"column":22,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2066","line":13,"column":8,"nodeType":"1960","messageId":"1975","endLine":13,"endColumn":14},{"ruleId":"1973","severity":1,"message":"1983","line":14,"column":10,"nodeType":"1960","messageId":"1975","endLine":14,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2091","line":16,"column":8,"nodeType":"1960","messageId":"1975","endLine":16,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1970","line":65,"column":17,"nodeType":"1971","messageId":"1972","endLine":65,"endColumn":19},{"ruleId":"1969","severity":1,"message":"1970","line":66,"column":27,"nodeType":"1971","messageId":"1972","endLine":66,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1977","line":90,"column":30,"nodeType":"1971","messageId":"1972","endLine":90,"endColumn":32},{"ruleId":"2010","severity":1,"message":"2011","line":94,"column":44,"nodeType":"2012","messageId":"2013","endLine":94,"endColumn":46},{"ruleId":"2092","severity":1,"message":"2093","line":140,"column":25,"nodeType":"2094","messageId":"2095","endLine":140,"endColumn":26,"suggestions":"2096"},{"ruleId":"1969","severity":1,"message":"1970","line":142,"column":57,"nodeType":"1971","messageId":"1972","endLine":142,"endColumn":59},{"ruleId":"1973","severity":1,"message":"2008","line":151,"column":16,"nodeType":"1960","messageId":"1975","endLine":151,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2009","line":151,"column":34,"nodeType":"1960","messageId":"1975","endLine":151,"endColumn":40},{"ruleId":"1973","severity":1,"message":"2079","line":151,"column":42,"nodeType":"1960","messageId":"1975","endLine":151,"endColumn":47},{"ruleId":"1973","severity":1,"message":"2097","line":151,"column":49,"nodeType":"1960","messageId":"1975","endLine":151,"endColumn":60},{"ruleId":"1973","severity":1,"message":"2098","line":151,"column":62,"nodeType":"1960","messageId":"1975","endLine":151,"endColumn":69},{"ruleId":"1973","severity":1,"message":"2099","line":152,"column":16,"nodeType":"1960","messageId":"1975","endLine":152,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2100","line":152,"column":34,"nodeType":"1960","messageId":"1975","endLine":152,"endColumn":40},{"ruleId":"1992","severity":1,"message":"1993","line":172,"column":21,"nodeType":"1994","endLine":172,"endColumn":33},{"ruleId":"1981","severity":1,"message":"1982","line":207,"column":33,"nodeType":"1968","endLine":213,"endColumn":34},{"ruleId":"1973","severity":1,"message":"2101","line":3,"column":10,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1977","line":48,"column":34,"nodeType":"1971","messageId":"1972","endLine":48,"endColumn":36},{"ruleId":"2010","severity":1,"message":"2011","line":49,"column":41,"nodeType":"2012","messageId":"2013","endLine":49,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":50,"column":20,"nodeType":"1971","messageId":"1972","endLine":50,"endColumn":22},{"ruleId":"2075","severity":1,"message":"2076","line":51,"column":11,"nodeType":"2077","messageId":"2078","endLine":65,"endColumn":12},{"ruleId":"2010","severity":1,"message":"2011","line":54,"column":44,"nodeType":"2012","messageId":"2013","endLine":54,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1977","line":69,"column":36,"nodeType":"1971","messageId":"1972","endLine":69,"endColumn":38},{"ruleId":"2092","severity":1,"message":"2102","line":78,"column":17,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":18,"suggestions":"2103"},{"ruleId":"2092","severity":1,"message":"2104","line":78,"column":21,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":22,"suggestions":"2105"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":29,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":30,"suggestions":"2106"},{"ruleId":"2092","severity":1,"message":"2102","line":78,"column":42,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":43,"suggestions":"2107"},{"ruleId":"2092","severity":1,"message":"2104","line":78,"column":46,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":47,"suggestions":"2108"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":54,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":55,"suggestions":"2109"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":63,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":64,"suggestions":"2110"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":67,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":68,"suggestions":"2111"},{"ruleId":"2092","severity":1,"message":"2104","line":78,"column":83,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":84,"suggestions":"2112"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":91,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":92,"suggestions":"2113"},{"ruleId":"2092","severity":1,"message":"2104","line":78,"column":108,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":109,"suggestions":"2114"},{"ruleId":"2092","severity":1,"message":"2093","line":78,"column":116,"nodeType":"2094","messageId":"2095","endLine":78,"endColumn":117,"suggestions":"2115"},{"ruleId":"1969","severity":1,"message":"1970","line":81,"column":15,"nodeType":"1971","messageId":"1972","endLine":81,"endColumn":17},{"ruleId":"1969","severity":1,"message":"1970","line":81,"column":41,"nodeType":"1971","messageId":"1972","endLine":81,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":87,"column":22,"nodeType":"1971","messageId":"1972","endLine":87,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":87,"column":51,"nodeType":"1971","messageId":"1972","endLine":87,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1970","line":93,"column":22,"nodeType":"1971","messageId":"1972","endLine":93,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":99,"column":22,"nodeType":"1971","messageId":"1972","endLine":99,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":99,"column":53,"nodeType":"1971","messageId":"1972","endLine":99,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":105,"column":22,"nodeType":"1971","messageId":"1972","endLine":105,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":105,"column":57,"nodeType":"1971","messageId":"1972","endLine":105,"endColumn":59},{"ruleId":"1969","severity":1,"message":"1970","line":119,"column":13,"nodeType":"1971","messageId":"1972","endLine":119,"endColumn":15},{"ruleId":"1969","severity":1,"message":"1970","line":128,"column":26,"nodeType":"1971","messageId":"1972","endLine":128,"endColumn":28},{"ruleId":"1969","severity":1,"message":"1970","line":134,"column":33,"nodeType":"1971","messageId":"1972","endLine":134,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":140,"column":35,"nodeType":"1971","messageId":"1972","endLine":140,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":146,"column":39,"nodeType":"1971","messageId":"1972","endLine":146,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":200,"column":42,"nodeType":"1971","messageId":"1972","endLine":200,"endColumn":44},{"ruleId":"1969","severity":1,"message":"1970","line":217,"column":42,"nodeType":"1971","messageId":"1972","endLine":217,"endColumn":44},{"ruleId":"1969","severity":1,"message":"1970","line":234,"column":42,"nodeType":"1971","messageId":"1972","endLine":234,"endColumn":44},{"ruleId":"1969","severity":1,"message":"1970","line":250,"column":42,"nodeType":"1971","messageId":"1972","endLine":250,"endColumn":44},{"ruleId":"1981","severity":1,"message":"1982","line":277,"column":19,"nodeType":"1968","endLine":282,"endColumn":20},{"ruleId":"1969","severity":1,"message":"1970","line":290,"column":22,"nodeType":"1971","messageId":"1972","endLine":290,"endColumn":24},{"ruleId":"1973","severity":1,"message":"2053","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2054","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2116","line":9,"column":10,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":29},{"ruleId":"1973","severity":1,"message":"2091","line":11,"column":8,"nodeType":"1960","messageId":"1975","endLine":11,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2117","line":12,"column":10,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2056","line":14,"column":7,"nodeType":"1960","messageId":"1975","endLine":14,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":118,"column":105,"nodeType":"1971","messageId":"1972","endLine":118,"endColumn":107},{"ruleId":"1969","severity":1,"message":"1970","line":126,"column":103,"nodeType":"1971","messageId":"1972","endLine":126,"endColumn":105},{"ruleId":"1973","severity":1,"message":"2053","line":3,"column":31,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":36},{"ruleId":"1973","severity":1,"message":"2054","line":3,"column":38,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":50},{"ruleId":"1973","severity":1,"message":"2055","line":6,"column":10,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2074","line":6,"column":22,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2056","line":11,"column":7,"nodeType":"1960","messageId":"1975","endLine":11,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":33,"column":23,"nodeType":"1971","messageId":"1972","endLine":33,"endColumn":25},{"ruleId":"1969","severity":1,"message":"1970","line":36,"column":30,"nodeType":"1971","messageId":"1972","endLine":36,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":38,"column":30,"nodeType":"1971","messageId":"1972","endLine":38,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":40,"column":30,"nodeType":"1971","messageId":"1972","endLine":40,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":42,"column":30,"nodeType":"1971","messageId":"1972","endLine":42,"endColumn":32},{"ruleId":"1981","severity":1,"message":"1982","line":75,"column":45,"nodeType":"1968","endLine":75,"endColumn":90},{"ruleId":"1966","severity":1,"message":"1967","line":77,"column":53,"nodeType":"1968","endLine":77,"endColumn":83},{"ruleId":"1973","severity":1,"message":"1999","line":4,"column":3,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2000","line":5,"column":3,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2001","line":6,"column":3,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":8},{"ruleId":"1973","severity":1,"message":"2002","line":7,"column":3,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":9},{"ruleId":"1973","severity":1,"message":"2054","line":3,"column":38,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":50},{"ruleId":"1973","severity":1,"message":"2091","line":7,"column":8,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2117","line":8,"column":10,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":15},{"ruleId":"1969","severity":1,"message":"1977","line":37,"column":35,"nodeType":"1971","messageId":"1972","endLine":37,"endColumn":37},{"ruleId":"1966","severity":1,"message":"1967","line":30,"column":21,"nodeType":"1968","endLine":30,"endColumn":40},{"ruleId":"1966","severity":1,"message":"1967","line":40,"column":48,"nodeType":"1968","endLine":40,"endColumn":103},{"ruleId":"1969","severity":1,"message":"1970","line":58,"column":19,"nodeType":"1971","messageId":"1972","endLine":58,"endColumn":21},{"ruleId":"1981","severity":1,"message":"1982","line":106,"column":15,"nodeType":"1968","endLine":111,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":59,"column":17,"nodeType":"1971","messageId":"1972","endLine":59,"endColumn":19},{"ruleId":"1958","severity":1,"message":"2118","line":107,"column":6,"nodeType":"2119","endLine":107,"endColumn":19,"suggestions":"2120"},{"ruleId":"1969","severity":1,"message":"1970","line":172,"column":14,"nodeType":"1971","messageId":"1972","endLine":172,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":186,"column":14,"nodeType":"1971","messageId":"1972","endLine":186,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":196,"column":14,"nodeType":"1971","messageId":"1972","endLine":196,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":204,"column":14,"nodeType":"1971","messageId":"1972","endLine":204,"endColumn":16},{"ruleId":"1958","severity":1,"message":"2121","line":215,"column":6,"nodeType":"2119","endLine":215,"endColumn":51,"suggestions":"2122"},{"ruleId":"1958","severity":1,"message":"2123","line":224,"column":6,"nodeType":"2119","endLine":224,"endColumn":17,"suggestions":"2124"},{"ruleId":"1969","severity":1,"message":"1970","line":232,"column":16,"nodeType":"1971","messageId":"1972","endLine":232,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":270,"column":22,"nodeType":"1971","messageId":"1972","endLine":270,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":293,"column":22,"nodeType":"1971","messageId":"1972","endLine":293,"endColumn":24},{"ruleId":"1969","severity":1,"message":"1970","line":46,"column":23,"nodeType":"1971","messageId":"1972","endLine":46,"endColumn":25},{"ruleId":"1969","severity":1,"message":"1970","line":49,"column":30,"nodeType":"1971","messageId":"1972","endLine":49,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":51,"column":30,"nodeType":"1971","messageId":"1972","endLine":51,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":53,"column":30,"nodeType":"1971","messageId":"1972","endLine":53,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":55,"column":30,"nodeType":"1971","messageId":"1972","endLine":55,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":89,"column":48,"nodeType":"1971","messageId":"1972","endLine":89,"endColumn":50},{"ruleId":"1969","severity":1,"message":"1977","line":107,"column":82,"nodeType":"1971","messageId":"1972","endLine":107,"endColumn":84},{"ruleId":"1981","severity":1,"message":"1982","line":109,"column":17,"nodeType":"1968","endLine":118,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1977","line":128,"column":41,"nodeType":"1971","messageId":"1972","endLine":128,"endColumn":43},{"ruleId":"1981","severity":1,"message":"1982","line":130,"column":17,"nodeType":"1968","endLine":139,"endColumn":18},{"ruleId":"1981","severity":1,"message":"1982","line":151,"column":15,"nodeType":"1968","endLine":155,"endColumn":16},{"ruleId":"1973","severity":1,"message":"2125","line":1,"column":17,"nodeType":"1960","messageId":"1975","endLine":1,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2126","line":6,"column":30,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":48},{"ruleId":"1985","severity":1,"message":"2044","line":85,"column":48,"nodeType":"1987","messageId":"1988","endLine":85,"endColumn":50},{"ruleId":"1985","severity":1,"message":"2044","line":85,"column":95,"nodeType":"1987","messageId":"1988","endLine":85,"endColumn":97},{"ruleId":"1985","severity":1,"message":"2044","line":86,"column":44,"nodeType":"1987","messageId":"1988","endLine":86,"endColumn":46},{"ruleId":"1985","severity":1,"message":"2044","line":86,"column":89,"nodeType":"1987","messageId":"1988","endLine":86,"endColumn":91},{"ruleId":"2010","severity":1,"message":"2011","line":112,"column":37,"nodeType":"2012","messageId":"2013","endLine":112,"endColumn":39},{"ruleId":"2010","severity":1,"message":"2011","line":113,"column":25,"nodeType":"2012","messageId":"2013","endLine":113,"endColumn":27},{"ruleId":"2010","severity":1,"message":"2011","line":121,"column":35,"nodeType":"2012","messageId":"2013","endLine":121,"endColumn":37},{"ruleId":"2010","severity":1,"message":"2011","line":122,"column":23,"nodeType":"2012","messageId":"2013","endLine":122,"endColumn":25},{"ruleId":"1966","severity":1,"message":"1967","line":296,"column":25,"nodeType":"1968","endLine":296,"endColumn":42},{"ruleId":"1966","severity":1,"message":"1967","line":315,"column":25,"nodeType":"1968","endLine":315,"endColumn":42},{"ruleId":"2075","severity":1,"message":"2076","line":20,"column":13,"nodeType":"2077","messageId":"2078","endLine":20,"endColumn":64},{"ruleId":"1966","severity":1,"message":"1967","line":40,"column":9,"nodeType":"1968","endLine":40,"endColumn":26},{"ruleId":"1966","severity":1,"message":"1967","line":66,"column":9,"nodeType":"1968","endLine":66,"endColumn":26},{"ruleId":"2127","severity":1,"message":"2128","line":20,"column":1,"nodeType":"2129","endLine":35,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":20,"column":1,"nodeType":"2129","endLine":35,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":22,"column":1,"nodeType":"2129","endLine":47,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":20,"column":1,"nodeType":"2129","endLine":35,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":23,"column":1,"nodeType":"2129","endLine":53,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":20,"column":1,"nodeType":"2129","endLine":86,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":29,"column":1,"nodeType":"2129","endLine":96,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":26,"column":1,"nodeType":"2129","endLine":89,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":43,"column":1,"nodeType":"2129","endLine":99,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":41,"column":1,"nodeType":"2129","endLine":255,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":35,"column":1,"nodeType":"2129","endLine":160,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":20,"column":1,"nodeType":"2129","endLine":109,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":24,"column":1,"nodeType":"2129","endLine":94,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":22,"column":1,"nodeType":"2129","endLine":88,"endColumn":3},{"ruleId":"2127","severity":1,"message":"2128","line":29,"column":1,"nodeType":"2129","endLine":84,"endColumn":3},{"ruleId":"1973","severity":1,"message":"2130","line":1,"column":17,"nodeType":"1960","messageId":"1975","endLine":1,"endColumn":26},{"ruleId":"1973","severity":1,"message":"2131","line":9,"column":35,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":47},{"ruleId":"2010","severity":1,"message":"2011","line":13,"column":28,"nodeType":"2012","messageId":"2013","endLine":13,"endColumn":30},{"ruleId":"2010","severity":1,"message":"2017","line":14,"column":30,"nodeType":"2012","messageId":"2013","endLine":14,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":15,"column":21,"nodeType":"1971","messageId":"1972","endLine":15,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1970","line":49,"column":80,"nodeType":"1971","messageId":"1972","endLine":49,"endColumn":82},{"ruleId":"1969","severity":1,"message":"1970","line":49,"column":96,"nodeType":"1971","messageId":"1972","endLine":49,"endColumn":98},{"ruleId":"2010","severity":1,"message":"2011","line":11,"column":57,"nodeType":"2012","messageId":"2013","endLine":11,"endColumn":59},{"ruleId":"1973","severity":1,"message":"2132","line":84,"column":7,"nodeType":"1960","messageId":"1975","endLine":84,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":101,"column":16,"nodeType":"1971","messageId":"1972","endLine":101,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":101,"column":34,"nodeType":"1971","messageId":"1972","endLine":101,"endColumn":36},{"ruleId":"1981","severity":1,"message":"1982","line":135,"column":33,"nodeType":"1968","endLine":142,"endColumn":34},{"ruleId":"1966","severity":1,"message":"1967","line":144,"column":37,"nodeType":"1968","endLine":151,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":159,"column":37,"nodeType":"1968","endLine":165,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":171,"column":41,"nodeType":"1968","endLine":177,"endColumn":43},{"ruleId":"1966","severity":1,"message":"1967","line":179,"column":41,"nodeType":"1968","endLine":185,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":226,"column":42,"nodeType":"1971","messageId":"1972","endLine":226,"endColumn":44},{"ruleId":"1981","severity":1,"message":"1982","line":228,"column":43,"nodeType":"1968","endLine":231,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":232,"column":33,"nodeType":"1968","endLine":235,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":239,"column":64,"nodeType":"1971","messageId":"1972","endLine":239,"endColumn":66},{"ruleId":"1981","severity":1,"message":"1982","line":241,"column":31,"nodeType":"1968","endLine":247,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":248,"column":33,"nodeType":"1968","endLine":248,"endColumn":68},{"ruleId":"1981","severity":1,"message":"1982","line":250,"column":31,"nodeType":"1968","endLine":256,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":257,"column":33,"nodeType":"1968","endLine":260,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":263,"column":63,"nodeType":"1971","messageId":"1972","endLine":263,"endColumn":65},{"ruleId":"1981","severity":1,"message":"1982","line":265,"column":31,"nodeType":"1968","endLine":271,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":272,"column":33,"nodeType":"1968","endLine":275,"endColumn":35},{"ruleId":"1981","severity":1,"message":"1982","line":277,"column":43,"nodeType":"1968","endLine":280,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":281,"column":33,"nodeType":"1968","endLine":284,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":287,"column":63,"nodeType":"1971","messageId":"1972","endLine":287,"endColumn":65},{"ruleId":"1981","severity":1,"message":"1982","line":289,"column":31,"nodeType":"1968","endLine":295,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":296,"column":33,"nodeType":"1968","endLine":299,"endColumn":35},{"ruleId":"1981","severity":1,"message":"1982","line":301,"column":43,"nodeType":"1968","endLine":304,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":305,"column":33,"nodeType":"1968","endLine":308,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":312,"column":44,"nodeType":"1971","messageId":"1972","endLine":312,"endColumn":46},{"ruleId":"1981","severity":1,"message":"1982","line":314,"column":31,"nodeType":"1968","endLine":320,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":321,"column":33,"nodeType":"1968","endLine":324,"endColumn":35},{"ruleId":"1981","severity":1,"message":"1982","line":329,"column":43,"nodeType":"1968","endLine":332,"endColumn":32},{"ruleId":"1966","severity":1,"message":"1967","line":333,"column":33,"nodeType":"1968","endLine":336,"endColumn":35},{"ruleId":"1981","severity":1,"message":"1982","line":338,"column":31,"nodeType":"1968","endLine":338,"endColumn":81},{"ruleId":"1966","severity":1,"message":"1967","line":339,"column":33,"nodeType":"1968","endLine":339,"endColumn":78},{"ruleId":"1969","severity":1,"message":"1977","line":342,"column":53,"nodeType":"1971","messageId":"1972","endLine":342,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":342,"column":90,"nodeType":"1971","messageId":"1972","endLine":342,"endColumn":92},{"ruleId":"1981","severity":1,"message":"1982","line":342,"column":106,"nodeType":"1968","endLine":345,"endColumn":34},{"ruleId":"1966","severity":1,"message":"1967","line":346,"column":35,"nodeType":"1968","endLine":349,"endColumn":37},{"ruleId":"1969","severity":1,"message":"1970","line":25,"column":30,"nodeType":"1971","messageId":"1972","endLine":25,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":28,"column":68,"nodeType":"1971","messageId":"1972","endLine":28,"endColumn":70},{"ruleId":"1969","severity":1,"message":"1970","line":31,"column":63,"nodeType":"1971","messageId":"1972","endLine":31,"endColumn":65},{"ruleId":"2133","severity":1,"message":"2134","line":25,"column":47,"nodeType":"1971","messageId":"2135","endLine":25,"endColumn":48},{"ruleId":"2075","severity":1,"message":"2136","line":50,"column":1,"nodeType":"2077","messageId":"2137","endLine":52,"endColumn":48},{"ruleId":"1973","severity":1,"message":"2138","line":6,"column":28,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":35},{"ruleId":"1966","severity":1,"message":"1967","line":13,"column":11,"nodeType":"1968","endLine":13,"endColumn":73},{"ruleId":"1969","severity":1,"message":"1970","line":59,"column":16,"nodeType":"1971","messageId":"1972","endLine":59,"endColumn":18},{"ruleId":"1969","severity":1,"message":"1970","line":59,"column":34,"nodeType":"1971","messageId":"1972","endLine":59,"endColumn":36},{"ruleId":"1985","severity":1,"message":"2044","line":73,"column":17,"nodeType":"1987","messageId":"1988","endLine":73,"endColumn":19},{"ruleId":"1985","severity":1,"message":"2044","line":75,"column":11,"nodeType":"1987","messageId":"1988","endLine":75,"endColumn":13},{"ruleId":"1966","severity":1,"message":"1967","line":85,"column":23,"nodeType":"1968","endLine":86,"endColumn":83},{"ruleId":"1985","severity":1,"message":"2044","line":89,"column":43,"nodeType":"1987","messageId":"1988","endLine":89,"endColumn":45},{"ruleId":"1985","severity":1,"message":"2044","line":89,"column":63,"nodeType":"1987","messageId":"1988","endLine":89,"endColumn":65},{"ruleId":"1985","severity":1,"message":"1986","line":89,"column":63,"nodeType":"1987","messageId":"1988","endLine":89,"endColumn":65},{"ruleId":"1985","severity":1,"message":"1986","line":89,"column":81,"nodeType":"1987","messageId":"1988","endLine":89,"endColumn":83},{"ruleId":"1981","severity":1,"message":"1982","line":101,"column":25,"nodeType":"1968","endLine":102,"endColumn":44},{"ruleId":"1966","severity":1,"message":"1967","line":103,"column":27,"nodeType":"1968","endLine":103,"endColumn":68},{"ruleId":"1981","severity":1,"message":"1982","line":106,"column":25,"nodeType":"1968","endLine":110,"endColumn":44},{"ruleId":"1966","severity":1,"message":"1967","line":111,"column":27,"nodeType":"1968","endLine":111,"endColumn":62},{"ruleId":"1981","severity":1,"message":"1982","line":115,"column":47,"nodeType":"1968","endLine":115,"endColumn":94},{"ruleId":"1966","severity":1,"message":"1967","line":115,"column":94,"nodeType":"1968","endLine":115,"endColumn":128},{"ruleId":"1981","severity":1,"message":"1982","line":116,"column":70,"nodeType":"1968","endLine":116,"endColumn":158},{"ruleId":"1966","severity":1,"message":"1967","line":116,"column":158,"nodeType":"1968","endLine":116,"endColumn":191},{"ruleId":"2133","severity":1,"message":"2134","line":21,"column":35,"nodeType":"1971","messageId":"2135","endLine":21,"endColumn":36},{"ruleId":"1969","severity":1,"message":"1970","line":27,"column":30,"nodeType":"1971","messageId":"1972","endLine":27,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":30,"column":68,"nodeType":"1971","messageId":"1972","endLine":30,"endColumn":70},{"ruleId":"1969","severity":1,"message":"1970","line":33,"column":63,"nodeType":"1971","messageId":"1972","endLine":33,"endColumn":65},{"ruleId":"1981","severity":1,"message":"1982","line":14,"column":13,"nodeType":"1968","endLine":14,"endColumn":164},{"ruleId":"1981","severity":1,"message":"1982","line":19,"column":10,"nodeType":"1968","endLine":19,"endColumn":128},{"ruleId":"1966","severity":1,"message":"1967","line":21,"column":14,"nodeType":"1968","endLine":21,"endColumn":54},{"ruleId":"1981","severity":1,"message":"1982","line":32,"column":15,"nodeType":"1968","endLine":32,"endColumn":61},{"ruleId":"1981","severity":1,"message":"1982","line":20,"column":13,"nodeType":"1968","endLine":20,"endColumn":33},{"ruleId":"1966","severity":1,"message":"1967","line":20,"column":33,"nodeType":"1968","endLine":20,"endColumn":49},{"ruleId":"1981","severity":1,"message":"1982","line":21,"column":13,"nodeType":"1968","endLine":21,"endColumn":33},{"ruleId":"1966","severity":1,"message":"1967","line":21,"column":33,"nodeType":"1968","endLine":21,"endColumn":52},{"ruleId":"1981","severity":1,"message":"1982","line":22,"column":13,"nodeType":"1968","endLine":22,"endColumn":33},{"ruleId":"1966","severity":1,"message":"1967","line":22,"column":33,"nodeType":"1968","endLine":22,"endColumn":51},{"ruleId":"1973","severity":1,"message":"2139","line":12,"column":8,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":11},{"ruleId":"1969","severity":1,"message":"1977","line":77,"column":31,"nodeType":"1971","messageId":"1972","endLine":77,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":100,"column":23,"nodeType":"1971","messageId":"1972","endLine":100,"endColumn":25},{"ruleId":"1969","severity":1,"message":"1970","line":103,"column":30,"nodeType":"1971","messageId":"1972","endLine":103,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":105,"column":30,"nodeType":"1971","messageId":"1972","endLine":105,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":107,"column":30,"nodeType":"1971","messageId":"1972","endLine":107,"endColumn":32},{"ruleId":"1969","severity":1,"message":"1970","line":109,"column":30,"nodeType":"1971","messageId":"1972","endLine":109,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2140","line":129,"column":39,"nodeType":"1960","messageId":"1975","endLine":129,"endColumn":55},{"ruleId":"1981","severity":1,"message":"1982","line":138,"column":13,"nodeType":"1968","endLine":141,"endColumn":14},{"ruleId":"1966","severity":1,"message":"1967","line":154,"column":17,"nodeType":"1968","endLine":154,"endColumn":48},{"ruleId":"1981","severity":1,"message":"1982","line":160,"column":17,"nodeType":"1968","endLine":169,"endColumn":18},{"ruleId":"1966","severity":1,"message":"1967","line":170,"column":19,"nodeType":"1968","endLine":170,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1977","line":179,"column":41,"nodeType":"1971","messageId":"1972","endLine":179,"endColumn":43},{"ruleId":"1981","severity":1,"message":"1982","line":183,"column":19,"nodeType":"1968","endLine":192,"endColumn":20},{"ruleId":"1966","severity":1,"message":"1967","line":193,"column":21,"nodeType":"1968","endLine":193,"endColumn":48},{"ruleId":"1981","severity":1,"message":"1982","line":205,"column":15,"nodeType":"1968","endLine":209,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":12,"column":74,"nodeType":"1971","messageId":"1972","endLine":12,"endColumn":76},{"ruleId":"1973","severity":1,"message":"2141","line":4,"column":22,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1970","line":160,"column":31,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":160,"column":53,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":160,"column":78,"nodeType":"1971","messageId":"1972","endLine":160,"endColumn":80},{"ruleId":"1969","severity":1,"message":"1977","line":173,"column":35,"nodeType":"1971","messageId":"1972","endLine":173,"endColumn":37},{"ruleId":"2010","severity":1,"message":"2011","line":175,"column":44,"nodeType":"2012","messageId":"2013","endLine":175,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":176,"column":29,"nodeType":"1971","messageId":"1972","endLine":176,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":179,"column":29,"nodeType":"1971","messageId":"1972","endLine":179,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":182,"column":29,"nodeType":"1971","messageId":"1972","endLine":182,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":185,"column":29,"nodeType":"1971","messageId":"1972","endLine":185,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":188,"column":29,"nodeType":"1971","messageId":"1972","endLine":188,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":191,"column":29,"nodeType":"1971","messageId":"1972","endLine":191,"endColumn":31},{"ruleId":"1973","severity":1,"message":"2142","line":205,"column":7,"nodeType":"1960","messageId":"1975","endLine":205,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1970","line":216,"column":66,"nodeType":"1971","messageId":"1972","endLine":216,"endColumn":68},{"ruleId":"1981","severity":1,"message":"1982","line":232,"column":17,"nodeType":"1968","endLine":235,"endColumn":18},{"ruleId":"1966","severity":1,"message":"1967","line":236,"column":19,"nodeType":"1968","endLine":236,"endColumn":70},{"ruleId":"1966","severity":1,"message":"1967","line":237,"column":19,"nodeType":"1968","endLine":237,"endColumn":65},{"ruleId":"1969","severity":1,"message":"1970","line":249,"column":59,"nodeType":"1971","messageId":"1972","endLine":249,"endColumn":61},{"ruleId":"1981","severity":1,"message":"1982","line":258,"column":25,"nodeType":"1968","endLine":263,"endColumn":26},{"ruleId":"1966","severity":1,"message":"1967","line":264,"column":27,"nodeType":"1968","endLine":264,"endColumn":79},{"ruleId":"1966","severity":1,"message":"1967","line":265,"column":27,"nodeType":"1968","endLine":265,"endColumn":74},{"ruleId":"1981","severity":1,"message":"1982","line":270,"column":25,"nodeType":"1968","endLine":275,"endColumn":26},{"ruleId":"1966","severity":1,"message":"1967","line":276,"column":27,"nodeType":"1968","endLine":276,"endColumn":79},{"ruleId":"1966","severity":1,"message":"1967","line":277,"column":27,"nodeType":"1968","endLine":277,"endColumn":74},{"ruleId":"1981","severity":1,"message":"1982","line":282,"column":25,"nodeType":"1968","endLine":287,"endColumn":26},{"ruleId":"1966","severity":1,"message":"1967","line":288,"column":27,"nodeType":"1968","endLine":288,"endColumn":79},{"ruleId":"1966","severity":1,"message":"1967","line":289,"column":27,"nodeType":"1968","endLine":289,"endColumn":74},{"ruleId":"1969","severity":1,"message":"1977","line":294,"column":40,"nodeType":"1971","messageId":"1972","endLine":294,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":295,"column":40,"nodeType":"1971","messageId":"1972","endLine":295,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":296,"column":40,"nodeType":"1971","messageId":"1972","endLine":296,"endColumn":42},{"ruleId":"1981","severity":1,"message":"1982","line":297,"column":27,"nodeType":"1968","endLine":302,"endColumn":28},{"ruleId":"1966","severity":1,"message":"1967","line":303,"column":29,"nodeType":"1968","endLine":303,"endColumn":81},{"ruleId":"1966","severity":1,"message":"1967","line":304,"column":29,"nodeType":"1968","endLine":304,"endColumn":76},{"ruleId":"1969","severity":1,"message":"1970","line":313,"column":39,"nodeType":"1971","messageId":"1972","endLine":313,"endColumn":41},{"ruleId":"1981","severity":1,"message":"1982","line":320,"column":23,"nodeType":"1968","endLine":325,"endColumn":24},{"ruleId":"1966","severity":1,"message":"1967","line":326,"column":25,"nodeType":"1968","endLine":326,"endColumn":77},{"ruleId":"1966","severity":1,"message":"1967","line":327,"column":25,"nodeType":"1968","endLine":327,"endColumn":72},{"ruleId":"1981","severity":1,"message":"1982","line":332,"column":23,"nodeType":"1968","endLine":337,"endColumn":24},{"ruleId":"1966","severity":1,"message":"1967","line":338,"column":25,"nodeType":"1968","endLine":338,"endColumn":77},{"ruleId":"1966","severity":1,"message":"1967","line":339,"column":25,"nodeType":"1968","endLine":339,"endColumn":72},{"ruleId":"1969","severity":1,"message":"1970","line":355,"column":65,"nodeType":"1971","messageId":"1972","endLine":355,"endColumn":67},{"ruleId":"1969","severity":1,"message":"1970","line":366,"column":55,"nodeType":"1971","messageId":"1972","endLine":366,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1970","line":370,"column":53,"nodeType":"1971","messageId":"1972","endLine":370,"endColumn":55},{"ruleId":"1981","severity":1,"message":"1982","line":379,"column":37,"nodeType":"1968","endLine":379,"endColumn":68},{"ruleId":"1969","severity":1,"message":"1970","line":383,"column":59,"nodeType":"1971","messageId":"1972","endLine":383,"endColumn":61},{"ruleId":"1969","severity":1,"message":"1970","line":387,"column":53,"nodeType":"1971","messageId":"1972","endLine":387,"endColumn":55},{"ruleId":"1981","severity":1,"message":"1982","line":396,"column":37,"nodeType":"1968","endLine":396,"endColumn":68},{"ruleId":"1969","severity":1,"message":"1970","line":400,"column":59,"nodeType":"1971","messageId":"1972","endLine":400,"endColumn":61},{"ruleId":"1969","severity":1,"message":"1970","line":404,"column":53,"nodeType":"1971","messageId":"1972","endLine":404,"endColumn":55},{"ruleId":"1981","severity":1,"message":"1982","line":413,"column":37,"nodeType":"1968","endLine":413,"endColumn":68},{"ruleId":"1969","severity":1,"message":"1977","line":418,"column":49,"nodeType":"1971","messageId":"1972","endLine":418,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1977","line":419,"column":49,"nodeType":"1971","messageId":"1972","endLine":419,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1977","line":420,"column":49,"nodeType":"1971","messageId":"1972","endLine":420,"endColumn":51},{"ruleId":"1969","severity":1,"message":"1970","line":424,"column":55,"nodeType":"1971","messageId":"1972","endLine":424,"endColumn":57},{"ruleId":"1981","severity":1,"message":"1982","line":433,"column":39,"nodeType":"1968","endLine":433,"endColumn":70},{"ruleId":"1969","severity":1,"message":"1970","line":453,"column":51,"nodeType":"1971","messageId":"1972","endLine":453,"endColumn":53},{"ruleId":"1981","severity":1,"message":"1982","line":462,"column":35,"nodeType":"1968","endLine":462,"endColumn":66},{"ruleId":"1958","severity":1,"message":"2143","line":28,"column":6,"nodeType":"2119","endLine":28,"endColumn":8,"suggestions":"2144"},{"ruleId":"1981","severity":1,"message":"1982","line":33,"column":9,"nodeType":"1968","endLine":37,"endColumn":10},{"ruleId":"1966","severity":1,"message":"1967","line":39,"column":13,"nodeType":"1968","endLine":46,"endColumn":15},{"ruleId":"1969","severity":1,"message":"1977","line":40,"column":31,"nodeType":"1971","messageId":"1972","endLine":40,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":48,"column":57,"nodeType":"1971","messageId":"1972","endLine":48,"endColumn":59},{"ruleId":"1981","severity":1,"message":"1982","line":51,"column":45,"nodeType":"1968","endLine":51,"endColumn":133},{"ruleId":"1966","severity":1,"message":"1967","line":52,"column":13,"nodeType":"1968","endLine":56,"endColumn":15},{"ruleId":"1981","severity":1,"message":"1982","line":63,"column":11,"nodeType":"1968","endLine":63,"endColumn":75},{"ruleId":"1966","severity":1,"message":"1967","line":64,"column":13,"nodeType":"1968","endLine":64,"endColumn":33},{"ruleId":"2145","severity":1,"message":"2146","line":5,"column":5,"nodeType":"2147","messageId":"2148","endLine":7,"endColumn":6},{"ruleId":"2133","severity":1,"message":"2134","line":13,"column":85,"nodeType":"1971","messageId":"2135","endLine":13,"endColumn":86},{"ruleId":"2145","severity":1,"message":"2146","line":4,"column":5,"nodeType":"2147","messageId":"2148","endLine":6,"endColumn":6},{"ruleId":"2133","severity":1,"message":"2134","line":17,"column":67,"nodeType":"1971","messageId":"2135","endLine":17,"endColumn":68},{"ruleId":"2133","severity":1,"message":"2134","line":25,"column":48,"nodeType":"1971","messageId":"2135","endLine":25,"endColumn":49},{"ruleId":"1966","severity":1,"message":"1967","line":16,"column":19,"nodeType":"1968","endLine":16,"endColumn":44},{"ruleId":"1973","severity":1,"message":"2149","line":3,"column":10,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2150","line":10,"column":8,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":18},{"ruleId":"1973","severity":1,"message":"2151","line":72,"column":11,"nodeType":"1960","messageId":"1975","endLine":72,"endColumn":16},{"ruleId":"1969","severity":1,"message":"1970","line":100,"column":67,"nodeType":"1971","messageId":"1972","endLine":100,"endColumn":69},{"ruleId":"1973","severity":1,"message":"2152","line":114,"column":25,"nodeType":"1960","messageId":"1975","endLine":114,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2149","line":4,"column":10,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2153","line":6,"column":8,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2154","line":7,"column":10,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":22},{"ruleId":"1973","severity":1,"message":"2155","line":24,"column":5,"nodeType":"1960","messageId":"1975","endLine":24,"endColumn":15},{"ruleId":"1996","severity":1,"message":"2156","line":33,"column":7,"nodeType":"1998","messageId":"1972","endLine":33,"endColumn":13},{"ruleId":"1969","severity":1,"message":"1970","line":45,"column":27,"nodeType":"1971","messageId":"1972","endLine":45,"endColumn":29},{"ruleId":"1969","severity":1,"message":"1970","line":62,"column":36,"nodeType":"1971","messageId":"1972","endLine":62,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":63,"column":24,"nodeType":"1971","messageId":"1972","endLine":63,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":65,"column":24,"nodeType":"1971","messageId":"1972","endLine":65,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":72,"column":36,"nodeType":"1971","messageId":"1972","endLine":72,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":73,"column":24,"nodeType":"1971","messageId":"1972","endLine":73,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1977","line":74,"column":36,"nodeType":"1971","messageId":"1972","endLine":74,"endColumn":38},{"ruleId":"1969","severity":1,"message":"1970","line":121,"column":53,"nodeType":"1971","messageId":"1972","endLine":121,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1970","line":125,"column":29,"nodeType":"1971","messageId":"1972","endLine":125,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1970","line":130,"column":31,"nodeType":"1971","messageId":"1972","endLine":130,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":34,"column":42,"nodeType":"1971","messageId":"1972","endLine":34,"endColumn":44},{"ruleId":"1969","severity":1,"message":"1977","line":34,"column":75,"nodeType":"1971","messageId":"1972","endLine":34,"endColumn":77},{"ruleId":"1966","severity":1,"message":"1967","line":37,"column":27,"nodeType":"1968","endLine":37,"endColumn":76},{"ruleId":"1966","severity":1,"message":"1967","line":41,"column":29,"nodeType":"1968","endLine":41,"endColumn":70},{"ruleId":"1985","severity":1,"message":"2044","line":12,"column":9,"nodeType":"1987","messageId":"1988","endLine":12,"endColumn":11},{"ruleId":"1985","severity":1,"message":"2044","line":13,"column":9,"nodeType":"1987","messageId":"1988","endLine":13,"endColumn":11},{"ruleId":"1973","severity":1,"message":"2002","line":4,"column":24,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":30},{"ruleId":"1966","severity":1,"message":"1967","line":97,"column":17,"nodeType":"1968","endLine":97,"endColumn":128},{"ruleId":"1973","severity":1,"message":"2001","line":3,"column":10,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2157","line":8,"column":7,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":14},{"ruleId":"1966","severity":1,"message":"1967","line":49,"column":19,"nodeType":"1968","endLine":49,"endColumn":38},{"ruleId":"1966","severity":1,"message":"1967","line":54,"column":17,"nodeType":"1968","endLine":57,"endColumn":19},{"ruleId":"2010","severity":1,"message":"2038","line":67,"column":55,"nodeType":"2012","messageId":"2039","endLine":67,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1977","line":68,"column":31,"nodeType":"1971","messageId":"1972","endLine":68,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":70,"column":37,"nodeType":"1971","messageId":"1972","endLine":70,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":71,"column":39,"nodeType":"1971","messageId":"1972","endLine":71,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":72,"column":40,"nodeType":"1971","messageId":"1972","endLine":72,"endColumn":42},{"ruleId":"2010","severity":1,"message":"2038","line":116,"column":53,"nodeType":"2012","messageId":"2039","endLine":116,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":117,"column":31,"nodeType":"1971","messageId":"1972","endLine":117,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":119,"column":39,"nodeType":"1971","messageId":"1972","endLine":119,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":120,"column":40,"nodeType":"1971","messageId":"1972","endLine":120,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":121,"column":37,"nodeType":"1971","messageId":"1972","endLine":121,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":124,"column":31,"nodeType":"1968","endLine":131,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2038","line":137,"column":53,"nodeType":"2012","messageId":"2039","endLine":137,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":138,"column":31,"nodeType":"1971","messageId":"1972","endLine":138,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":139,"column":41,"nodeType":"1971","messageId":"1972","endLine":139,"endColumn":43},{"ruleId":"1966","severity":1,"message":"1967","line":142,"column":31,"nodeType":"1968","endLine":149,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2038","line":169,"column":53,"nodeType":"2012","messageId":"2039","endLine":169,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":170,"column":29,"nodeType":"1971","messageId":"1972","endLine":170,"endColumn":31},{"ruleId":"1969","severity":1,"message":"1977","line":171,"column":37,"nodeType":"1971","messageId":"1972","endLine":171,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":171,"column":56,"nodeType":"1971","messageId":"1972","endLine":171,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1970","line":171,"column":80,"nodeType":"1971","messageId":"1972","endLine":171,"endColumn":82},{"ruleId":"2010","severity":1,"message":"2038","line":191,"column":48,"nodeType":"2012","messageId":"2039","endLine":191,"endColumn":50},{"ruleId":"1969","severity":1,"message":"1977","line":192,"column":31,"nodeType":"1971","messageId":"1972","endLine":192,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":194,"column":39,"nodeType":"1971","messageId":"1972","endLine":194,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":195,"column":40,"nodeType":"1971","messageId":"1972","endLine":195,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1977","line":196,"column":37,"nodeType":"1971","messageId":"1972","endLine":196,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":199,"column":31,"nodeType":"1968","endLine":206,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2038","line":212,"column":53,"nodeType":"2012","messageId":"2039","endLine":212,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":213,"column":31,"nodeType":"1971","messageId":"1972","endLine":213,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":214,"column":41,"nodeType":"1971","messageId":"1972","endLine":214,"endColumn":43},{"ruleId":"1966","severity":1,"message":"1967","line":217,"column":31,"nodeType":"1968","endLine":224,"endColumn":33},{"ruleId":"2010","severity":1,"message":"2038","line":229,"column":56,"nodeType":"2012","messageId":"2039","endLine":229,"endColumn":58},{"ruleId":"1969","severity":1,"message":"1977","line":230,"column":31,"nodeType":"1971","messageId":"1972","endLine":230,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1977","line":231,"column":44,"nodeType":"1971","messageId":"1972","endLine":231,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":239,"column":40,"nodeType":"1971","messageId":"1972","endLine":239,"endColumn":42},{"ruleId":"1969","severity":1,"message":"1970","line":241,"column":43,"nodeType":"1971","messageId":"1972","endLine":241,"endColumn":45},{"ruleId":"2145","severity":1,"message":"2146","line":6,"column":3,"nodeType":"2147","messageId":"2148","endLine":8,"endColumn":4},{"ruleId":"1966","severity":1,"message":"1967","line":14,"column":11,"nodeType":"1968","endLine":14,"endColumn":71},{"ruleId":"1973","severity":1,"message":"2066","line":4,"column":8,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2158","line":8,"column":28,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":38},{"ruleId":"1981","severity":1,"message":"1982","line":12,"column":29,"nodeType":"1968","endLine":12,"endColumn":100},{"ruleId":"1973","severity":1,"message":"2066","line":4,"column":8,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2158","line":8,"column":28,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":38},{"ruleId":"1981","severity":1,"message":"1982","line":12,"column":15,"nodeType":"1968","endLine":12,"endColumn":96},{"ruleId":"1985","severity":1,"message":"2044","line":98,"column":35,"nodeType":"1987","messageId":"1988","endLine":98,"endColumn":37},{"ruleId":"1985","severity":1,"message":"2044","line":99,"column":17,"nodeType":"1987","messageId":"1988","endLine":99,"endColumn":19},{"ruleId":"1981","severity":1,"message":"1982","line":104,"column":96,"nodeType":"1968","endLine":104,"endColumn":164},{"ruleId":"2145","severity":1,"message":"2146","line":6,"column":3,"nodeType":"2147","messageId":"2148","endLine":8,"endColumn":4},{"ruleId":"1966","severity":1,"message":"1967","line":15,"column":11,"nodeType":"1968","endLine":15,"endColumn":71},{"ruleId":"1973","severity":1,"message":"2001","line":3,"column":10,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2157","line":10,"column":7,"nodeType":"1960","messageId":"1975","endLine":10,"endColumn":14},{"ruleId":"1966","severity":1,"message":"1967","line":51,"column":19,"nodeType":"1968","endLine":51,"endColumn":38},{"ruleId":"1966","severity":1,"message":"1967","line":56,"column":17,"nodeType":"1968","endLine":59,"endColumn":19},{"ruleId":"2010","severity":1,"message":"2038","line":69,"column":55,"nodeType":"2012","messageId":"2039","endLine":69,"endColumn":57},{"ruleId":"1969","severity":1,"message":"1977","line":70,"column":37,"nodeType":"1971","messageId":"1972","endLine":70,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1977","line":71,"column":39,"nodeType":"1971","messageId":"1972","endLine":71,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1970","line":71,"column":58,"nodeType":"1971","messageId":"1972","endLine":71,"endColumn":60},{"ruleId":"1969","severity":1,"message":"1977","line":114,"column":43,"nodeType":"1971","messageId":"1972","endLine":114,"endColumn":45},{"ruleId":"2010","severity":1,"message":"2038","line":114,"column":76,"nodeType":"2012","messageId":"2039","endLine":114,"endColumn":78},{"ruleId":"1969","severity":1,"message":"1970","line":115,"column":38,"nodeType":"1971","messageId":"1972","endLine":115,"endColumn":40},{"ruleId":"1966","severity":1,"message":"1967","line":116,"column":34,"nodeType":"1968","endLine":123,"endColumn":27},{"ruleId":"1966","severity":1,"message":"1967","line":125,"column":27,"nodeType":"1968","endLine":132,"endColumn":23},{"ruleId":"2010","severity":1,"message":"2038","line":148,"column":53,"nodeType":"2012","messageId":"2039","endLine":148,"endColumn":55},{"ruleId":"1969","severity":1,"message":"1977","line":149,"column":39,"nodeType":"1971","messageId":"1972","endLine":149,"endColumn":41},{"ruleId":"1969","severity":1,"message":"1977","line":150,"column":41,"nodeType":"1971","messageId":"1972","endLine":150,"endColumn":43},{"ruleId":"1969","severity":1,"message":"1970","line":150,"column":60,"nodeType":"1971","messageId":"1972","endLine":150,"endColumn":62},{"ruleId":"2010","severity":1,"message":"2038","line":169,"column":51,"nodeType":"2012","messageId":"2039","endLine":169,"endColumn":53},{"ruleId":"1969","severity":1,"message":"1970","line":170,"column":39,"nodeType":"1971","messageId":"1972","endLine":170,"endColumn":41},{"ruleId":"1966","severity":1,"message":"1967","line":173,"column":31,"nodeType":"1968","endLine":180,"endColumn":33},{"ruleId":"1969","severity":1,"message":"1970","line":193,"column":44,"nodeType":"1971","messageId":"1972","endLine":193,"endColumn":46},{"ruleId":"1969","severity":1,"message":"1970","line":195,"column":47,"nodeType":"1971","messageId":"1972","endLine":195,"endColumn":49},{"ruleId":"2145","severity":1,"message":"2146","line":6,"column":3,"nodeType":"2147","messageId":"2148","endLine":8,"endColumn":4},{"ruleId":"1966","severity":1,"message":"1967","line":15,"column":11,"nodeType":"1968","endLine":15,"endColumn":71},{"ruleId":"2145","severity":1,"message":"2146","line":6,"column":3,"nodeType":"2147","messageId":"2148","endLine":8,"endColumn":4},{"ruleId":"1966","severity":1,"message":"1967","line":14,"column":11,"nodeType":"1968","endLine":14,"endColumn":71},{"ruleId":"1973","severity":1,"message":"2149","line":3,"column":10,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":19},{"ruleId":"1973","severity":1,"message":"2002","line":3,"column":21,"nodeType":"1960","messageId":"1975","endLine":3,"endColumn":27},{"ruleId":"1973","severity":1,"message":"2159","line":4,"column":10,"nodeType":"1960","messageId":"1975","endLine":4,"endColumn":16},{"ruleId":"1973","severity":1,"message":"2153","line":5,"column":8,"nodeType":"1960","messageId":"1975","endLine":5,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2160","line":6,"column":10,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2117","line":7,"column":10,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":15},{"ruleId":"1973","severity":1,"message":"2161","line":8,"column":10,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":17},{"ruleId":"1973","severity":1,"message":"2162","line":9,"column":13,"nodeType":"1960","messageId":"1975","endLine":9,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2157","line":12,"column":7,"nodeType":"1960","messageId":"1975","endLine":12,"endColumn":14},{"ruleId":"1966","severity":1,"message":"1967","line":36,"column":21,"nodeType":"1968","endLine":36,"endColumn":41},{"ruleId":"2145","severity":1,"message":"2146","line":6,"column":3,"nodeType":"2147","messageId":"2148","endLine":9,"endColumn":4},{"ruleId":"1966","severity":1,"message":"1967","line":18,"column":11,"nodeType":"1968","endLine":18,"endColumn":71},{"ruleId":"1973","severity":1,"message":"1983","line":2,"column":10,"nodeType":"1960","messageId":"1975","endLine":2,"endColumn":14},{"ruleId":"1973","severity":1,"message":"1984","line":13,"column":13,"nodeType":"1960","messageId":"1975","endLine":13,"endColumn":23},{"ruleId":"1973","severity":1,"message":"2154","line":7,"column":10,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":22},{"ruleId":"1973","severity":1,"message":"2163","line":43,"column":11,"nodeType":"1960","messageId":"1975","endLine":43,"endColumn":22},{"ruleId":"1973","severity":1,"message":"2164","line":44,"column":7,"nodeType":"1960","messageId":"1975","endLine":44,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2154","line":7,"column":10,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":47,"column":38,"nodeType":"1971","messageId":"1972","endLine":47,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1970","line":48,"column":24,"nodeType":"1971","messageId":"1972","endLine":48,"endColumn":26},{"ruleId":"1973","severity":1,"message":"2165","line":89,"column":7,"nodeType":"1960","messageId":"1975","endLine":89,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2166","line":90,"column":7,"nodeType":"1960","messageId":"1975","endLine":90,"endColumn":14},{"ruleId":"1973","severity":1,"message":"2151","line":66,"column":11,"nodeType":"1960","messageId":"1975","endLine":66,"endColumn":16},{"ruleId":"1973","severity":1,"message":"2167","line":82,"column":13,"nodeType":"1960","messageId":"1975","endLine":82,"endColumn":23},{"ruleId":"1969","severity":1,"message":"1970","line":92,"column":69,"nodeType":"1971","messageId":"1972","endLine":92,"endColumn":71},{"ruleId":"1973","severity":1,"message":"2154","line":7,"column":10,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":22},{"ruleId":"1973","severity":1,"message":"2168","line":32,"column":13,"nodeType":"1960","messageId":"1975","endLine":32,"endColumn":21},{"ruleId":"1973","severity":1,"message":"2153","line":7,"column":8,"nodeType":"1960","messageId":"1975","endLine":7,"endColumn":32},{"ruleId":"1973","severity":1,"message":"2169","line":25,"column":5,"nodeType":"1960","messageId":"1975","endLine":25,"endColumn":12},{"ruleId":"1969","severity":1,"message":"1977","line":220,"column":43,"nodeType":"1971","messageId":"1972","endLine":220,"endColumn":45},{"ruleId":"1973","severity":1,"message":"2170","line":1,"column":28,"nodeType":"1960","messageId":"1975","endLine":1,"endColumn":36},{"ruleId":"1973","severity":1,"message":"2091","line":6,"column":8,"nodeType":"1960","messageId":"1975","endLine":6,"endColumn":20},{"ruleId":"1973","severity":1,"message":"2154","line":8,"column":10,"nodeType":"1960","messageId":"1975","endLine":8,"endColumn":22},{"ruleId":"1969","severity":1,"message":"1977","line":41,"column":38,"nodeType":"1971","messageId":"1972","endLine":41,"endColumn":40},{"ruleId":"1969","severity":1,"message":"1970","line":42,"column":24,"nodeType":"1971","messageId":"1972","endLine":42,"endColumn":26},{"ruleId":"1969","severity":1,"message":"1970","line":45,"column":43,"nodeType":"1971","messageId":"1972","endLine":45,"endColumn":45},{"ruleId":"1969","severity":1,"message":"1970","line":46,"column":22,"nodeType":"1971","messageId":"1972","endLine":46,"endColumn":24},{"ruleId":"1981","severity":1,"message":"1982","line":20,"column":38,"nodeType":"1968","endLine":20,"endColumn":68},{"ruleId":"1966","severity":1,"message":"1967","line":20,"column":68,"nodeType":"1968","endLine":20,"endColumn":144},{"ruleId":"1966","severity":1,"message":"1967","line":22,"column":9,"nodeType":"1968","endLine":22,"endColumn":65},{"ruleId":"1992","severity":1,"message":"1993","line":30,"column":15,"nodeType":"1994","endLine":30,"endColumn":49},{"ruleId":"1981","severity":1,"message":"1982","line":15,"column":38,"nodeType":"1968","endLine":15,"endColumn":68},{"ruleId":"1966","severity":1,"message":"1967","line":15,"column":68,"nodeType":"1968","endLine":15,"endColumn":144},{"ruleId":"1966","severity":1,"message":"1967","line":17,"column":9,"nodeType":"1968","endLine":17,"endColumn":65},{"ruleId":"1992","severity":1,"message":"1993","line":25,"column":15,"nodeType":"1994","endLine":25,"endColumn":49},{"ruleId":"1958","severity":1,"message":"2171","line":33,"column":6,"nodeType":"2119","endLine":33,"endColumn":24,"suggestions":"2172"},{"ruleId":"1981","severity":1,"message":"1982","line":38,"column":9,"nodeType":"1968","endLine":38,"endColumn":39},{"ruleId":"1966","severity":1,"message":"1967","line":38,"column":39,"nodeType":"1968","endLine":75,"endColumn":16},{"ruleId":"1966","severity":1,"message":"1967","line":77,"column":9,"nodeType":"1968","endLine":77,"endColumn":65},{"ruleId":"1969","severity":1,"message":"1970","line":174,"column":37,"nodeType":"1971","messageId":"1972","endLine":174,"endColumn":39},{"ruleId":"1969","severity":1,"message":"1970","line":181,"column":37,"nodeType":"1971","messageId":"1972","endLine":181,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["2173"],"no-native-reassign",["2174"],"no-negated-in-lhs",["2175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'confirmSignupSuccess' is defined but never used.","unusedVar","'validationSchema' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'mobileLength' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'closePopup' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'formateDateMonth' is defined but never used.","'isActive' is assigned a value but never used.","'EditSuccess' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DatePicker' is defined but never used.","no-dupe-keys","Duplicate key 'addFlag'.","ObjectExpression","'ProfileDropdown' is defined but never used.","'Notification' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'TimePicker' is defined but never used.","'searcho' is defined but never used.","'header_logo' is defined but never used.","'logom' is defined but never used.","'doc' is defined but never used.","'showNotification' is assigned a value but never used.","'logout' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Helmet' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","'Images' is defined but never used.","'draftDetailSuccess' is defined but never used.","Duplicate key 'imageURL'.","Duplicate key 'coverImage'.","'tempId' is assigned a value but never used.","'teeObject' is assigned a value but never used.","'sortattrValCheck' is assigned a value but never used.","'draftDetailSuccess' is assigned a value but never used.","'sortimage' is assigned a value but never used.","'documentName' is assigned a value but never used.","'metaData' is assigned a value but never used.","'templateDetail' is assigned a value but never used.","'templateId' is assigned a value but never used.","'time' is assigned a value but never used.","'attrVal' is assigned a value but never used.","'imgList' is assigned a value but never used.","'image' is assigned a value but never used.","'reciverData' is assigned a value but never used.","'thumbnail' is assigned a value but never used.","'text' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Duplicate key 'createTikEdit'.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'editFlag', 'finalObj.acceptance_form', 'props', and 'searchValue'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2176"],"Unexpected mix of '&&' and '||'.","'editFlag' is assigned a value but never used.","'addFlag' is assigned a value but never used.","'editData' is assigned a value but never used.","'certi' is defined but never used.","'QRCode' is assigned a value but never used.","'loader' is assigned a value but never used.","'_id' is assigned a value but never used.","'autoSaveSuccess' is assigned a value but never used.","'Table' is defined but never used.","'SuccessPopup' is defined but never used.","'formatTime' is defined but never used.","'actionsData' is assigned a value but never used.","'transId' is assigned a value but never used.","'Validity' is assigned a value but never used.","'percentageChange' is assigned a value but never used.","'tabData' is assigned a value but never used.","'percentageOfChange' is assigned a value but never used.","'templateObj' is assigned a value but never used.","'templateDetailsInfo' is assigned a value but never used.","'subscriptionPlanDetails' is assigned a value but never used.","'transactionList' is assigned a value but never used.","'moment' is defined but never used.","'simpleSearchValues' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'formatDate' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'price' is assigned a value but never used.","'Reports' is defined but never used.","'TikFilter' is defined but never used.","'title' is assigned a value but never used.","'tikReportsTab' is assigned a value but never used.","'totalNumberTik' is assigned a value but never used.","'averageTik' is assigned a value but never used.","'totalNumberDay' is assigned a value but never used.","'tikReportsTitle' is assigned a value but never used.","'XAxiosTitle' is assigned a value but never used.","'selectedTab' is assigned a value but never used.","'sortedReportData' is assigned a value but never used.","'SuccessModal' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["2177","2178"],"'showSuccess' is assigned a value but never used.","'message' is assigned a value but never used.","'subscriptionData' is assigned a value but never used.","'myPlan' is assigned a value but never used.","'WithLayoutContainer' is defined but never used.","Unnecessary escape character: \\[.",["2179","2180"],"Unnecessary escape character: \\..",["2181","2182"],["2183","2184"],["2185","2186"],["2187","2188"],["2189","2190"],["2191","2192"],["2193","2194"],["2195","2196"],["2197","2198"],["2199","2200"],["2201","2202"],"'AnalystListingTitle' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array.","ArrayExpression",["2203"],"React Hook useEffect has a missing dependency: 'handleMonthYearBlurred'. Either include it or remove the dependency array.",["2204"],"React Hook useEffect has a missing dependency: 'handleOutsideClick'. Either include it or remove the dependency array.",["2205"],"'useRef' is defined but never used.","'advanceSearchValue' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'dropdownFlag' is assigned a value but never used.","'deleteButtonOnClick' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Block is redundant.","redundantBlock","'history' is assigned a value but never used.","'cal' is defined but never used.","'notificationData' is assigned a value but never used.","'Redirect' is defined but never used.","'specialFeatures' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2206"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TextInput' is defined but never used.","'PhoneInput' is defined but never used.","'user2' is assigned a value but never used.","'sentNum' is assigned a value but never used.","'authenticationFormSchema' is defined but never used.","'withSnackbar' is defined but never used.","'resendTime' is defined but never used.","Duplicate key 'submit'.","'options' is assigned a value but never used.","'sharedData' is assigned a value but never used.","'Formik' is defined but never used.","'Auth' is defined but never used.","'connect' is defined but never used.","'actions' is defined but never used.","'fiveMinutes' is assigned a value but never used.","'display' is assigned a value but never used.","'minutes' is defined but never used.","'seconds' is defined but never used.","'loggedUser' is assigned a value but never used.","'userName' is assigned a value but never used.","'display' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'checkAutoSave', 'checkAutoSaveBtn', 'handleAutoSaveCheckbox', 'values.template_name', and 'values.template_type'. Either include them or remove the dependency array.",["2207"],{"desc":"2208","fix":"2209"},"no-global-assign","no-unsafe-negation",{"desc":"2210","fix":"2211"},{"messageId":"2212","fix":"2213","desc":"2214"},{"messageId":"2215","fix":"2216","desc":"2217"},{"messageId":"2212","fix":"2218","desc":"2214"},{"messageId":"2215","fix":"2219","desc":"2217"},{"messageId":"2212","fix":"2220","desc":"2214"},{"messageId":"2215","fix":"2221","desc":"2217"},{"messageId":"2212","fix":"2222","desc":"2214"},{"messageId":"2215","fix":"2223","desc":"2217"},{"messageId":"2212","fix":"2224","desc":"2214"},{"messageId":"2215","fix":"2225","desc":"2217"},{"messageId":"2212","fix":"2226","desc":"2214"},{"messageId":"2215","fix":"2227","desc":"2217"},{"messageId":"2212","fix":"2228","desc":"2214"},{"messageId":"2215","fix":"2229","desc":"2217"},{"messageId":"2212","fix":"2230","desc":"2214"},{"messageId":"2215","fix":"2231","desc":"2217"},{"messageId":"2212","fix":"2232","desc":"2214"},{"messageId":"2215","fix":"2233","desc":"2217"},{"messageId":"2212","fix":"2234","desc":"2214"},{"messageId":"2215","fix":"2235","desc":"2217"},{"messageId":"2212","fix":"2236","desc":"2214"},{"messageId":"2215","fix":"2237","desc":"2217"},{"messageId":"2212","fix":"2238","desc":"2214"},{"messageId":"2215","fix":"2239","desc":"2217"},{"messageId":"2212","fix":"2240","desc":"2214"},{"messageId":"2215","fix":"2241","desc":"2217"},{"desc":"2242","fix":"2243"},{"desc":"2244","fix":"2245"},{"desc":"2246","fix":"2247"},{"desc":"2248","fix":"2249"},{"desc":"2250","fix":"2251"},"Add dependencies array: []",{"range":"2252","text":"2253"},"Update the dependencies array to be: [editFlag, finalObj.acceptance_form, props, searchValue]",{"range":"2254","text":"2255"},"removeEscape",{"range":"2256","text":"2257"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2258","text":"2259"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2260","text":"2257"},{"range":"2261","text":"2259"},{"range":"2262","text":"2257"},{"range":"2263","text":"2259"},{"range":"2264","text":"2257"},{"range":"2265","text":"2259"},{"range":"2266","text":"2257"},{"range":"2267","text":"2259"},{"range":"2268","text":"2257"},{"range":"2269","text":"2259"},{"range":"2270","text":"2257"},{"range":"2271","text":"2259"},{"range":"2272","text":"2257"},{"range":"2273","text":"2259"},{"range":"2274","text":"2257"},{"range":"2275","text":"2259"},{"range":"2276","text":"2257"},{"range":"2277","text":"2259"},{"range":"2278","text":"2257"},{"range":"2279","text":"2259"},{"range":"2280","text":"2257"},{"range":"2281","text":"2259"},{"range":"2282","text":"2257"},{"range":"2283","text":"2259"},"Update the dependencies array to be: [month, onChange, year]",{"range":"2284","text":"2285"},"Update the dependencies array to be: [monthFocus, yearFocus, isOutside, isClicked, handleMonthYearBlurred]",{"range":"2286","text":"2287"},"Update the dependencies array to be: [handleOutsideClick, isClicked]",{"range":"2288","text":"2289"},"Update the dependencies array to be: [props]",{"range":"2290","text":"2291"},"Update the dependencies array to be: [checkAutoSave, checkAutoSaveBtn, handleAutoSaveCheckbox, values.attribute, values.template_name, values.template_type]",{"range":"2292","text":"2293"},[1769,1769],", []",[1160,1162],"[editFlag, finalObj.acceptance_form, props, searchValue]",[3613,3614],"",[3613,3613],"\\",[2027,2028],[2027,2027],[2031,2032],[2031,2031],[2039,2040],[2039,2039],[2052,2053],[2052,2052],[2056,2057],[2056,2056],[2064,2065],[2064,2064],[2073,2074],[2073,2073],[2077,2078],[2077,2077],[2093,2094],[2093,2093],[2101,2102],[2101,2101],[2118,2119],[2118,2118],[2126,2127],[2126,2126],[2270,2283],"[month, onChange, year]",[5017,5062],"[monthFocus, yearFocus, isOutside, isClicked, handleMonthYearBlurred]",[5287,5298],"[handleOutsideClick, isClicked]",[863,865],"[props]",[1213,1231],"[checkAutoSave, checkAutoSaveBtn, handleAutoSaveCheckbox, values.attribute, values.template_name, values.template_type]"]